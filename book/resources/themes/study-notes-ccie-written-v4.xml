<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<book lang="en">
<bookinfo>
    <title>CCIE written study notes</title>
</bookinfo>
<part id="_implement_layer_2_technologies">
<title>Implement Layer 2 technologies</title>
<chapter id="_ethernet_technologies">
<title>Ethernet technologies</title>
<section id="_concepts">
<title>Concepts</title>
<section id="_introduction">
<title>Introduction</title>
<itemizedlist>
<listitem>
<simpara>
IEEE 802.3 standards
</simpara>
</listitem>
<listitem>
<simpara>
CSMA/CD protocol.
</simpara>
</listitem>
<listitem>
<simpara>
medium: coaxial, twisted-pair, optical fiber
</simpara>
</listitem>
<listitem>
<simpara>
Four data rates
</simpara>
<itemizedlist>
<listitem>
<simpara>
10 Mbps: Ethernet
</simpara>
</listitem>
<listitem>
<simpara>
100 Mbps: Fast Ethernet
</simpara>
</listitem>
<listitem>
<simpara>
1000 Mbps: Gigabit Ethernet
</simpara>
</listitem>
<listitem>
<simpara>
10000 Mbps: 10-gigabit  Ethernet
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section id="_ethernet_frame_formats">
<title>Ethernet Frame Formats</title>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ethernet-framing-options.png" contentdepth="250"/>
  </imageobject>
  <textobject><phrase>Ethernet framing options</phrase></textobject>
</mediaobject>
</informalfigure>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">Preamble</emphasis> (DIX)
</simpara>
<itemizedlist>
<listitem>
<simpara>
8 bytes
</simpara>
</listitem>
<listitem>
<simpara>
Provides synchronization and signal transitions to allow proper clocking of the transmitted signal.
</simpara>
</listitem>
<listitem>
<simpara>
Consists of 62 alternating 1s and 0s, and ends with a pair of 1s.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Preamble</emphasis> and <emphasis role="strong">Start of Frame Delimiter</emphasis> (802.3)
</simpara>
<itemizedlist>
<listitem>
<simpara>
7 bytes + 1 byte
</simpara>
</listitem>
<listitem>
<simpara>
Same purpose and binary value as DIX preamble
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Type</emphasis> (or Protocol Type) DIX
</simpara>
<itemizedlist>
<listitem>
<simpara>
2 bytes
</simpara>
</listitem>
<listitem>
<simpara>
Identifies the type of protocol or protocol header that follows the header.
</simpara>
</listitem>
<listitem>
<simpara>
Allows the receiver of the frame to know how to process a received frame.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Length</emphasis> (802.3):
</simpara>
<itemizedlist>
<listitem>
<simpara>
Describes the length in bytes of the data following the Length field, up to the Ethernet trailer.
</simpara>
</listitem>
<listitem>
<simpara>
Allows an Ethernet receiver to predict the end of the received frame.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Destination address</emphasis> (DA)
</simpara>
<itemizedlist>
<listitem>
<simpara>
Can be an individual or group address
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Source address</emphasis>
</simpara>
<itemizedlist>
<listitem>
<simpara>
Always individual address
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Destination Service Access Protocol</emphasis> DSAP
</simpara>
<itemizedlist>
<listitem>
<simpara>
1 byte
</simpara>
</listitem>
<listitem>
<simpara>
The size limitations, along with other Point (802.2) uses of the low-order bits, required the later addition of SNAP headers.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Source Service Access Protocol</emphasis> SSAP:
</simpara>
<itemizedlist>
<listitem>
<simpara>
1 byte
</simpara>
</listitem>
<listitem>
<simpara>
Describes the upper-layer protocol Point (802.2) that created the frame.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Control</emphasis> (802.2):
</simpara>
<itemizedlist>
<listitem>
<simpara>
1 or 2 bytes
</simpara>
</listitem>
<listitem>
<simpara>
enables both connectionless and connection-oriented operation.
</simpara>
</listitem>
<listitem>
<simpara>
Generally used only for connectionless operation by modern protocols, with a 1-byte value of 0x03.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Organizationally Unique Identifier</emphasis> (SNAP):
</simpara>
<itemizedlist>
<listitem>
<simpara>
3-byte field,
</simpara>
</listitem>
<listitem>
<simpara>
Generally unused today,
</simpara>
</listitem>
<listitem>
<simpara>
providing a place for the sender of the frame to code the OUI representing the manufacturer of the Ethernet NIC.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Type</emphasis> (SNAP):
</simpara>
<itemizedlist>
<listitem>
<simpara>
2-byte Type field,
</simpara>
</listitem>
<listitem>
<simpara>
using same values as the DIX Type field, overcoming deficiencies with size and use of the DSAP field.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Data</emphasis>:
</simpara>
<itemizedlist>
<listitem>
<simpara>
n bytes where 46 &#8656; n &#8656; 1500
</simpara>
</listitem>
<listitem>
<simpara>
if n &lt; 46, use padding
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">FCS</emphasis>: Frame check sequence
</simpara>
<itemizedlist>
<listitem>
<simpara>
4 bytes
</simpara>
</listitem>
<listitem>
<simpara>
contains a 32-bit cyclic redundancy check (CRC) value
</simpara>
</listitem>
<listitem>
<simpara>
calculated by the sending MAC
</simpara>
</listitem>
<listitem>
<simpara>
re-calculated by the receiving MAC to check for damaged frames.
</simpara>
</listitem>
<listitem>
<simpara>
generated from the DA, SA, Length/Type, and Data fields
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section id="_ethernet_mac_addresses">
<title>Ethernet MAC Addresses</title>
<itemizedlist>
<listitem>
<simpara>
48 bits represented in hexadecimal
</simpara>
</listitem>
<listitem>
<simpara>
Canonical transmission (little endian)= MSO to LSO with LSB to MSB for each octet
</simpara>
</listitem>
<listitem>
<simpara>
Most significant octet first, but for each octect, the LSB is transmitted first
</simpara>
</listitem>
</itemizedlist>
<screen>Example: AC-10-7b-3a-92-3c

convert to hexa: 10101100 00010000 01101011 00111010 01010010 00111100
transmission: 00110101 00001000 11010110 01011100 01001010 00111100</screen>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ethernet-mac-address.png" contentdepth="240"/>
  </imageobject>
  <textobject><phrase>Ethernet mac address</phrase></textobject>
</mediaobject>
</informalfigure>
<itemizedlist>
<listitem>
<simpara>
Fields:
</simpara>
<itemizedlist>
<listitem>
<simpara>
OUI: first 3 bytes,  Organizational Unique Identifier
</simpara>
</listitem>
<listitem>
<simpara>
I/G: (0/1) individual or Group address, first bit to be transmitted
</simpara>
</listitem>
<listitem>
<simpara>
U/L: (0/1) universally  or Locally administrated
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section id="_types_of_mac_addresses">
<title>Types of MAC addresses</title>
<itemizedlist>
<listitem>
<simpara>
Unicast : I/G bit = 0
</simpara>
</listitem>
<listitem>
<simpara>
Multicast: I/G bit = 1
</simpara>
</listitem>
<listitem>
<simpara>
Broadcast: all devices in the segment
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_rj_45_pinouts_and_cat5_wiring">
<title>RJ-45 pinouts and Cat5 wiring</title>
<itemizedlist>
<listitem>
<simpara>
defined by EIA/TIA (<ulink url="http://www.eia.org">http://www.eia.org</ulink> and <ulink url="http://www.tiaonline.org">http://www.tiaonline.org</ulink>)
</simpara>
</listitem>
</itemizedlist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ethernet-pinouts.png" contentdepth="100"/>
  </imageobject>
  <textobject><phrase>Ehernet and ISO</phrase></textobject>
</mediaobject>
</informalfigure>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>Ethernet cabling types</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="18*"/>
<colspec colname="col_2" colwidth="45*"/>
<colspec colname="col_3" colwidth="36*"/>
<thead>
<row>
<entry align="left" valign="top"> Type of cable </entry>
<entry align="left" valign="top"> Pinouts </entry>
<entry align="left" valign="top"> Key pins connected</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Straight-through</simpara></entry>
<entry align="left" valign="top"><simpara>T568A or T568B both ends</simpara></entry>
<entry align="left" valign="top"><simpara>1-1; 2-2; 3-3; 6-6</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Cross-over</simpara></entry>
<entry align="left" valign="top"><simpara>T568A on one end,  T568B on the other</simpara></entry>
<entry align="left" valign="top"><simpara>1-3; 2-6; 3-1; 6-2</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<note><simpara>Cisco also supports a switch feature that lets the switch figure out if the wrong cable is installed:
Auto-MDIX (automatic medium-dependent interface crossover) detects the wrong cable and
causes the switch to swap the pair it uses for transmitting and receiving, which solves the cabling
problem. This feature is not supported on all Cisco switch models.</simpara></note>
</section>
<section id="_ethernet_types_and_cabling_standards">
<title>Ethernet types and cabling standards</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="3">
<colspec colname="col_1" colwidth="20*"/>
<colspec colname="col_2" colwidth="40*"/>
<colspec colname="col_3" colwidth="40*"/>
<thead>
<row>
<entry align="left" valign="top">Standard   </entry>
<entry align="left" valign="top"> Cabling                               </entry>
<entry align="left" valign="top"> Maximum Single Cable Length</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>10BASE5</simpara></entry>
<entry align="left" valign="top"><simpara>Thick coaxial</simpara></entry>
<entry align="left" valign="top"><simpara>500 m</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>10BASE2</simpara></entry>
<entry align="left" valign="top"><simpara>Thin coaxial</simpara></entry>
<entry align="left" valign="top"><simpara>185 m</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>10BASE-T</simpara></entry>
<entry align="left" valign="top"><simpara>UTP Cat 3, 4, 5, 5e, 6</simpara></entry>
<entry align="left" valign="top"><simpara>100 m</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>100BASE-FX</simpara></entry>
<entry align="left" valign="top"><simpara>Two strands, multimode</simpara></entry>
<entry align="left" valign="top"><simpara>400 m</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>100BASE-T</simpara></entry>
<entry align="left" valign="top"><simpara>UTP Cat 3, 4, 5, 5e, 6, 2 pair</simpara></entry>
<entry align="left" valign="top"><simpara>100 m</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>100BASE-T4</simpara></entry>
<entry align="left" valign="top"><simpara>UTP Cat 3, 4, 5, 5e, 6, 4 pair</simpara></entry>
<entry align="left" valign="top"><simpara>100 m</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>100BASE-TX</simpara></entry>
<entry align="left" valign="top"><simpara>UTP Cat 3, 4, 5, 5e, 6, or STP, 2 air</simpara></entry>
<entry align="left" valign="top"><simpara>100 m</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section id="_auto_negotiation">
<title>Auto-negotiation</title>
<simpara>By default, each Cisco switch port uses Ethernet auto-negotiation to determine the speed and
duplex setting (half or full). The switches can also set their duplex setting with the duplex
interface subcommand, and their speed with—you guessed it—the speed interface subcommand.
Switches can dynamically detect the speed setting on a particular Ethernet segment by using a few
different methods. Cisco switches (and many other devices) can sense the speed using the Fast
Link Pulses (FLP) of the auto-negotiation process. However, if auto-negotiation is disabled on
either end of the cable, the switch detects the speed anyway based on the incoming electrical
signal. You can force a speed mismatch by statically configuring different speeds on either end of
the cable, causing the link to no longer function.</simpara>
<simpara>Switches detect duplex settings through auto-negotiation only. If both ends have auto-
negotiation enabled, the duplex is negotiated. However, if either device on the cable disables
auto-negotiation, the devices without a configured duplex setting must assume a default. Cisco
switches use a default duplex setting of half duplex (HDX) (for 10-Mbps and 100-Mbps
interfaces) or full duplex (FDX) (for 1000-Mbps interfaces). To disable auto-negotiation on a
Cisco switch port, you simply need to statically configure the speed and the duplex settings.
Ethernet devices can use FDX only when collisions cannot occur on the attached cable; a
collision-free link can be guaranteed only when a shared hub is not in use. The next few topics
review how Ethernet deals with collisions when they do occur, as well as what is different with
Ethernet logic in cases where collisions cannot occur and FDX is allowed.</simpara>
</section>
<section id="_switch_internal_processing">
<title>Switch  internal processing</title>
<simpara>Switches forward frames when necessary, and do not forward when there is no need to do so, thus
reducing overhead.</simpara>
<simpara>To accomplish this, switches perform three actions:</simpara>
<itemizedlist>
<listitem>
<simpara>
Learn MAC addresses by examining the source MAC address of each received frame
</simpara>
</listitem>
<listitem>
<simpara>
Decide when to forward a frame or when to filter (not forward) a frame, based on the destination MAC address
</simpara>
</listitem>
<listitem>
<simpara>
Create a loop-free environment with other bridges by using the Spanning Tree Protocol
</simpara>
<variablelist>
<varlistentry>
<term>
Store-and-forward
</term>
<listitem>
<simpara>
The switch fully receives all bits in the frame (store) before forwarding
the frame (forward). This allows the switch to check the FCS before
forwarding the frame, thus ensuring that errored frames are not forwarded.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Cut-through
</term>
<listitem>
<simpara>
The switch performs the address table lookup as soon as the Destination
Address field in the header is received. The first bits in the frame can be sent out
the outbound port before the final bits in the incoming frame are received. This
does not allow the switch to discard frames that fail the FCS check, but the
forwarding action is faster, resulting in lower latency.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Fragment-free
</term>
<listitem>
<simpara>
This performs like cut-through switching, but the switch waits for 64 bytes to be
received before forwarding the first bytes of the outgoing frame. According to
Ethernet specifications, collisions should be detected during the first 64 bytes of
the frame, so frames that are in error because of a collision will not be forwarded.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</listitem>
</itemizedlist>
<simpara>What is the default mode in Cat 3650 ?</simpara>
</section>
</section>
<section id="_switching_and_bridging_logic">
<title>Switching and bridging logic</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="75*"/>
<thead>
<row>
<entry align="left" valign="top">Type of Address</entry>
<entry align="left" valign="top"> Switch Action</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Known unicast</simpara></entry>
<entry align="left" valign="top"><simpara>Forwards frame out the single interface associated with the destination address</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Unknown unicast</simpara></entry>
<entry align="left" valign="top"><simpara>Floods frame out all interfaces, except the interface on which the frame was received</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Broadcast</simpara></entry>
<entry align="left" valign="top"><simpara>Floods frame identically to unknown unicasts</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Multicast</simpara></entry>
<entry align="left" valign="top"><simpara>Floods frame identically to unknown unicasts, unless multicast optimizations are configured</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<section id="_utp_cabling_references">
<title>UTP cabling references</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="3">
<colspec colname="col_1" colwidth="10*"/>
<colspec colname="col_2" colwidth="10*"/>
<colspec colname="col_3" colwidth="80*"/>
<thead>
<row>
<entry align="left" valign="top"> UTP  Category </entry>
<entry align="left" valign="top"> Max Speed        </entry>
<entry align="left" valign="top"> Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>1</simpara></entry>
<entry align="left" valign="top"><simpara>—</simpara></entry>
<entry align="left" valign="top"><simpara>for telephones, and not for data</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>2</simpara></entry>
<entry align="left" valign="top"><simpara>4 Mbps</simpara></entry>
<entry align="left" valign="top"><simpara>for Token Ring over UTP</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>3</simpara></entry>
<entry align="left" valign="top"><simpara>10 Mbps</simpara></entry>
<entry align="left" valign="top"><simpara>for telephones and Ethernet in years past when Cat 3 cabling for phones was already in place</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>4</simpara></entry>
<entry align="left" valign="top"><simpara>16 Mbps</simpara></entry>
<entry align="left" valign="top"><simpara>for the fast Token Ring speed option</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>5</simpara></entry>
<entry align="left" valign="top"><simpara>1 Gbps</simpara></entry>
<entry align="left" valign="top"><simpara>Very popular for cabling to the desktop</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>5e</simpara></entry>
<entry align="left" valign="top"><simpara>1 Gbps</simpara></entry>
<entry align="left" valign="top"><simpara>Added mainly for the support of copper cabling for Gigabit Ethernet</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>6</simpara></entry>
<entry align="left" valign="top"><simpara>1 Gbps+</simpara></entry>
<entry align="left" valign="top"><simpara>Intended as a replacement for Cat 5e, with capabilities to support multigigabit speeds</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</section>
<section id="_configuration_tasks">
<title>Configuration tasks</title>
<simpara>Puts user in interface configuration mode for that interface</simpara>
<screen>interface fastethernet 0/x</screen>
<simpara>Set duplex mode for the interface</simpara>
<screen>duplex {auto | full | half}</screen>
<simpara>Set speed for the interface</simpara>
<screen>speed {10 | 100 | 1000 | auto |        nonegotiate}</screen>
<simpara>Show configuration</simpara>
<screen>Router# show controllers fastethernet1
!
Interface FastEthernet1   MARVELL 88E6052
Link is DOWN
Port is undergoing Negotiation or Link down
Speed :Not set, Duplex :Not set
!
Switch PHY Registers:
~~~~~~~~~~~~~~~~~~~~~
00 : 3100   01 : 7849   02 : 0141   03 : 0C1F   04 : 01E1
05 : 0000   06 : 0004   07 : 2001   08 : 0000   16 : 0130
17 : 0002   18 : 0000   19 : 0040   20 : 0000   21 : 0000
!
Switch Port Registers:
~~~~~~~~~~~~~~~~~~~~~~
Port Status Register       [00] : 0800
Switch Identifier Register [03] : 0520
Port Control Register      [04] : 007F
Rx Counter Register        [16] : 000A
Tx Counter Register        [17] : 0008</screen>
<simpara>Show MAC address table</simpara>
<screen>Switch1# show mac-address-table dynamic
  Mac Address Table
  ------------------------------------------
  Vlan Mac Address Type Ports
  ---- ----------- ---- -----
  1 000f.2343.87cd DYNAMIC Fa0/13
  1 0200.3333.3333 DYNAMIC Fa0/3
  1 0200.4444.4444 DYNAMIC Fa0/13</screen>
</section>
<section id="_standards">
<title>Standards</title>
<informaltable
frame="none"
rowsep="0" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="10*"/>
<colspec colname="col_2" colwidth="90*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>802.1Q</simpara></entry>
<entry align="left" valign="top"><simpara>dot1q trunking</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>802.1d</simpara></entry>
<entry align="left" valign="top"><simpara>STP</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>802.1s</simpara></entry>
<entry align="left" valign="top"><simpara>MST</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>802.1w</simpara></entry>
<entry align="left" valign="top"><simpara>Rapid STP</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>802.1ax</simpara></entry>
<entry align="left" valign="top"><simpara>KACP (formerly 802.3ad)</simpara></entry>
</row>
<row>
</row>
<row>
<entry align="left" valign="top"><simpara>802.2</simpara></entry>
<entry align="left" valign="top"><simpara>Logical Link Control</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>802.3u</simpara></entry>
<entry align="left" valign="top"><simpara>Fast ethernet over copper and optical cable</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>802.3z</simpara></entry>
<entry align="left" valign="top"><simpara>Gigabit ethernet over optical cable</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>802.3ab</simpara></entry>
<entry align="left" valign="top"><simpara>Gigabit ethernet over copper cable</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section id="_troubleshooting">
<title>Troubleshooting</title>
<itemizedlist>
<listitem>
<simpara>
Add something about excessive collisions, late collisions, runts, re: duplex mismatches
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_sources">
<title>Sources</title>
<itemizedlist>
<listitem>
<simpara>
<ulink url="http://docwiki.cisco.com/wiki/Ethernet_Technologies">Ethernet technologies</ulink>
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="http://en.wikipedia.org/wiki/10-gigabit_Ethernet">10-gigabit Ethernet</ulink>
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_todos">
<title>Todos</title>
<simpara>Add configuring layer 2 ethernet interfaces</simpara>
<simpara><ulink url="http://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst4500/12-2/31sga/configuration/guide/config/layer2.html#wp1020498">http://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst4500/12-2/31sga/configuration/guide/config/layer2.html#wp1020498</ulink></simpara>
</section>
</chapter>
<chapter id="_vlan">
<title>VLAN</title>
<section id="_concepts_2">
<title>concepts</title>
<itemizedlist>
<listitem>
<simpara>
administratively defined subset of switch ports that are in the same broadcast domain
</simpara>
</listitem>
<listitem>
<simpara>
best practice: one VLAN, one IP subnet
</simpara>
</listitem>
<listitem>
<simpara>
traffic inside same VLAN is layer 2 switched
</simpara>
</listitem>
<listitem>
<simpara>
traffic between VLANs is layer 3 routed
</simpara>
</listitem>
<listitem>
<simpara>
can span multiple physical switches over "trunks"
</simpara>
</listitem>
</itemizedlist>
<section id="_private_vlans">
<title>Private VLANs</title>
<itemizedlist>
<listitem>
<simpara>
separate ports as if they are on different VLAN while consuming only one subset.
</simpara>
</listitem>
<listitem>
<simpara>
typically use by service provider in a multi-tenant offerings: one router, one switch, multiple customers
</simpara>
</listitem>
<listitem>
<simpara>
pVLAN = one primary VLAN ( promiscuous ports) + multiple secondary VLANs ( community and isolated ports)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_vlan_numbering">
<title>VLAN numbering</title>
<itemizedlist>
<listitem>
<simpara>
VLAN ID = 12 bits
</simpara>
<variablelist>
<varlistentry>
<term>
Reserved [0, 4095] 
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
not available for use
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Normal-range [1-1005]
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
advertised and pruned by VTP v1 and v2 except vlan 1, 1002-1005
</simpara>
</listitem>
<listitem>
<simpara>
configured in both vlan database mode and configuration mode
</simpara>
</listitem>
<listitem>
<simpara>
stored in VLAN.DAT file in Flash
</simpara>
</listitem>
<listitem>
<simpara>
Special vlans:
</simpara>
<itemizedlist>
<listitem>
<simpara>
Vlan 1 is the default Ethernet VLAN for all access ports; cannot be deleted or changed.
</simpara>
</listitem>
<listitem>
<simpara>
Vlan 1002-1004 : default for FDDI
</simpara>
</listitem>
<listitem>
<simpara>
Vlan 1002-1005 : default for Token Ring translational bridge.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Extended-range [1006-4094] 
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
cannot be advertised or pruned by VTP v1 and v2
</simpara>
</listitem>
<listitem>
<simpara>
configured only in VTP transparent mode
</simpara>
</listitem>
<listitem>
<simpara>
stored only in the running configuration
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</listitem>
</itemizedlist>
</section>
<section id="_vlan_trunks">
<title>VLAN Trunks</title>
<itemizedlist>
<listitem>
<simpara>
trunk links transport traffic for multiple VLANs between devices
</simpara>
</listitem>
<listitem>
<simpara>
trunking add ISL or 802.1q headers to include VLAN id.
</simpara>
<itemizedlist>
<listitem>
<simpara>
ISL : Cisco proprietary, 30-bytes (26-byte header + 4-byte trailer), does not modify original frame
</simpara>
</listitem>
<listitem>
<simpara>
802.1q: IEEE standard, 4-byte tag except for native VLAN, modifies original frame
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration_tasks_2">
<title>Configuration tasks</title>
<section id="_basic_configuration">
<title>Basic configuration</title>
<simpara>Configuring VLANs requires few steps:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
Create the VLAN itself
</simpara>
</listitem>
<listitem>
<simpara>
Associate the correct ports with VLAN
</simpara>
</listitem>
</orderedlist>
<simpara>VLAN creation can be done either in VLAN database mode configuration (after <emphasis role="strong">vlan database</emphasis> ) or normal configuration mode</simpara>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>Catalyst 3550 VLAN database vs configuration mode</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>VLAN Database</simpara></entry>
<entry align="left" valign="top"><simpara>Configuration</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>vtp {domain domain-name | password password | pruning | v2-mode | {server | client | transparent}}</simpara></entry>
<entry align="left" valign="top"><simpara>vtp {domain domain-name | file filename | interface name | mode {client | server | transparent} | password password | pruning | version number}</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>vlan vlan-id [backupcrf {enable | disable}] [mtu mtu-size] [name vlan-name] [parent parent-vlan-id] [state {suspend | active}]</simpara></entry>
<entry align="left" valign="top"><simpara>vlan vlan-id 1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>show {current | proposed | difference}</simpara></entry>
<entry align="left" valign="top"><simpara>No equivalent</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>apply | abort | reset</simpara></entry>
<entry align="left" valign="top"><simpara>No equivalent</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</section>
<section id="_troubleshoot">
<title>Troubleshoot</title>
<simpara>Check "Creating ethernet vlans on catalyst switches: troubleshoot tips"</simpara>
<itemizedlist>
<listitem>
<simpara>
SVI will be in "up/down" state after being deleted
</simpara>
</listitem>
<listitem>
<simpara>
SVI will be in "up/up" if
</simpara>
<itemizedlist>
<listitem>
<simpara>
the VLAN associated with the SVI exists in the VLAN database
</simpara>
</listitem>
<listitem>
<simpara>
at least one trunk or access port in the "up/up" state has been assigned to the VLAN
</simpara>
</listitem>
<listitem>
<simpara>
those ports in the "up/up" state are not blocked by STP
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter id="_vtp">
<title>VTP</title>
<section id="_concepts_3">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
VTP vlan trunk protocol
</simpara>
</listitem>
<listitem>
<simpara>
cisco-proprietary that distributes VLAN information among Catalyst switches
</simpara>
</listitem>
<listitem>
<simpara>
advertises the VLAN Id, Name and Type but not which ports should be in each VLAN
</simpara>
</listitem>
<listitem>
<simpara>
ease administrative burden for addition, deletion and renaming of VLANs
</simpara>
</listitem>
</itemizedlist>
<section id="_vtp_messages">
<title>VTP messages</title>
<itemizedlist>
<listitem>
<simpara>
encapsulated in ISL or 802.1q frames
</simpara>
</listitem>
<listitem>
<simpara>
multicasted to  mac address: 0100-0CCC-CCCC, LLC code: SNAP (AAAA), Type 2003 in the SNAP Header
</simpara>
</listitem>
<listitem>
<simpara>
carried through trunk ports and VLAN 1
</simpara>
</listitem>
</itemizedlist>
<figure><title>example VTP packet encapsulated in ISL frame</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/vtp-in-isl.png" contentdepth="80"/>
  </imageobject>
  <textobject><phrase>images/vtp-in-isl.png</phrase></textobject>
</mediaobject>
</figure>
<itemizedlist>
<listitem>
<simpara>
The VTP header contains these fields:
</simpara>
<itemizedlist>
<listitem>
<simpara>
VTP protocol version: 1,2,3
</simpara>
</listitem>
<listitem>
<simpara>
VTP message types: summary advertisements, subset advertisements, advertisement requests, VTP join messages
</simpara>
</listitem>
<listitem>
<simpara>
management domain length
</simpara>
</listitem>
<listitem>
<simpara>
management domain name
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section id="_configuration_revision_number">
<title>Configuration revision number</title>
<itemizedlist>
<listitem>
<simpara>
32-bit
</simpara>
</listitem>
<listitem>
<simpara>
incremented by one for each configuration change
</simpara>
</listitem>
<listitem>
<simpara>
higher revision indicates newer database
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_vtp_domains">
<title>VTP domains</title>
<itemizedlist>
<listitem>
<simpara>
controls which devices can exchange VTP advertisements
</simpara>
</listitem>
<listitem>
<simpara>
defaults to null value
</simpara>
</listitem>
<listitem>
<simpara>
switch inherits VTP domain name of first received advertisement
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_allowed_active_and_pruned_vlans">
<title>Allowed, active and pruned VLANs</title>
<simpara>Although a trunk can support VLANs 1–4094, several mechanisms reduce the actual number of
VLANs whose traffic flows over the trunk. First, VLANs can be administratively forbidden from
existing over the trunk using the <emphasis role="strong">switchport trunk allowed</emphasis> interface subcommand. Also, any
allowed VLANs must be configured on the switch before they are considered active on the trunk.
Finally, VTP can prune VLANs from the trunk, with the switch simply ceasing to forward frames
from that VLAN over the trunk.</simpara>
<simpara>The <emphasis role="strong">show interface trunk</emphasis> command lists the VLANs that fall into each category:</simpara>
<variablelist>
<varlistentry>
<term>
Allowed VLANs 
</term>
<listitem>
<simpara>
Each trunk allows all VLANs by default. However, VLANs can be
removed or added to the list of allowed VLANs by using the switchport trunk allowed
command.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Allowed and active 
</term>
<listitem>
<simpara>
To be active, a VLAN must be in the allowed list for the trunk (based
on trunk configuration), and the VLAN must exist in the VLAN configuration on the switch.
With PVST+, an STP instance is actively running on this trunk for the VLANs in this list.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Active and not pruned 
</term>
<listitem>
<simpara>
This list is a subset of the “allowed and active” list, with any VTP-pruned VLANs removed.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_vtp_password">
<title>VTP Password</title>
<itemizedlist>
<listitem>
<simpara>
configure the same password on all switches in an VTP domain
</simpara>
</listitem>
<listitem>
<simpara>
stored as 16-bytes MD5 hash
</simpara>
</listitem>
</itemizedlist>
<section id="_summary_advertisements">
<title>Summary advertisements</title>
<itemizedlist>
<listitem>
<simpara>
informs adjacent Catalysts of the current VTP domain name and the configuration revision number.
</simpara>
</listitem>
<listitem>
<simpara>
5 minutes intervals
</simpara>
</listitem>
<listitem>
<simpara>
When the switch receives a summary advertisement packet,
</simpara>
<itemizedlist>
<listitem>
<simpara>
the switch compares the VTP domain name to its own VTP domain name.
</simpara>
</listitem>
<listitem>
<simpara>
If the name is different, the switch simply ignores the packet.
</simpara>
</listitem>
<listitem>
<simpara>
If the name is the same, the switch then compares the configuration revision to its own revision.
</simpara>
</listitem>
<listitem>
<simpara>
If its own configuration revision is higher or equal, the packet is ignored.
</simpara>
</listitem>
<listitem>
<simpara>
If it is lower, an advertisement request is sent.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/vtp-summary-advert-packet-format.png" contentdepth="150"/>
  </imageobject>
  <textobject><phrase>images/vtp-summary-advert-packet-format.png</phrase></textobject>
</mediaobject>
</informalfigure>
<itemizedlist>
<listitem>
<simpara>
The Followers field indicates that this packet is followed by a Subset Advertisement packet.
</simpara>
</listitem>
<listitem>
<simpara>
The Updater Identity is the IP address of the switch that is the last to have incremented the configuration revision.
</simpara>
</listitem>
<listitem>
<simpara>
The Update Timestamp is the date and time of the last increment of the configuration revision.
</simpara>
</listitem>
<listitem>
<simpara>
Message Digest 5 (MD5) carries the VTP password, if MD5 is configured and used to authenticate the validation of a VTP update.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_subset_advertisements">
<title>Subset advertisements</title>
<itemizedlist>
<listitem>
<simpara>
follows the summary advertisement after addition, deletion or modification of a VLAN.
</simpara>
</listitem>
<listitem>
<simpara>
contains a list of VLAN information.
</simpara>
</listitem>
</itemizedlist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/vtp-subset-advert-packet-format.png" contentdepth="150"/>
  </imageobject>
  <textobject><phrase>images/vtp-subset-advert-packet-format.png</phrase></textobject>
</mediaobject>
</informalfigure>
<variablelist>
<varlistentry>
<term>
Code
</term>
<listitem>
<simpara>
value: 0x02 for subset advertisement.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Sequence number
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
identify the packet in the stream of packets that follow a summary advertisement
</simpara>
</listitem>
<listitem>
<simpara>
starts with value 1
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_advertisement_request">
<title>Advertisement request</title>
<simpara>A switch needs a VTP advertisement request in these situations:</simpara>
<itemizedlist>
<listitem>
<simpara>
The switch has been reset.
</simpara>
</listitem>
<listitem>
<simpara>
The VTP domain name has been changed.
</simpara>
</listitem>
<listitem>
<simpara>
The switch has received a VTP summary advertisement with a higher configuration revision than its own.
</simpara>
</listitem>
</itemizedlist>
<simpara>Upon receipt of an advertisement request, a VTP device sends a summary
advertisement. One or more subset advertisements follow the summary
advertisement. This is an example:</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/vtp-advertisement-packet-format.png" contentdepth="80"/>
  </imageobject>
  <textobject><phrase>images/vtp-advertisement-packet-format.png</phrase></textobject>
</mediaobject>
</informalfigure>
<variablelist>
<varlistentry>
<term>
Code
</term>
<listitem>
<simpara>
0x03 for an advertisement request.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Start-Value
</term>
<listitem>
<simpara>
This is used in cases in which there are several subset advertisements.
If the first (n) subset advertisement has been received
and the subsequent one (n+1) has not been received,
the Catalyst only requests advertisements from the (n+1)th one.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="_vtp_modes">
<title>VTP modes</title>
<simpara>You can configure a switch to operate in any one of these VTP modes:</simpara>
<variablelist>
<varlistentry>
<term>
Server
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
default mode
</simpara>
</listitem>
<listitem>
<simpara>
allows addition, deletion and modification of VLAN information
</simpara>
</listitem>
<listitem>
<simpara>
changes on server overwrite the rest of the domain
</simpara>
</listitem>
<listitem>
<simpara>
configured as <emphasis role="strong">vtp mode server</emphasis>
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Client
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
cannot add, remove or modify VLAN information
</simpara>
</listitem>
<listitem>
<simpara>
listens for advertisements originated by server, install them and passes them on
</simpara>
</listitem>
<listitem>
<simpara>
configured as <emphasis role="strong">vtp mode client</emphasis>
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Transparent
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Keeps a separate VTP database from the rest of the domain
</simpara>
</listitem>
<listitem>
<simpara>
does not originate advertisements
</simpara>
</listitem>
<listitem>
<simpara>
"transparently" passes received advertisements through without installing them
</simpara>
</listitem>
<listitem>
<simpara>
configured as <emphasis role="strong">vtp mode transparent</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
can still create, remove or renamed VLANs which are not advertised to neighboring switches.
</simpara>
</listitem>
<listitem>
<simpara>
need for some applications like Private VLANs
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Off (configurable only in CatOS switches)
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
like VTP transparent mode with the exception that VTP advertisements are not forwarded
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>VTP Modes and Features</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="70*"/>
<colspec colname="col_2" colwidth="10*"/>
<colspec colname="col_3" colwidth="10*"/>
<colspec colname="col_4" colwidth="10*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Function</simpara></entry>
<entry align="left" valign="top"><simpara>Server Mode</simpara></entry>
<entry align="left" valign="top"><simpara>Client Mode</simpara></entry>
<entry align="left" valign="top"><simpara>Transparent Mode</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Originates VTP advertisements</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Processes received advertisements to update its VLAN configuration</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Forwards received VTP advertisements</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Saves VLAN configuration in NVRAM or vlan.dat</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Can create, modify, or delete VLANs using  configuration commands</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="_vtp_security">
<title>VTP security</title>
<itemizedlist>
<listitem>
<simpara>
MD5 authentication prevents against certain attack
</simpara>
<itemizedlist>
<listitem>
<simpara>
configured with <emphasis role="strong">vtp password [mysecret]</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
does not prevent against misconfiguration
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section id="_vtp_pruning">
<title>VTP pruning</title>
<itemizedlist>
<listitem>
<simpara>
Problem:
</simpara>
<itemizedlist>
<listitem>
<simpara>
broadcasts and unknown unicast/multicast frame are flooded everywhere in the broadcast domain
  included through trunks links
</simpara>
</listitem>
<listitem>
<simpara>
manual editing allowed list is a huge administrative overhead
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Solution: VTP pruning
</simpara>
<itemizedlist>
<listitem>
<simpara>
Switches advertise what they need
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
all other VLANs are pruned off the trunk link
</simpara>
</listitem>
<listitem>
<simpara>
Restriction:
</simpara>
<itemizedlist>
<listitem>
<simpara>
pruning does not work in transparent mode. Why?
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section id="_pruning_eligibility">
<title>Pruning eligibility</title>
<itemizedlist>
<listitem>
<simpara>
When VTP pruning is enabled on a VTP server, pruning is enabled for the entire
management domain except for pruning-ineligible VLANS
( Vlan 1, 1002-1005, 1006-4094)
</simpara>
</listitem>
<listitem>
<simpara>
Making VLANs pruning-eligible or pruning-ineligible affects
pruning eligibility for those VLANs on that trunk only (not on all switches in
the VTP domain).
</simpara>
</listitem>
<listitem>
<simpara>
VTP pruning takes effect several seconds after you enable it.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_version_3">
<title>Version 3</title>
<itemizedlist>
<listitem>
<simpara>
supports the whole ieee 802.1q vlan range up to 4095
</simpara>
</listitem>
<listitem>
<simpara>
can send private LAN information in addition to normal VLAN information.
</simpara>
</listitem>
<listitem>
<simpara>
backward compatible with VTP 2
</simpara>
</listitem>
<listitem>
<simpara>
add support for databases other than VLAN databases such as MST databases.
</simpara>
</listitem>
<listitem>
<simpara>
clear text or hidden password protection
</simpara>
</listitem>
</itemizedlist>
<simpara>For more information, read <ulink url="http://www.cisco.com/c/en/us/products/collateral/switches/catalyst-6500-series-switches/solution_guide_c78_508010.html">VTP version 3</ulink></simpara>
</section>
<section id="_dynamic_trunk_protocol">
<title>Dynamic trunk protocol</title>
<simpara>Cisco switches use the Dynamic Trunk Protocol (DTP) to dynamically learn whether the device
on the other end of the cable wants to perform trunking and, if so, which trunking protocol to use.
DTP learns whether to trunk based on the DTP mode defined for an interface.</simpara>
<simpara>Cisco switches
default to use the DTP desirable mode, which means that the switch initiates sending DTP
messages, hoping that the device on the other end of the segment replies with another DTP message.
If a reply is received, DTP can detect whether both switches can trunk and, if so, which type of
trunking to use. If both switches support both types of trunking, they choose to use ISL.</simpara>
<simpara>With the DTP mode set to desirable, switches can simply be connected, and they should
dynamically form a trunk. You can, however, configure trunking details and verify the results with
show commands.</simpara>
</section>
</section>
<section id="_configuration_tasks_3">
<title>Configuration tasks</title>
<section id="_on_switches">
<title>on switches</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Command </entry>
<entry align="left" valign="top"> Function</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>switchport | no switchport</simpara></entry>
<entry align="left" valign="top"><simpara>Toggle defining whether to treat the interface as a switch interface (switchport) or as a router interface (no switchport)</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>switchport mode</simpara></entry>
<entry align="left" valign="top"><simpara>Sets DTP negotiation parameters</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>switchport trunk</simpara></entry>
<entry align="left" valign="top"><simpara>Sets trunking parameters if the interface is trunking</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>switchport access</simpara></entry>
<entry align="left" valign="top"><simpara>Sets nontrunking-related parameters if the interface is not trunking</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>show interface trunk</simpara></entry>
<entry align="left" valign="top"><simpara>Summary of trunk-related information</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>show interface <emphasis>type number</emphasis> trunk</simpara></entry>
<entry align="left" valign="top"><simpara>Lists trunking details for a particular interface</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>show interface <emphasis>type number</emphasis> switchport</simpara></entry>
<entry align="left" valign="top"><simpara>Lists nontrunking details for a particular interface</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>Trunking configuration options that lead to a working trunk</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="12*"/>
<colspec colname="col_3" colwidth="50*"/>
<colspec colname="col_4" colwidth="12*"/>
<thead>
<row>
<entry align="left" valign="top">Configuration Command </entry>
<entry align="left" valign="top"> Short name </entry>
<entry align="left" valign="top"> Meaning </entry>
<entry align="left" valign="top"> To trunk other side must be</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>switchport mode trunk</simpara></entry>
<entry align="left" valign="top"><simpara>Trunk</simpara></entry>
<entry align="left" valign="top"><simpara>Always trunks on this end; sends DTP to help other side choose to trunk</simpara></entry>
<entry align="left" valign="top"><simpara>On, desirable, auto</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>switchport mode trunk ; switchport nonegotiate</simpara></entry>
<entry align="left" valign="top"><simpara>Nonegotiate</simpara></entry>
<entry align="left" valign="top"><simpara>Always trunks on this end; does not send DTP messages (good when other switch is a non-Cisco switch)</simpara></entry>
<entry align="left" valign="top"><simpara>On</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>switchport mode dynamic desirable</simpara></entry>
<entry align="left" valign="top"><simpara>Desirable</simpara></entry>
<entry align="left" valign="top"><simpara>Sends DTP messages, and trunks if negotiation succeeds</simpara></entry>
<entry align="left" valign="top"><simpara>On, desirable, auto</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>switchport mode dynamic auto</simpara></entry>
<entry align="left" valign="top"><simpara>Auto</simpara></entry>
<entry align="left" valign="top"><simpara>Replies to DTP messages, and trunks if negotiation succeeds</simpara></entry>
<entry align="left" valign="top"><simpara>On, desirable</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>switchport mode access</simpara></entry>
<entry align="left" valign="top"><simpara>Access</simpara></entry>
<entry align="left" valign="top"><simpara>Never trunks; sends DTP to help other side reach same conclusion</simpara></entry>
<entry align="left" valign="top"><simpara>Never trunks</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>switchport mode access; switchport nonegotiate</simpara></entry>
<entry align="left" valign="top"><simpara>Access (with nonegotiate)</simpara></entry>
<entry align="left" valign="top"><simpara>Never trunks; does not send DTP messages</simpara></entry>
<entry align="left" valign="top"><simpara>(Never trunks)</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="_on_routers">
<title>on routers</title>
<itemizedlist>
<listitem>
<simpara>
Routers do not support DTP
</simpara>
</listitem>
<listitem>
<simpara>
Manual configuration
</simpara>
</listitem>
</itemizedlist>
<simpara>The majority of router trunking configurations use subinterfaces, with each subinterface being
associated with one VLAN. The subinterface number does not have to match the VLAN ID; rather,
the encapsulation command sits under each subinterface, with the associated VLAN ID being
part of the encapsulation command. Also, because good design calls for one IP subnet per VLAN,
if the router wants to forward IP packets between the VLANs, the router needs to have an IP
address associated with each trunking subinterface.</simpara>
<simpara>You can configure 802.1Q native VLANs under a subinterface or under the physical interface
on a router. If configured under a subinterface, you use the encapsulation dot1q vlan-id native
subcommand, with the inclusion of the native keyword meaning that frames exiting this
subinterface should not be tagged. As with other router trunking configurations, the associated
IP address would be configured on that same subinterface. Alternately, if not configured on a
subinterface, the router assumes that the native VLAN is associated with the physical
interface. In this case, the encapsulation command is not needed under the physical interface;
the associated IP address, however, would need to be configured under the physical interface.</simpara>
</section>
<section id="_verify">
<title>Verify</title>
<screen>Router# show vtp status
VTP Version: 3 (capable)
Configuration Revision: 1
Maximum VLANs supported locally: 1005
Number of existing VLANs: 37
VTP Operating Mode: Server
VTP Domain Name: [smartports]
VTP Pruning Mode: Disabled
VTP V2 Mode: Enabled
VTP Traps Generation: Disabled
MD5 digest : 0x26 0xEE 0x0D 0x84 0x73 0x0E 0x1B 0x69
Configuration last modified by 172.20.52.19 at 7-25-08 14:33:43
Local updater ID is 172.20.52.19 on interface Gi5/2 (first layer3 interface fou)
VTP version running: 2</screen>
</section>
</section>
<section id="_troubleshooting_2">
<title>Troubleshooting</title>
<simpara><ulink url="http://www.cisco.com/c/en/us/support/docs/lan-switching/vtp/98155-tshoot-vlan.html#topic9">http://www.cisco.com/c/en/us/support/docs/lan-switching/vtp/98155-tshoot-vlan.html#topic9</ulink></simpara>
</section>
<section id="_questions">
<title>Questions</title>
<itemizedlist>
<listitem>
<simpara>
BDPU protocol version for 802.1w ?
</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter id="_isl">
<title>ISL</title>
<section id="_definition">
<title>definition</title>
<itemizedlist>
<listitem>
<simpara>
Inter-Switch Link
</simpara>
</listitem>
<listitem>
<simpara>
Cisco proprietary
</simpara>
</listitem>
<listitem>
<simpara>
provides VLAN trunking
</simpara>
</listitem>
<listitem>
<simpara>
supports up to 1000 VLANs  (check ???)
</simpara>
</listitem>
<listitem>
<simpara>
encapsulates the original header with 26-byte header
</simpara>
</listitem>
<listitem>
<simpara>
removes the header at the receiving end
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_frame">
<title>Frame</title>
<simpara>The ISL frame consists of three fields: the ISL header( 26 bytes), the original frame and the FCS (4 bytes)</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/isl-frame.png" contentdepth="100"/>
  </imageobject>
  <textobject><phrase>images/isl-frame.png</phrase></textobject>
</mediaobject>
</informalfigure>
<section id="_field_descriptions">
<title>Field descriptions</title>
<variablelist>
<varlistentry>
<term>
DA—Destination Address
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
40-bit
</simpara>
</listitem>
<listitem>
<simpara>
multicast address: "0100-0C00-00" or "0300-0C00-00".
</simpara>
</listitem>
<listitem>
<simpara>
The first 40 bits of the DA field signal the receiver that the packet is in ISL format. ???
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
TYPE—Frame Type
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
4 bits
</simpara>
</listitem>
<listitem>
<simpara>
indicates the type of the original frame
</simpara>
<itemizedlist>
<listitem>
<simpara>
0000:        Ethernet
</simpara>
</listitem>
<listitem>
<simpara>
0001:        Token Ring
</simpara>
</listitem>
<listitem>
<simpara>
0010:        FDDI
</simpara>
</listitem>
<listitem>
<simpara>
0011:        ATM
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
USER—User Defined Bits (TYPE Extension)
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
4 bits
</simpara>
</listitem>
<listitem>
<simpara>
extends the meaning of the TYPE field
</simpara>
</listitem>
<listitem>
<simpara>
default value: "0000"
</simpara>
</listitem>
<listitem>
<simpara>
For Ethernet frames, the USER field bits "0" and "1" indicate the priority of the packet as
it passes through the switch. Whenever traffic can be handled in a manner that
allows it to be forwarded more quickly, the packets with this bit set should
take advantage of the quick path. It is not required that such paths be
provided.
</simpara>
<itemizedlist>
<listitem>
<simpara>
XX00         Normal Priority
</simpara>
</listitem>
<listitem>
<simpara>
XX01         Priority 1
</simpara>
</listitem>
<listitem>
<simpara>
XX10         Priority 2
</simpara>
</listitem>
<listitem>
<simpara>
XX11         Highest Priority
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
SA—Source Address
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
48 bits set to set MAC address of the switch port that transmits the frame.
</simpara>
</listitem>
<listitem>
<simpara>
may be ignored by the receiving device
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
LEN—Length
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
16 bits set to the length of the packet in bytes
with the exclusion of the DA, TYPE, USER, SA, LEN, and FCS fields.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
AAAA03 (SNAP)—Subnetwork Access Protocol (SNAP) and Logical Link Control (LLC)
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
24 bits set to "0xAAAA03".
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
HSA—High Bits of Source Address
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
24 bits set to 0x00-00-0C (Cisco OUI) of the SA field.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
VLAN—Destination Virtual LAN ID
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
15 bits set to the VLAN ID of the frame
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
BPDU—BPDU and CDP Indicator
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
1 bit set when STP or CDP encapsulates an ISL packet
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
INDX—Index
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
16 bits set to the port index of the source of the packet as it exits the switch
</simpara>
</listitem>
<listitem>
<simpara>
used for diagnostic purposes only
</simpara>
</listitem>
<listitem>
<simpara>
may be ignored by the receiving bridge
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
RES—Reserved for Token Ring and FDDI
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
16 bits used when Token Ring or FDDI packets are encapsulated with an ISL frame
</simpara>
<itemizedlist>
<listitem>
<simpara>
In the case of Token Ring frames, the Access Control (AC) and Frame Control (FC) fields are placed here.
</simpara>
</listitem>
<listitem>
<simpara>
In the case of FDDI, the FC field is placed in the Least Significant Byte (LSB) of this field.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
For Ethernet packets, the RES field should be set to all zeros.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
ENCAP FRAME—Encapsulated Frame
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
encapsulated data packet with its own CRC value completely unmodified
</simpara>
</listitem>
<listitem>
<simpara>
length from 1 to 24575 bytes
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
FCS—Frame Check Sequence
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
4 bytes set by the sending MAC and recalculated by the receiving bridge
</simpara>
</listitem>
<listitem>
<simpara>
new FCS calculated over the entire ISL packet
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
</chapter>
<chapter id="_ieee_802_1q">
<title>IEEE 802.1Q</title>
<section id="_definition_2">
<title>Definition</title>
<itemizedlist>
<listitem>
<simpara>
tags frames on a trunk
</simpara>
</listitem>
<listitem>
<simpara>
supports up to 4096 VLANs
</simpara>
</listitem>
<listitem>
<simpara>
inserts a 4-byte tag into the original frame between the Source Address and the Type/Length field
</simpara>
</listitem>
<listitem>
<simpara>
recomputes the frame check sequence (FCS)
before the device sends the frame over the trunk link.
</simpara>
</listitem>
<listitem>
<simpara>
removes the tag at the receiving end
</simpara>
</listitem>
<listitem>
<simpara>
does not tag frames on the native VLAN. It tags all other frames that are transmitted and received on
the trunk.
</simpara>
</listitem>
<listitem>
<simpara>
must use the same native VLAN on both sides of the trunk
</simpara>
</listitem>
<listitem>
<simpara>
defines a single instance of spanning tree that runs on the native VLAN for all the
VLANs in the network. This is called Mono Spanning Tree .
This lacks the flexibility and load balancing capability of PVST that is available with ISL.
However, PVST+ offers the capability to retain multiple spanning tree
topologies with 802.1Q trunking.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_frame_2">
<title>Frame</title>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/802-1q-frame.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>802.1Q frame</phrase></textobject>
</mediaobject>
</informalfigure>
<section id="_field_descriptions_2">
<title>Field descriptions</title>
<variablelist>
<varlistentry>
<term>
TPID—Tag Protocol Identifier
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
16 bits
</simpara>
</listitem>
<listitem>
<simpara>
value: 08100
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Priority
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
3 bits
</simpara>
</listitem>
<listitem>
<simpara>
called also user priority or IEEE 802.p
</simpara>
</listitem>
<listitem>
<simpara>
indicates the frame priority level
</simpara>
</listitem>
<listitem>
<simpara>
can be used to prioritize the traffic
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
CFI—Canonical Format Indicator
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
1 bit
</simpara>
</listitem>
<listitem>
<simpara>
value: 0 if MAC address is in canonical format otherwise 1
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
VID—VLAN Identifier
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
12 bits
</simpara>
</listitem>
<listitem>
<simpara>
identifies the VLAN to which the frame belongs
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_ethernet_frame_size_with_802_1q_tagging">
<title>Ethernet Frame Size with 802.1Q tagging</title>
<itemizedlist>
<listitem>
<simpara>
Maximum size: 1522 bytes
</simpara>
</listitem>
<listitem>
<simpara>
Minimum size: 68 bytes
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration">
<title>Configuration</title>
</section>
</chapter>
<chapter id="_802_1q_in_q_tunneling">
<title>802.1Q-in-Q tunneling</title>
<section id="_concepts_4">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
adds a metro tag or PE-VLAN to the 802.1q tagged packets
</simpara>
</listitem>
<listitem>
<simpara>
expands the VLAN space by double-tagging frames
</simpara>
</listitem>
<listitem>
<simpara>
allows Service Providers
</simpara>
<itemizedlist>
<listitem>
<simpara>
to preserve 802.1Q VLAN tags accross WAN links.
</simpara>
</listitem>
<listitem>
<simpara>
to provide services such as Internet access on specific VLANs for specific customers,
yet providing other services on other VLANs
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<figure><title>Q-in-Q: basic operation</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/q-in-q-basic-operations.png" contentdepth="150"/>
  </imageobject>
  <textobject><phrase>images/q-in-q-basic-operations.png</phrase></textobject>
</mediaobject>
</figure>
</section>
<section id="_frame_3">
<title>Frame</title>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/q-in-q-frame.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>802.1Q-in-Q frame</phrase></textobject>
</mediaobject>
</informalfigure>
<section id="_frame_size">
<title>Frame size</title>
<itemizedlist>
<listitem>
<simpara>
recommended minimum MTU: 1504 bytes
</simpara>
<itemizedlist>
<listitem>
<simpara>
default MTU: 1500 bytes
</simpara>
</listitem>
<listitem>
<simpara>
outer VLAN tag: 4 bytes
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section id="_tpid">
<title>TPID</title>
<itemizedlist>
<listitem>
<simpara>
contains the modified tag protocol identifier
</simpara>
</listitem>
<listitem>
<simpara>
set to 0x8100 for IEEE 802.1q
</simpara>
</listitem>
</itemizedlist>
<simpara>The QinQ frame contains the modified tag protocol identifier (TPID) value of
VLAN Tags. By default, the VLAN tag uses the TPID field to identify the
protocol type of the tag. The value of this field, as defined in IEEE 802.1Q,
is 0x8100.</simpara>
<simpara>The device determines whether a received frame carries a service provider VLAN
tag or a customer VLAN tag by checking the corresponding TPID value. After
receiving a frame, the device compares the compares the configured TPID value
with the value of the TPID field in the frame. If the two match, the frame
carries the corresponding VLAN tag. For example, if a frame carries VLAN tags
with the TPID values of 0x9100 and 0x8100, respectively, while the configured
TPID value of the service provider VLAN tag is 0x9100 and that of the VLAN tag
for a customer network is 0x8200, the device considers that the frame carries
only the service provider VLAN tag but not the customer VLAN tag.</simpara>
<simpara>In addition, the systems of different vendors might set the TPID of the outer
VLAN tag of QinQ frames to different values. For compatibility with these
systems, you can modify the TPID value so that the QinQ frames, when sent to
the public network, carry the TPID value identical to the value of a particular
vendor to allow interoperability with the devices of that vendor. The TPID in
an Ethernet frame has the same position with the protocol type field in a frame
without a VLAN tag. In order to avoid problems in packet forwarding and
handling in the network, you cannot set the TPID value to any of the values in
this table:</simpara>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top"> Protocol type </entry>
<entry align="left" valign="top"> Value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>ARP</simpara></entry>
<entry align="left" valign="top"><simpara>0x0806</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>PUP</simpara></entry>
<entry align="left" valign="top"><simpara>0x0200</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>RARP</simpara></entry>
<entry align="left" valign="top"><simpara>0x8035</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IP</simpara></entry>
<entry align="left" valign="top"><simpara>0x0800</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IPv6</simpara></entry>
<entry align="left" valign="top"><simpara>0x86DD</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>PPPoE</simpara></entry>
<entry align="left" valign="top"><simpara>0x8863/0x8864</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>MPLS</simpara></entry>
<entry align="left" valign="top"><simpara>0x8847/0x8848</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IS-IS</simpara></entry>
<entry align="left" valign="top"><simpara>0x8000</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>LACP</simpara></entry>
<entry align="left" valign="top"><simpara>0x8809</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>802.1x</simpara></entry>
<entry align="left" valign="top"><simpara>0x888E</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>The QinQ Support feature is generally supported on whatever Cisco IOS features
or protocols are supported. For example, if you can run PPPoE on the
subinterface, you can configure a double-tagged frame for PPPoE. IPoQinQ
supports IP packets that are double-tagged for QinQ VLAN tag termination by
forwarding IP traffic with the double-tagged (also known as stacked) 802.1Q
headers.
= PPPoE</simpara>
<itemizedlist>
<listitem>
<simpara>
used for digital subscriber line (DSL) Internet access
 because the public telephone network uses ATM for its transport protocol;
 therefore, Ethernet frames must be encapsulated in a protocol supported over both Ethernet and ATM.
</simpara>
</listitem>
<listitem>
<simpara>
The PPP Client feature permits a Cisco IOS router, rather than an endpoint host, to serve as the client
 in a network. This permits multiple hosts to connect over a single PPPoE connection.
</simpara>
</listitem>
<listitem>
<simpara>
In a DSL environment, PPP interface IP addresses are derived from an upstream DHCP server
 using IP Configuration Protocol (IPCP). Therefore, IP address negotiation must be enabled on the
 router’s dialer interface. This is done using the ip address negotiated command in the dialer
 interface configuration.
</simpara>
</listitem>
<listitem>
<simpara>
Because of the 8-byte PPP header, the MTU for PPPoE is usually set to 1492 bytes so that the
 entire encapsulated frame fits within the 1500-byte Ethernet frame. A maximum transmission unit
 (MTU) mismatch prevents a PPPoE connection from coming up. Checking the MTU setting is a
 good first step when troubleshooting PPPoE connections.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration_tasks_4">
<title>Configuration tasks</title>
<simpara>Example</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/pppoe-topology-example.png" contentdepth="150"/>
  </imageobject>
  <textobject><phrase>images/pppoe-topology-example.png</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>Example of config on the Edge router</simpara>
<screen># conf t
(config)# interface fa0/1
(config-if)# ip address 192.168.100.1 255.255.255.0
(config-if)# ip nat inside
(config)# interface fa0/1
(config-if)# pppoe-client dial-pool-number 1
(config-if)# exit
(config)# interface dialer1
(config-if)# mtu 1492
(config-if)# encapsulation ppp
(config-if)# ip address negotiated
(config-if)# ppp authentication chap

!The remaining CHAP commands have been omitted for brevity.

(config-if)# ip nat outside
(config-if)# dialer pool 1
(config-if)# dialer-group 1
(config-if)# exit
(config)# dialer-list 1 protocol ip permit
(config)# ip nat inside source list 1 interface dialier1 overload
(config)# access-list 1 permit 192.168.100.0 0.0.0.255
(config)# ip route 0.0.0.0 0.0.0.0 dialer1</screen>
<simpara>Verify PPPoE connectivity</simpara>
<screen>show pppoe session</screen>
<simpara>Debug</simpara>
<screen>debug pppoe [data | errors | events | packets]</screen>
</section>
</chapter>
<chapter id="_spanning_tree_protocol">
<title>Spanning Tree Protocol</title>
<itemizedlist>
<listitem>
<simpara>
Creates loop-free layer 2 topology
</simpara>
</listitem>
<listitem>
<simpara>
prevents broadcast storms
</simpara>
</listitem>
<listitem>
<simpara>
STP variations:
</simpara>
<itemizedlist>
<listitem>
<simpara>
802.1d : Common Spanning Tree
</simpara>
</listitem>
<listitem>
<simpara>
PVST/PVST+: Cisco per-VLAN Spanning Tree
</simpara>
</listitem>
<listitem>
<simpara>
802.1w: Rapid Spanning Tree Protocol
</simpara>
</listitem>
<listitem>
<simpara>
802.1s: Multiple STP
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section id="_802_1d">
<title>802.1d</title>
<itemizedlist>
<listitem>
<simpara>
Uses bpdu
</simpara>
</listitem>
<listitem>
<simpara>
Elect one root switch and one designated switch for each segment
</simpara>
</listitem>
<listitem>
<simpara>
One root port per non-root switch, one designated port for each segment
</simpara>
</listitem>
<listitem>
<simpara>
Other ports on blocking state
</simpara>
</listitem>
<listitem>
<simpara>
Steps
</simpara>
<itemizedlist>
<listitem>
<simpara>
elect the root switch with the lowest bridge id ( 2-byte priority + 6-byte MAC)
</simpara>
</listitem>
<listitem>
<simpara>
determine each switch&#8217;s root port: with the least cost path to the root
</simpara>
</listitem>
<listitem>
<simpara>
determine the designated port for each segment:
    the switch that forwards the least cost hello on the segment
</simpara>
</listitem>
<listitem>
<simpara>
if there is a tie, select the lowest port ID
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Original ieee 802.1d bridge Id
</simpara>
<itemizedlist>
<listitem>
<simpara>
2-byte priority
</simpara>
</listitem>
<listitem>
<simpara>
6-byte MAC adress
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Revised ieee 802.1d brigde id Priority for MAC address reduction
</simpara>
<itemizedlist>
<listitem>
<simpara>
4 bits : priority multiple of 4096
</simpara>
</listitem>
<listitem>
<simpara>
12 bits : system id extension (vlan id ) to support pvst+ and ieee 802.1s
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section id="_root_port_election">
<title>Root port election</title>
<itemizedlist>
<listitem>
<simpara>
RP is upstream facing towards Root bridge
</simpara>
</listitem>
<listitem>
<simpara>
lowest root path cost ( cumulative cost of all links to get to the root)
</simpara>
</listitem>
<listitem>
<simpara>
cost based on inverse bandwith
</simpara>
</listitem>
</itemizedlist>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>default port costs</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top">Speed    </entry>
<entry align="left" valign="top">original </entry>
<entry align="left" valign="top">revised</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>10 Mbps</simpara></entry>
<entry align="left" valign="top"><simpara>100</simpara></entry>
<entry align="left" valign="top"><simpara>100</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>100 Mbps</simpara></entry>
<entry align="left" valign="top"><simpara>10</simpara></entry>
<entry align="left" valign="top"><simpara>19</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>1 Gbps</simpara></entry>
<entry align="left" valign="top"><simpara>1</simpara></entry>
<entry align="left" valign="top"><simpara>4</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>10 Gbps</simpara></entry>
<entry align="left" valign="top"><simpara>1</simpara></entry>
<entry align="left" valign="top"><simpara>2</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>Tie breaker when a switch receives multiple Hellos with equal cost</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
lowest bridge id
</simpara>
</listitem>
<listitem>
<simpara>
lowest port priority
</simpara>
</listitem>
<listitem>
<simpara>
lowest port number
</simpara>
</listitem>
</orderedlist>
<simpara>To force selection of a root bridge,
use one of two commands below</simpara>
<screen>spanning-tree vlan id priority 0
spanning-tree vlan id root</screen>
</section>
<section id="_determining_the_designated_port">
<title>determining the designated port</title>
<itemizedlist>
<listitem>
<simpara>
Designated switch: send the hello with the lowest advertised cost for the segment
</simpara>
</listitem>
<listitem>
<simpara>
DP: port that forward frames onto that segment
</simpara>
</listitem>
<listitem>
<simpara>
DP are downstream facing away from root bridge
</simpara>
</listitem>
<listitem>
<simpara>
elected based on lowest root path cost, BID, port ID
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_blocking_all_non_rp_and_non_dp_ports">
<title>blocking all non-RP and non-DP ports</title>
<itemizedlist>
<listitem>
<simpara>
Receive BPDUs
</simpara>
</listitem>
<listitem>
<simpara>
discard all other traffic
</simpara>
</listitem>
<listitem>
<simpara>
cannot send traffic
</simpara>
</listitem>
<listitem>
<simpara>
do not send Hellos
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_convergence">
<title>Convergence</title>
<itemizedlist>
<listitem>
<simpara>
Steady operations: one Root bridge, one RP on each non-root bridge, one DP on each segment, blocking state
</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
root switch generates a Hello every 2 seconds
</simpara>
</listitem>
<listitem>
<simpara>
each RP on non root switch receives a copy of the root&#8217;s hello
</simpara>
</listitem>
<listitem>
<simpara>
each DP updates and forwards the hello out
</simpara>
</listitem>
<listitem>
<simpara>
each blocking port receives a copy of the hello from the DP without forwarding it
</simpara>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
</section>
<section id="_topology_change_notification">
<title>Topology change notification</title>
<simpara>more at
<ulink url="http://www.cisco.com/c/en/us/support/docs/lan-switching/spanning-tree-protocol/24062-146.html#topchng">understand new topology changes</ulink></simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
A switch experiencing the STP port state change sends a TCN BPDU out its Root Port; it
repeats this message every Hello time until it is acknowledged.
</simpara>
</listitem>
<listitem>
<simpara>
The next switch receiving that TCN BPDU sends back an acknowledgment via its next
forwarded Hello BPDU by marking the Topology Change Acknowledgment (TCA) bit in
the Hello.
</simpara>
</listitem>
<listitem>
<simpara>
The switch that was the DP on the segment in the first two steps repeats the first two steps,
sending a TCN BPDU out its Root Port, and awaiting acknowledgment from the DP on that
segment.
</simpara>
</listitem>
</orderedlist>
<simpara>By each successive switch repeating Steps 1 and 2, eventually the root receives a TCN BPDU.
Once received, the root sets the TC flag on the next several Hellos, which are forwarded to all
switches in the network, notifying them that a change has occurred. A switch receiving a Hello
BPDU with the TC flag set uses the short (Forward Delay time) timer to time out entries in
the CAM.</simpara>
<simpara>Transitioning from blocking to forwarding</simpara>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>state</simpara></entry>
<entry align="left" valign="top"><simpara>forward data frames</simpara></entry>
<entry align="left" valign="top"><simpara>learn source MAC</simpara></entry>
<entry align="left" valign="top"><simpara>stable?</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>blocking</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
<entry align="left" valign="top"><simpara>yes</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>listening</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>learning</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
<entry align="left" valign="top"><simpara>yes</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>forwarding</simpara></entry>
<entry align="left" valign="top"><simpara>yes</simpara></entry>
<entry align="left" valign="top"><simpara>yes</simpara></entry>
<entry align="left" valign="top"><simpara>yes</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>disabled</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
<entry align="left" valign="top"><simpara>no</simpara></entry>
<entry align="left" valign="top"><simpara>stable</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section id="_timers">
<title>Timers</title>
<variablelist>
<varlistentry>
<term>
Hello timer
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
2 seconds
</simpara>
</listitem>
<listitem>
<simpara>
Interval at which the root sends Hellos
</simpara>
</listitem>
<listitem>
<simpara>
Forward delay::
</simpara>
</listitem>
<listitem>
<simpara>
15 seconds
</simpara>
</listitem>
<listitem>
<simpara>
Time that switch leaves a port in listening state and learning state
</simpara>
</listitem>
<listitem>
<simpara>
also used sd the short CAM timeout timer
</simpara>
</listitem>
<listitem>
<simpara>
Maxage::
</simpara>
</listitem>
<listitem>
<simpara>
20 seconds
</simpara>
</listitem>
<listitem>
<simpara>
Time without hearing a Hello before believing that the root has failed
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_pvst">
<title>PVST+</title>
<itemizedlist>
<listitem>
<simpara>
Per-VLAN STP : for better load balancing
</simpara>
<itemizedlist>
<listitem>
<simpara>
one instance of legacy STP per VLAN
</simpara>
</listitem>
<listitem>
<simpara>
Cisco ISL support
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
PVST+
</simpara>
<itemizedlist>
<listitem>
<simpara>
one instance of legacy STP per VLAN
</simpara>
</listitem>
<listitem>
<simpara>
Cisco ISL and 802.1q support
</simpara>
</listitem>
<listitem>
<simpara>
interoperability between CST and PVST
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
default mode on most Catalyst platforms
</simpara>
</listitem>
<listitem>
<simpara>
allows root bridge/port placement per VLAN
</simpara>
</listitem>
<listitem>
<simpara>
Non-cisco + 802.1q &#8658; one Common Spanning Tree over vlan  1
</simpara>
</listitem>
<listitem>
<simpara>
When mixing cisco and non cisco switches with 802.1q trunking,
</simpara>
<itemizedlist>
<listitem>
<simpara>
send bpdu to multicast destination MAC of 0100.0CCC.CCCD
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section id="_configuration_2">
<title>configuration</title>
<simpara>show spanning-tree root
show spanning-tree vlan 1 root detail</simpara>
</section>
<section id="_optimizing_improving_spanning_tree">
<title>optimizing, improving spanning tree</title>
<section id="_portfast">
<title>PortFast</title>
<itemizedlist>
<listitem>
<simpara>
Used on access ports connected to end users devices not other switches
</simpara>
</listitem>
<listitem>
<simpara>
Puts the port into forwarding state immediately
</simpara>
</listitem>
<listitem>
<simpara>
Prevent them to generate TCNs
</simpara>
</listitem>
<listitem>
<simpara>
Can generate loops if another switch is connected. so must be used with bpdu guard and root guard features
</simpara>
</listitem>
</itemizedlist>
<screen>(cfg-if) spanning-tree portfast
(cfg) spanning-tree portfast default</screen>
</section>
<section id="_uplinkfast">
<title>UplinkFast</title>
<itemizedlist>
<listitem>
<simpara>
Used on access layer switches that have multiple uplinks to distribution/core switches
</simpara>
</listitem>
<listitem>
<simpara>
Immediately replaces a lost RP with an alternate RP
</simpara>
</listitem>
<listitem>
<simpara>
Increases the root and all port priority so the switch does not become root or transit switch
</simpara>
</listitem>
<listitem>
<simpara>
Time-out the correct entries in their CAMs but doesnt use the TCN process. Instead, finds all the MAC
addresses of local devices and sends one multicast frame with each local addresses as the source MAC
causing all the other switches to update their CAMs. The access switch also clears out the rest of the
entries in its own CAM.
</simpara>
</listitem>
</itemizedlist>
<screen>(config)#  spanning-tree uplinkfast [max-update-rate rate]</screen>
</section>
<section id="_backbonefast">
<title>BackboneFast</title>
<itemizedlist>
<listitem>
<simpara>
Used in core switches to detect indirect link failures to the Root
</simpara>
</listitem>
<listitem>
<simpara>
Do not wait for Maxage to expire when another switch&#8217;s direct link fails
</simpara>
</listitem>
<listitem>
<simpara>
Send a Root Link Query out the port in which the missing Hello should arrive.
The RLQ asks the neighboring switch if that neighboring switch is still receiving Hellos from the root.
IF that neighbor had a direct link failure, it can tell the original switch via another RLQ that this path to the root is lost. Once known,
the switch experiencing the indirect link failure can go ahead and converge without waiting for Axage to expire
</simpara>
</listitem>
<listitem>
<simpara>
All switches must have backbone fast configured
</simpara>
</listitem>
</itemizedlist>
<screen>(config)#  spanning-tree backbonefast</screen>
</section>
</section>
<section id="_bpdu_filter">
<title>bpdu filter</title>
<itemizedlist>
<listitem>
<simpara>
Filter BPDUs in and out
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_bpdu_guard">
<title>bpdu guard</title>
<itemizedlist>
<listitem>
<simpara>
Puts a (portfast enabled ???) port into the errdisable state when a BPDU is received and shuts down the port
</simpara>
</listitem>
<listitem>
<simpara>
The port must be manually re-enabled or it can be recovered automatically through the errdiable timeout function.
</simpara>
</listitem>
<listitem>
<simpara>
A port configured with bpdu guard will not be put into the root-inconsistent state.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_loop_guard">
<title>loop guard</title>
<itemizedlist>
<listitem>
<simpara>
Prevents non-designated ports from inadvertently forming layer 2 switching loops
if the flow of bpdus is interrupted.
</simpara>
</listitem>
<listitem>
<simpara>
Puts the port into the loop-inconsistent state when the steady flow of BPDUs is interrupted
</simpara>
</listitem>
<listitem>
<simpara>
Only used on point-to-point links
</simpara>
</listitem>
<listitem>
<simpara>
Can be used with <emphasis role="strong">UDLD aggressive mode</emphasis> to get extra protection.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_root_guard">
<title>root guard</title>
<itemizedlist>
<listitem>
<simpara>
Prevent a port from becoming a root port when receiving a superior bpdu (e.g. inferior priority + mac)
</simpara>
</listitem>
<listitem>
<simpara>
it is enabled on ports other than the root  port and on switches other than the root.
</simpara>
</listitem>
<listitem>
<simpara>
Puts the port in <emphasis role="strong">root-inconsistent</emphasis> state (no data flow) until it stops receiving superior BPDUs.
  No traffic is forwarded.
</simpara>
</listitem>
<listitem>
<simpara>
enforce the root bridge placement by ensuring the the port on which root guard is enabled is the designated port.
</simpara>
</listitem>
</itemizedlist>
<simpara><ulink url="http://www.cisco.com/c/en/us/support/docs/lan-switching/spanning-tree-protocol/10588-74.html">http://www.cisco.com/c/en/us/support/docs/lan-switching/spanning-tree-protocol/10588-74.html</ulink></simpara>
<itemizedlist>
<listitem>
<simpara>
Enforce the root bridge placement
</simpara>
</listitem>
<listitem>
<simpara>
Ensures that the port on which root guard is enabled is the designated port.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_udld">
<title>UDLD</title>
<itemizedlist>
<listitem>
<simpara>
unidirectional links:
</simpara>
<itemizedlist>
<listitem>
<simpara>
one of the 2 transmission path has failed but not both
</simpara>
</listitem>
<listitem>
<simpara>
due to miscabling, cutting on fiber cable, unplugging one fiber, GBIC problems, &#8230;
</simpara>
</listitem>
<listitem>
<simpara>
can cause a loop as the previously blocking port will move to a forwarding state
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/stp-unidirectional-links.png" contentdepth="150"/>
  </imageobject>
  <textobject><phrase>images/stp-unidirectional-links.png</phrase></textobject>
</mediaobject>
</informalfigure>
<itemizedlist>
<listitem>
<simpara>
solutions:
</simpara>
<variablelist>
<varlistentry>
<term>
UDLD <emphasis role="strong">u</emphasis>ni<emphasis role="strong">d</emphasis>irectional <emphasis role="strong">l</emphasis>ink <emphasis role="strong">d</emphasis>etection
</term>
<listitem>
<simpara>
Uses Layer 2 messaging to decide when a switch can no longer receive frames from
a neighbor. The switch whose transmit interface did not fail is placed into an err-disabled
state.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
UDLD aggressive mode
</term>
<listitem>
<simpara>
Attempts to reconnect with the other switch (eight times)
after realizing no messages have been received.
If the other switch does not reply to the repeated additional messages,
both sides become err-disabled.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Loop Guard
</term>
<listitem>
<simpara>
When normal BPDUs are no longer received,
the port does not go through normal STP convergence, but rather falls into an STP loop-inconsistent state.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</listitem>
</itemizedlist>
<simpara>In all cases, the formerly blocking port that would now cause a loop is prevented from migrating
to a forwarding state. With both types of UDLD, the switch can be configured to automatically
transition out of err-disabled state. With Loop Guard, the switch automatically puts the port back
into its former STP state when the original Hellos are received again.</simpara>
</section>
</section>
<section id="_802_1w">
<title>802.1w</title>
<itemizedlist>
<listitem>
<simpara>
Improves convergence by
</simpara>
<itemizedlist>
<listitem>
<simpara>
waiting for only 3 missed Hellos on an RP before flushing the CAM instead of 10 with 802.1d
</simpara>
</listitem>
<listitem>
<simpara>
bypass listening state
</simpara>
</listitem>
<listitem>
<simpara>
includes natively Cisco PortFast, UplinkFast, BackboneFast
</simpara>
</listitem>
<listitem>
<simpara>
add backup DP when multiple ports connected to the same segment
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
backward compatible with 802.1d although
</simpara>
</listitem>
<listitem>
<simpara>
All bridges generate BPDUs every Hello interval
</simpara>
</listitem>
</itemizedlist>
<section id="_rstp_link_types">
<title>RSTP link types</title>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">Point-to-point</emphasis>: switch to switch
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Shared</emphasis> : switch to hub
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Edge</emphasis>: switch to single end-user device
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_rstp_port_states">
<title>RSTP port states</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top">administrative state</entry>
<entry align="left" valign="top">802.1d</entry>
<entry align="left" valign="top">802.1w</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>disabled</simpara></entry>
<entry align="left" valign="top"><simpara>disabled</simpara></entry>
<entry align="left" valign="top"><simpara>discarding</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>enabled</simpara></entry>
<entry align="left" valign="top"><simpara>blocking</simpara></entry>
<entry align="left" valign="top"><simpara>discarding</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>enabled</simpara></entry>
<entry align="left" valign="top"><simpara>listening</simpara></entry>
<entry align="left" valign="top"><simpara>discarding</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>enabled</simpara></entry>
<entry align="left" valign="top"><simpara>learning</simpara></entry>
<entry align="left" valign="top"><simpara>learning</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>enabled</simpara></entry>
<entry align="left" valign="top"><simpara>forwarding</simpara></entry>
<entry align="left" valign="top"><simpara>forwarding</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section id="_rstp_role_ports">
<title>RSTP role ports</title>
<variablelist>
<varlistentry>
<term>
Root Port
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Same role as 802.1d RP
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Designated Port
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Same role as 802.1d DP
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Alternate Port
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
an alternate root port
</simpara>
</listitem>
<listitem>
<simpara>
same concept as Cisco UplinkFast feature
</simpara>
</listitem>
<listitem>
<simpara>
protects against the loss of a switch&#8217;s RP by keeping track of the AP with a path to the root
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Backup Port
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
no equivalent Cisco features
</simpara>
</listitem>
<listitem>
<simpara>
protects against losing the DP attached to a shared liknk
  when the switch has another physical port attached to the same shared segment
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<note><simpara>root bridge ports are all designated port
unless 2 or more ports of the root bridge are connected together.</simpara></note>
<note><simpara>a port needs to receive BPDUs to stay blocked.</simpara></note>
</section>
<section id="_configuration_3">
<title>configuration</title>
<screen>(config)#  spanning-tree mode rapid-pvst</screen>
</section>
</section>
<section id="_802_1s">
<title>802.1s</title>
<itemizedlist>
<listitem>
<simpara>
Multiple VLANs mapped to the same STP instance.
</simpara>
</listitem>
<listitem>
<simpara>
enable load balancing
</simpara>
</listitem>
<listitem>
<simpara>
improves fault tolerance of the network
  because a failure in one instance or forwarding path does not affect other instances.
</simpara>
</listitem>
<listitem>
<simpara>
Uses 802.1w for rapid convergence
</simpara>
</listitem>
<listitem>
<simpara>
Highly scalable
</simpara>
<itemizedlist>
<listitem>
<simpara>
switches with same instance, configuration revision number and name form a <emphasis role="strong">region</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
different regions see each other as virtual bridges
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
each switch have three attributes:
</simpara>
<itemizedlist>
<listitem>
<simpara>
alphanumeric configuration name (32 bytes)
</simpara>
</listitem>
<listitem>
<simpara>
configuration number (2 bytes)
</simpara>
</listitem>
<listitem>
<simpara>
4096-element table that associates each of the potential 4096 VLANs to a map ???
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section id="_storm_control">
<title>storm control</title>
</section>
<section id="_unicast_flooding">
<title>unicast flooding</title>
</section>
</section>
<section id="_troubleshooting_3">
<title>Troubleshooting</title>
<section id="_flapping_port_that_is_generating_bpdus_with_the_tcn_bit_set">
<title>flapping port that is generating BPDUs with the TCN bit set</title>
</section>
</section>
<section id="_questions_2">
<title>Questions</title>
</section>
</chapter>
<chapter id="_etherchannel">
<title>EtherChannel</title>
<section id="_concepts_5">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
EtherChannel aggregates bandwidth of physical links
</simpara>
</listitem>
<listitem>
<simpara>
one logical link for STP
</simpara>
</listitem>
<listitem>
<simpara>
consists of two parts:
</simpara>
<itemizedlist>
<listitem>
<simpara>
port-channel interface: logical interface representing the bundle
</simpara>
</listitem>
<listitem>
<simpara>
member interfaces: physical links part of the bundle
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Channel can be any type of interface:
</simpara>
<itemizedlist>
<listitem>
<simpara>
layer 2 access, trunk, tunnel or layer 3 routed
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section id="_portchannels">
<title>PortChannels</title>
<simpara>When a network design includes multiple parallel segments between the same pair of switches,
one switch ends up in a forwarding state on all the links, but the other switch blocks all but one of
the ports of those parallel segments. As a result, only one of the links can be used at any point
in time.</simpara>
<simpara>Using Fast EtherChannel (FEC) (using FastE segments) and Gigabit EtherChannel
(GEC) (using GigE segments) allows the combined links to be treated as one link from an STP
perspective, so that all the parallel physical segments are used. (When configuring a Cisco switch,
a group of segments comprising an FEC or GEC is called a PortChannel.) Most campus designs
today use a minimum of two segments per trunk, in a PortChannel, for better availability. That
way, as long as at least one of the links in the EtherChannel is up, the STP path cannot fail, and no</simpara>
<simpara>Each EtherChannel can consist of up to 8 compatibly configured Ethernet
interfaces. All interfaces in each EtherChannel must be the same configuration (speed,
duplex, VLAN, STP) and all must be configured as either Layer 2 or Layer 3 interfaces.</simpara>
<itemizedlist>
<listitem>
<simpara>
Can be up to 8 Ethernet interfaces with the  same configuration
( speed, duplex, VLAN, STP, either Layer 2 or Layer 3 interfaces)
</simpara>
</listitem>
<listitem>
<simpara>
When several EtherChannel bundles exist between two switches,
STP blocks one of the bundles to prevent redundant links.
When spanning tree blocks one of the redundant links, it blocks one EtherChannel,
thus blocking all the ports belonging to this EtherChannel link.
</simpara>
</listitem>
<listitem>
<simpara>
Where there is only one EtherChannel link,
all physical links in the EtherChannel are active because STP sees only one (logical) link.
</simpara>
</listitem>
<listitem>
<simpara>
If a link within an EtherChannel fails,
traffic previously carried over that failed link changes to the remaining links within the EtherChannel.
A trap is sent for a failure, identifying the switch, the EtherChannel, and the failed link.
Inbound broadcast and multicast packets on one link in an EtherChannel are blocked from returning on any other link of the EtherChannel.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_link_aggregation_protocol">
<title>link aggregation protocol</title>
<itemizedlist>
<listitem>
<simpara>
LACP
</simpara>
</listitem>
<listitem>
<simpara>
PAgP
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_port_channel_interfaces">
<title>Port-channel interfaces</title>
<simpara>You create an EtherChannel for Layer 2 interfaces differently from Layer 3 interfaces.
Both configurations involve logical interfaces.</simpara>
<itemizedlist>
<listitem>
<simpara>
With Layer 3 interfaces, you manually create the logical interface by using the <emphasis role="strong">interface port-channel</emphasis> global configuration command.
</simpara>
</listitem>
<listitem>
<simpara>
With Layer 2 interfaces, the logical interface is dynamically created.
</simpara>
</listitem>
<listitem>
<simpara>
With both Layer 3 and 2 interfaces, you manually assign an interface to the EtherChannel by using the <emphasis role="strong">channel-group</emphasis> interface configuration command. This command binds the physical and logical ports together as shown in Figure 29-2.
</simpara>
</listitem>
</itemizedlist>
<simpara>Each EtherChannel has a logical port-channel interface numbered from 1 to 64. The channel groups are also numbered from 1 to 64.</simpara>
<simpara>When a port joins an EtherChannel, the physical interface for that port is shut down. When the port leaves the port-channel, its physical interface is brought up, and it has the same configuration as it had before joining the EtherChannel.</simpara>
<figure><title>Relationship of Physical Ports, Logical Port Channels, and Channel Groups</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/etherchannel-relationships.png" contentdepth="150"/>
  </imageobject>
  <textobject><phrase>images/etherchannel-relationships.png</phrase></textobject>
</mediaobject>
</figure>
</section>
<section id="_etherchannel_modes">
<title>EtherChannel modes</title>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>EtherChannel modes</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="15*"/>
<colspec colname="col_2" colwidth="15*"/>
<colspec colname="col_3" colwidth="70*"/>
<thead>
<row>
<entry align="left" valign="top">Cisco PAgP</entry>
<entry align="left" valign="top">  802.1AD LACP</entry>
<entry align="left" valign="top"> Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>on</simpara></entry>
<entry align="left" valign="top"><simpara>on</simpara></entry>
<entry align="left" valign="top"><simpara>disable negotiation and forces the port into the portChannel</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>off</simpara></entry>
<entry align="left" valign="top"><simpara>off</simpara></entry>
<entry align="left" valign="top"><simpara>disable negotiation and prevents the ports to be part of the portChannel</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>desirable</simpara></entry>
<entry align="left" valign="top"><simpara>active</simpara></entry>
<entry align="left" valign="top"><simpara>initiates the negotiation</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>auto</simpara></entry>
<entry align="left" valign="top"><simpara>passive</simpara></entry>
<entry align="left" valign="top"><simpara>waits on other side to start negotiation</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<itemizedlist>
<listitem>
<simpara>
to be part of a PortChannel, both sides must agree on:
</simpara>
<itemizedlist>
<listitem>
<simpara>
same speed and duplex settings
</simpara>
</listitem>
<listitem>
<simpara>
if not trunking, same access VLAN
</simpara>
</listitem>
<listitem>
<simpara>
if trunking, same trunk type, allowed VLANs, and native VLAN
</simpara>
</listitem>
<listitem>
<simpara>
on a single switch, each port in a PortChannel must have the same STP cost per VLAN on all links in the PortChannel
</simpara>
</listitem>
<listitem>
<simpara>
no ports with SPAN configured
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>You can also configure a single interface within the group for all
transmissions and use other interfaces for hot standby. The unused interfaces
in the group can be swapped into operation in just a few seconds if the
selected single interface loses hardware-signal detection. You can configure
which interface is always selected for packet transmission by changing its
priority by using the <emphasis role="strong">pagp port-priority</emphasis> interface configuration command. The
higher the priority, the more likely that the port will be selected.</simpara>
</section>
<section id="_pagp_and_lacp_interaction_with_other_features">
<title>PAgP and LACP Interaction with Other Features</title>
<itemizedlist>
<listitem>
<simpara>
DTP and CDP send and receive packets over the physical interfaces in the EtherChannel.
</simpara>
</listitem>
<listitem>
<simpara>
PAgP and LACP transmit PDUs on the lowest numbered VLAN on the interfaces enable for (desirable,auto or active,passive)
</simpara>
</listitem>
<listitem>
<simpara>
STP sends packets over the first interface in the Etherchannel
</simpara>
</listitem>
<listitem>
<simpara>
The MAC address of a Layer 3 EtherChannel is the MAC address of the first interface in the port-channel.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_load_balancing_and_forwarding_modes">
<title>load balancing and forwarding modes</title>
<itemizedlist>
<listitem>
<simpara>
load balancing between member interface based on a combination of
</simpara>
<itemizedlist>
<listitem>
<simpara>
source MAC address
</simpara>
</listitem>
<listitem>
<simpara>
destination MAC address
</simpara>
</listitem>
<listitem>
<simpara>
source IP address
</simpara>
</listitem>
<listitem>
<simpara>
destination IP address
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
modified with <emphasis role="strong">port-channel load-balance</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
uses only source MAC address by default on 3759 switch
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration_tasks_5">
<title>Configuration tasks</title>
<simpara><ulink url="http://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3550/software/release/12-1_13_ea1/configuration/guide/3550scg/swethchl.html">http://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3550/software/release/12-1_13_ea1/configuration/guide/3550scg/swethchl.html</ulink></simpara>
<section id="_specify_the_interfaces_that_will_compose_the_etherchannel_group">
<title>Specify the interfaces that will compose the EtherChannel group</title>
<screen>(config)# interface range f a/b/c-d</screen>
</section>
<section id="_specify_the_link_aggregation_protocol">
<title>Specify the link aggregation protocol</title>
<screen>(config-if-range)# channel-protocol {pagp | lacp}</screen>
</section>
<section id="_create_the_port_channel_interface">
<title>Create the port channel interface</title>
<screen>(config-if-range)# channel-group n
  mode {active | passive | on | {auto [non-silent] | desirable [non-silent]  }</screen>
</section>
<section id="_specify_the_port_channel_interface">
<title>Specify the port-channel interface</title>
<screen>(config)# interface port-channel n</screen>
</section>
<section id="_specify_the_minimum_number_of_member_ports_in_the_etherchannel">
<title>Specify the minimum number of member ports in the etherchannel</title>
<simpara>under the etherchannel interface,</simpara>
<screen>(config-if)# port-channel min-link n</screen>
</section>
<section id="_configure_the_etherchannel_load_balancing_method">
<title>Configure the EtherChannel load-balancing method</title>
<screen>(config)# port-channel load-balance { dst-ip | dst-mac | src-dst-ip | src-dst-mac | src-ip | src-mac}</screen>
</section>
<section id="_check_what_load_balancing">
<title>Check what load balancing</title>
<screen># show etherchannel load-balance

EtherChannel Load-Balancing Configuration:
src-mac

EtherChannel Load-Balancing Addresses Used Per-Protocol:
Non-IP: Source MAC address
IPv4: Source MAC address
IPv6: Source MAC address</screen>
</section>
</section>
</chapter>
<chapter id="_pagp">
<title>PAgP</title>
<section id="_concepts_6">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">P</emphasis>ort <emphasis role="strong">Ag</emphasis>gregation <emphasis role="strong">P</emphasis>rotocol
</simpara>
</listitem>
<listitem>
<simpara>
Cisco proprietary
</simpara>
</listitem>
<listitem>
<simpara>
automatic creation of a EtherChannel.
</simpara>
</listitem>
<listitem>
<simpara>
sends PagP packets every 30 seconds to multicast 0100-0CCC-CCCC
</simpara>
</listitem>
<listitem>
<simpara>
same destination address than CDP, UDLD, VTP, and DTP.
</simpara>
</listitem>
<listitem>
<simpara>
checks for configuration consistency and manages link additions and failures between two switches.
</simpara>
</listitem>
<listitem>
<simpara>
Protocol value: 0x104
</simpara>
</listitem>
</itemizedlist>
<section id="_modes">
<title>Modes</title>
<variablelist>
<varlistentry>
<term>
Auto 
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Never initiates PAgP communications but instead listen passively for any received PAgP packets
before creating an EtherChannel with the neighboring switch.
</simpara>
</listitem>
<listitem>
<simpara>
default mode
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Desirable 
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
initiates negotiations with other interfaces by sending PAgP packets.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
On 
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Forces the interface to channel without PAgP.
</simpara>
</listitem>
<listitem>
<simpara>
do not exchange PAgP packets.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<simpara>Etherchannel formed for on-on, desirable-auto, desirable-desirable combinations.</simpara>
</section>
<section id="_physical_vs_aggregate_learners">
<title>Physical vs Aggregate learners</title>
<simpara>Switches running PAgP are classified as:</simpara>
<variablelist>
<varlistentry>
<term>
PAgP physical learners
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
learn MAC addresses using the physical ports within the EtherChannel instead
  of via the logical EtherChannel link.
</simpara>
</listitem>
<listitem>
<simpara>
forward traffic to addresses based on the physical port via which the address
  was learned.  The switch will send packets to the neighboring switch using
  the same port in the EtherChannel from which it learned the source address.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Aggregate learners
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
learns addresses based on the aggregate or logical EtherChannel port.
</simpara>
</listitem>
<listitem>
<simpara>
transmit packets to the source by using any of the interfaces in the EtherChannel.
</simpara>
</listitem>
<listitem>
<simpara>
Aggregate learning is the default.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<simpara>By default, PAgP is not able to detect whether a neighboring switch is a
physical learner. Therefore, when configuring PAgP EtherChannels on switches
that support only physical learning, the learning method must be manually set
to physical learning. It is important when running in this mode, to set the
load-distribution method to source-based distribution so that any given source
MAC address is always sent on the same physical port.</simpara>
</section>
<section id="_restrictions">
<title>Restrictions</title>
<simpara>While PAgP allows for all links within the EtherChannel to be used to forward
and receive user traffic, there are some restrictions:</simpara>
<itemizedlist>
<listitem>
<simpara>
DTP and CDP send and receive packets over all the physical interfaces in the EtherChannel,
while PAgP sends and receives PAgP PDU only from interfaces that are
up and have PAgP enabled for auto or desirable modes.
</simpara>
</listitem>
<listitem>
<simpara>
When an EtherChannel bundle is configured as a trunk port,
the trunk sends and receives PAgP frames on the lowest numbered VLAN.
STP always chooses the first operational port in an EtherChannel bundle.
</simpara>
</listitem>
<listitem>
<simpara>
When configuring additional STP features such as Loop Guard on an EtherChannel,
remember that if Loop Guard blocks the first port,
no BPDUs will be sent over the channel,
even if other ports in the channel bundle are operational.
This is because PAgP will enforce uniform Loop Guard configuration on all of the ports that are part of the EtherChannel group.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration_4">
<title>Configuration</title>
<section id="_validate_the_port_that_will_be_used_by_stp_to_send_packets_and_receive_packets">
<title>Validate the port that will be used by STP to send packets and receive packets</title>
<screen>Switch#show pagp neighbor
Flags:  S – Device is sending Slow hello.  C – Device is in Consistent state.
A – Device is in Auto mode.        P – Device learns on physical port.

Channel group 4 neighbors
Partner     Partner             Partner         Partner   Group
Port        Name                Device ID       Port       Age  Flags   Cap.
Gi1/1/3     Switch.1            00c5.a003.0080   Gi0/1     4s   SC      10001
Gi1/1/4     Switch.1            00c5.a003.0080   Gi0/2     3s   SC      10001</screen>
<simpara>STP will send packets only out of port Gi1/1/3
because it is the first operational interface.
If that port fails,
STP will send packets out of Gi1/1/4.</simpara>
</section>
<section id="_view_default_port_used_by_pagp">
<title>View default port used by PAgP</title>
<screen>Switch#show etherchannel summary
Flags:  D – down        P – bundled in port-channel
I – stand-alone s – suspended
H – Hot-standby (LACP only)
R – Layer3      S – Layer2
U – in use      N – not in use, no aggregation
f – failed to allocate aggregator

M – not in use, no aggregation due to minimum links not met
m – not in use, port not aggregated due to minimum links not met
u – unsuitable for bundling
d – default port

w – waiting to be aggregated
Number of channel-groups in use: 13
Number of aggregators:           13

Group  Port-channel  Protocol    Ports
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
4      Po4(SU)         PAgP      Gi1/1/3(P)     Gi1/1/4(P)</screen>
</section>
</section>
</chapter>
<chapter id="_lacp">
<title>LACP</title>
<section id="_concepts_7">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
802.3ad
</simpara>
</listitem>
<listitem>
<simpara>
automatic creation of port channels
</simpara>
</listitem>
<listitem>
<simpara>
multicast address IEEE 802.3 Slow Protocols: 0180-C200-0002
</simpara>
</listitem>
<listitem>
<simpara>
EtherType value: 0x8809
</simpara>
</listitem>
<listitem>
<simpara>
timers: hellos every second during hand shake
</simpara>
</listitem>
</itemizedlist>
<section id="_restrictions_2">
<title>Restrictions</title>
</section>
<section id="_modes_2">
<title>Modes</title>
<variablelist>
<varlistentry>
<term>
Passive
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
does not initiate LACP negotiation but responds to LACP packets
</simpara>
</listitem>
<listitem>
<simpara>
default mode
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Active
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
initiate LACP negotiation by sending LACP packets
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
On
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Forces the interface to the channel without PAgP or LACP
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<simpara>Working Etherchannel for On-On, Passive-Active, Active-Active</simpara>
</section>
<section id="_lacp_hot_standby_ports">
<title>LACP hot-standby ports</title>
<simpara>By default, when LACP is configured on ports,
it tries to configure the maximum number of compatible ports in a port channel,
up to the maximum allowed by the hardware, which is typically eight ports.
However, if LACP is unable to aggregate all the ports that are compatible into an EtherChannel,
then all the ports that cannot be actively included in the channel are put in hot-standby state
and are used only if one of the active ports in the EtherChannel fails.</simpara>
</section>
</section>
<section id="_configurations">
<title>Configurations</title>
<section id="_control_the_number_of_ports_allowed_to_be_bundled_into_the_etherchannel">
<title>Control the number of ports allowed to be bundled into the etherchannel</title>
<screen>(config-if)# lacp max-bundle</screen>
</section>
</section>
</chapter>
<chapter id="_span_and_rspan">
<title>SPAN and RSPAN</title>
<section id="_concepts_8">
<title>Concepts</title>
<simpara>SPAN (Switch Port Analyzer) mirrors received and/or transmitted traffic on
source ports and received traffic on source ports or source VLANs,
to a destination port for analysis.</simpara>
<section id="_local_span">
<title>Local SPAN</title>
<simpara>Local SPAN supports a SPAN session entirely within one switch; all source ports
or source VLANs and destination ports are in the same switch. Local SPAN copies
traffic from one or more source ports in any VLAN or from one or more VLANs to
a destination port for analysis.</simpara>
<simpara>For example, in <xref linkend="span-configuration"/>, all traffic on port 5 (the source port) is
mirrored to port 10 (the destination port). A network analyzer on port 10
receives all network traffic from port 5 without being physically attached to
port 5.</simpara>
<figure id="span-configuration"><title>Example SPAN Configuration</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/span-configuration.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/span-configuration.png</phrase></textobject>
</mediaobject>
</figure>
<simpara>Only traffic that enters or leaves source ports or traffic that enters source
VLANs can be monitored by using SPAN; traffic that gets routed to ingress
source ports or source VLANs cannot be monitored. For example, if incoming
traffic is being monitored, traffic that gets routed from another VLAN to the
source VLAN is not monitored; however, traffic that is received on the source
VLAN and routed to another VLAN is monitored.</simpara>
</section>
<section id="_remote_span">
<title>Remote SPAN</title>
<simpara>RSPAN extends SPAN by enabling remote monitoring of multiple switches across
your network.
The traffic for each RSPAN session is carried over a user-specified RSPAN VLAN
that is dedicated for that RSPAN session in all participating switches.
The SPAN traffic from the sources is copied onto the
RSPAN VLAN through a reflector port and then forwarded over trunk ports that
are carrying the RSPAN VLAN to any RSPAN destination sessions monitoring the
RSPAN VLAN, as shown in <xref linkend="rspan-configuration"/>.</simpara>
<simpara>Each RSPAN source switch must have either ports or VLANs as RSPAN source.
The destination is always a physical port.</simpara>
<figure id="rspan-configuration"><title>Example of RSPAN Configuration</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/rspan-configuration.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/rspan-configuration.png</phrase></textobject>
</mediaobject>
</figure>
<simpara>SPAN and RSPAN do not affect the switching of network traffic on source ports
or source VLANs; a copy of the packets received or sent by the source
interfaces are sent to the destination interface.</simpara>
<simpara>You can analyze network traffic passing through ports or VLANs by using SPAN to
send a copy of the traffic to another port on the switch that has been
connected to a SwitchProbe device or other Remote Monitoring (RMON) probe or
security device.</simpara>
<simpara>You can use the SPAN or RSPAN destination port to inject traffic from a network
security device. For example, if you connect a Cisco Intrusion Detection System
(IDS) Sensor Appliance to a destination port, the IDS device can send TCP Reset
packets to close down the TCP session of a suspected attacker.</simpara>
</section>
<section id="_span_sessions">
<title>SPAN sessions</title>
<simpara>SPAN sessions (local or remote) allow you to monitor traffic on one or more
ports, or one or more VLANs, and send the monitored traffic to one or more
destination ports.</simpara>
<simpara>A local SPAN session is an association of a destination port with source ports
or source VLANs, all on a single network device.
Local SPAN does not have separate source and destination sessions.
Local SPAN sessions gather a set of ingress and egress packets specified by the user
and form them into a stream of SPAN data, which is directed to the destination port.</simpara>
<simpara>RSPAN consists of at least one RSPAN source session, an RSPAN VLAN, and at
least one RSPAN destination session.
You separately configure RSPAN source sessions and RSPAN destination sessions on different network devices.
To configure an RSPAN source session on a device,
you associate a set of source ports or source VLANs with an RSPAN VLAN.
The output of this session is the stream of SPAN packets that are sent to the RSPAN VLAN.
To configure an RSPAN destination session on another device,
you associate the destination port with the RSPAN VLAN.
The destination session collects all RSPAN VLAN traffic and sends it out the RSPAN destination port.</simpara>
<simpara>An RSPAN source session is very similar to a local SPAN session, except for
where the packet stream is directed. In an RSPAN source session, SPAN packets
are relabeled with the RSPAN VLAN ID and directed over normal trunk ports to
the destination switch.</simpara>
<simpara>An RSPAN destination session takes all packets received on the RSPAN VLAN,
strips off the VLAN tagging, and presents them on the destination port.
Its purpose is to present a copy of all RSPAN VLAN packets (except Layer 2 control
packets) to the user for analysis.</simpara>
<simpara>There can be more than one source session and more than one destination session
active in the same RSPAN VLAN. There can also be intermediate switches
separating the RSPAN source and destination sessions. These switches need not
be capable of running RSPAN, but they must respond to the requirements of the
RSPAN VLAN.</simpara>
</section>
<section id="_restrictions_3">
<title>Restrictions</title>
<itemizedlist>
<listitem>
<simpara>
Sources can be ports or VLANs,
but you cannot mix source ports and source VLANs in the same session.
</simpara>
</listitem>
<listitem>
<simpara>
The switch supports up to two source sessions (local SPAN and RSPAN source
  sessions). You can run both a local SPAN and an RSPAN source session in the
  same switch. The switch supports a total of 66 source and RSPAN destination
  sessions.
</simpara>
</listitem>
<listitem>
<simpara>
maximum of 64 destination ports.
</simpara>
</listitem>
<listitem>
<simpara>
switched or routed ports can be configured as SPAN source or destination ports.
</simpara>
</listitem>
<listitem>
<simpara>
You can configure two separate SPAN or RSPAN source sessions with separate or
  overlapping sets of SPAN source ports and VLANs. Both switched and routed
  ports can be configured as SPAN sources and destinations.
</simpara>
</listitem>
<listitem>
<simpara>
SPAN sessions do not interfere with the normal operation of the switch.
  However, an oversubscribed SPAN destination, for example, a 10-Mb/s port
  monitoring a 100-Mb/s port, can result in dropped or lost packets.
</simpara>
</listitem>
<listitem>
<simpara>
When RSPAN is enabled, each packet being monitored is transmitted twice, once
  as normal traffic and once as a monitored packet. Therefore monitoring a
  large number of ports or VLANs could potentially generate large amounts of
  network traffic.
</simpara>
</listitem>
<listitem>
<simpara>
You can configure SPAN sessions on disabled ports; however, a SPAN session
  does not become active unless you enable the destination port and at least
  one source port or VLAN for that session.
</simpara>
</listitem>
<listitem>
<simpara>
The switch does not support a combination of local SPAN and RSPAN in a single
  session. That is, an RSPAN source session cannot have a local destination
  port, an RSPAN destination session cannot have a local source port, and an
  RSPAN destination session and an RSPAN source session that are using the same
  RSPAN VLAN cannot run on the same switch.
</simpara>
</listitem>
<listitem>
<simpara>
When you configure a destination port,
  its original configuration is overriden.
  If the SPAN configuration is removed,
  the original configuration on that port is restored
</simpara>
</listitem>
<listitem>
<simpara>
only on SPAN/RSPAN session can send traffic to a single destination port.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_monitored_traffic">
<title>Monitored traffic</title>
<simpara>SPAN sessions include these traffic types:</simpara>
<variablelist>
<varlistentry>
<term>
Receive (Rx) SPAN
</term>
<listitem>
<simpara>
The goal of receive (or ingress) SPAN is to monitor as much as possible all the
packets received by the source interface or VLAN before any modification or
processing is performed by the switch. A copy of each packet received by the
source is sent to the destination port for that SPAN session. You can monitor a
series or range of ingress ports or VLANs in a SPAN session.
</simpara>
<simpara>Packets that are modified because of routing or QoS are copied before modification.</simpara>
<simpara>Features that can cause a packet to be dropped during receive processing have
no effect on ingress SPAN; the destination port receives a copy of the packet
even if the actual incoming packet is dropped. These features include IP
standard and extended input access control lists , QoS policing,
VLAN ACLs.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Transmit (Tx) SPAN
</term>
<listitem>
<simpara>
The goal of transmit (or egress) SPAN is to monitor as much
as possible all the packets sent by the source interface after all modification
and processing is performed by the switch. A copy of each packet sent by the
source is sent to the destination port for that SPAN session. The copy is
provided after the packet is modified.
</simpara>
<simpara>Only one egress source port is allowed per SPAN session. VLAN monitoring is not
supported in the egress direction.</simpara>
<simpara>Packets that are modified because of routing (e.g. TTL or MAC-address modification)
are duplicated at the destination port.
On packets that are modified because of QoS, the modified packet might not have
the same DSCP (IP packet) or CoS (non-IP packet) as the SPAN source.</simpara>
<simpara>Some features that can cause a packet to be dropped during transmit processing
might also affect the duplicated copy for SPAN. These features include VLAN
maps, IP standard and extended output ACLs on multicast packets, and egress QoS
policing. In the case of output ACLs, if the SPAN source drops the packet, the
SPAN destination would also drop the packet. In the case of egress QoS
policing, if the SPAN source drops the packet, the SPAN destination might not
drop it. If the source port is oversubscribed, the destination ports will have
different dropping behavior.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Both
</term>
<listitem>
<simpara>
In a SPAN session, you can monitor a single port for both received and
sent packets. This is the default.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>The default configuration for local SPAN session ports is to send all packets
untagged. SPAN also does not normally monitor BPDU, CDP, VTP, DTP, STP, PAgP.
However, when you enter the encapsulation replicate keywords when configuring a destination port,
these changes occur:</simpara>
<itemizedlist>
<listitem>
<simpara>
Packets are sent on the destination port with the same (ISL or 802,1Q) encapsulation
that they had on the source port.
</simpara>
</listitem>
<listitem>
<simpara>
Packets of all types, including BPDU and Layer 2 protocol packets, are
monitored.
</simpara>
</listitem>
</itemizedlist>
<simpara>Therefore, a local SPAN session with encapsulation replicate enabled can have a
mixture of untagged, ISL, and IEEE 802.1Q tagged packets appear on the
destination port.</simpara>
<simpara>Switch congestion can cause packets to be dropped at ingress source ports,
egress source ports, or SPAN destination ports. In general, these
characteristics are independent of one another. For example:</simpara>
<itemizedlist>
<listitem>
<simpara>
A packet might be forwarded normally but dropped from monitoring due to an
oversubscribed SPAN destination port.
</simpara>
</listitem>
<listitem>
<simpara>
An ingress packet might be dropped from normal forwarding, but still appear on
the SPAN destination port.
</simpara>
</listitem>
<listitem>
<simpara>
An egress packet dropped because of switch congestion is also dropped from
egress SPAN.
</simpara>
</listitem>
</itemizedlist>
<simpara>In some SPAN configurations, multiple copies of the same source packet are sent
to the SPAN destination port. For example, a bidirectional (both Rx and Tx)
SPAN session is configured for the Rx monitor on port A and Tx monitor on port B.
If a packet enters the switch through port A and is switched to port B, both
incoming and outgoing packets are sent to the destination port. Both packets
are the same (unless a Layer-3 rewrite occurs, in which case the packets are
different because of the packet modification).</simpara>
</section>
<section id="_source_ports">
<title>Source Ports</title>
<simpara>A source port (also called a monitored port) is a switched or routed port that
you monitor for network traffic analysis. In a local SPAN session or RSPAN
source session, you can monitor source ports or VLANs for traffic in one or
both directions. The switch supports any number of source ports (up to the
maximum number of available ports on the switch) and any number of source VLANs
(up to the maximum number of VLANs supported). However, the switch supports a
maximum of two sessions (local or RSPAN) with source ports or VLANs, and you
cannot mix ports and VLANs in a single session.</simpara>
<simpara>A source port has these characteristics:</simpara>
<itemizedlist>
<listitem>
<simpara>
It can be monitored in multiple SPAN sessions.
</simpara>
</listitem>
<listitem>
<simpara>
Each source port can be configured with a direction (ingress, egress, or
  both) to monitor.
</simpara>
</listitem>
<listitem>
<simpara>
It can be any port type (EtherChannel, Fast Ethernet, Gigabit Ethernet, h).
</simpara>
</listitem>
<listitem>
<simpara>
For EtherChannel sources, you can monitor traffic for the entire EtherChannel
  or individually on a physical port as it participates in the port channel.
</simpara>
</listitem>
<listitem>
<simpara>
It can be an access port, trunk port, routed port, or voice VLAN port.
</simpara>
</listitem>
<listitem>
<simpara>
It cannot be a destination port.
</simpara>
</listitem>
<listitem>
<simpara>
Source ports can be in the same or different VLANs.
</simpara>
</listitem>
<listitem>
<simpara>
You can monitor multiple source ports in a single session.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_source_vlans">
<title>Source VLANs</title>
<simpara>VLAN-based SPAN (VSPAN) is the monitoring of the network traffic in one or more VLANs.
The SPAN or RSPAN source interface in VSPAN is a VLAN ID, and traffic is monitored on all the ports for that VLAN.</simpara>
<simpara>VSPAN has these characteristics:</simpara>
<itemizedlist>
<listitem>
<simpara>
All active ports in the source VLAN are included as source ports and can be monitored in either or both directions.
</simpara>
</listitem>
<listitem>
<simpara>
On a given port, only traffic on the monitored VLAN is sent to the destination port.
</simpara>
</listitem>
<listitem>
<simpara>
If a destination port belongs to a source VLAN, it is excluded from the source list and is not monitored.
</simpara>
</listitem>
<listitem>
<simpara>
If ports are added to or removed from the source VLANs, the traffic on the source VLAN received by those ports is added to or removed from the sources being monitored.
</simpara>
</listitem>
<listitem>
<simpara>
You cannot use filter VLANs in the same session with VLAN sources.
</simpara>
</listitem>
<listitem>
<simpara>
You can monitor only Ethernet VLANs.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_vlan_filtering">
<title>VLAN Filtering</title>
<simpara>When you monitor a trunk port as a source port, by default, all VLANs active on the trunk are monitored. You can limit SPAN traffic monitoring on trunk source ports to specific VLANs by using VLAN filtering.</simpara>
<itemizedlist>
<listitem>
<simpara>
VLAN filtering applies only to trunk ports or to voice VLAN ports.
</simpara>
</listitem>
<listitem>
<simpara>
VLAN filtering applies only to port-based sessions and is not allowed in sessions with VLAN sources.
</simpara>
</listitem>
<listitem>
<simpara>
When a VLAN filter list is specified, only those VLANs in the list are monitored on trunk ports or on voice VLAN access ports.
</simpara>
</listitem>
<listitem>
<simpara>
SPAN traffic coming from other port types is not affected by VLAN filtering; that is, all VLANs are allowed on other ports.
</simpara>
</listitem>
<listitem>
<simpara>
VLAN filtering affects only traffic forwarded to the destination SPAN port and does not affect the switching of normal traffic.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_destination_port">
<title>Destination port</title>
<simpara>Each local SPAN session or RSPAN destination session must have a destination port (also called a monitoring port) that receives a copy of traffic from the source ports or VLANs and sends the SPAN packets to the user, usually a network analyzer.</simpara>
<simpara>A destination port has these characteristics:</simpara>
<itemizedlist>
<listitem>
<simpara>
For a local SPAN session, the destination port must reside on the same switch
  as the source port. For an RSPAN session, it is located on the switch
  containing the RSPAN destination session. There is no destination port on a
  switch running only an RSPAN source session.
</simpara>
</listitem>
<listitem>
<simpara>
When a port is configured as a SPAN destination port, the configuration
  overwrites the original port configuration. When the SPAN destination
  configuration is removed, the port reverts to its previous configuration. If
  a configuration change is made to the port while it is acting as a SPAN
  destination port, the change does not take effect until the SPAN destination
  configuration had been removed.
</simpara>
</listitem>
<listitem>
<simpara>
If the port was in an EtherChannel group, it is removed from the group while
  it is a destination port. If it was a routed port, it is no longer a routed
  port.
</simpara>
</listitem>
<listitem>
<simpara>
It can be any Ethernet physical port.
</simpara>
</listitem>
<listitem>
<simpara>
It cannot be a secure port.
</simpara>
</listitem>
<listitem>
<simpara>
It cannot be a source port.
</simpara>
</listitem>
<listitem>
<simpara>
It cannot be an EtherChannel group or a VLAN.
</simpara>
</listitem>
<listitem>
<simpara>
It can participate in only one SPAN session at a time (a destination port in
  one SPAN session cannot be a destination port for a second SPAN session).
</simpara>
</listitem>
<listitem>
<simpara>
When it is active, incoming traffic is disabled. The port does not transmit
  any traffic except that required for the SPAN session. Incoming traffic is
  never learned or forwarded on a destination port.
</simpara>
</listitem>
<listitem>
<simpara>
If ingress traffic forwarding is enabled for a network security device, the
  destination port forwards traffic at Layer 2.
</simpara>
</listitem>
<listitem>
<simpara>
It does not participate in any of the Layer 2 protocols (STP, VTP, CDP, DTP,
  PagP).
</simpara>
</listitem>
<listitem>
<simpara>
A destination port that belongs to a source VLAN of any SPAN session is
  excluded from the source list and is not monitored.
</simpara>
</listitem>
<listitem>
<simpara>
The maximum number of destination ports in a switch is 64.
</simpara>
</listitem>
</itemizedlist>
<simpara>Local SPAN and RSPAN destination ports behave differently regarding VLAN
tagging and encapsulation:</simpara>
<itemizedlist>
<listitem>
<simpara>
For local SPAN, if the encapsulation replicate keywords are specified for the
  destination port, these packets appear with the original encapsulation
  (untagged, ISL, or IEEE 802.1Q). If these keywords are not specified, packets
  appear in the untagged format. Therefore, the output of a local SPAN session
  with encapsulation replicate enabled can contain a mixture of untagged, ISL,
  or IEEE 802.1Q-tagged packets.
</simpara>
</listitem>
<listitem>
<simpara>
For RSPAN, the original VLAN ID is lost because it is overwritten by the
  RSPAN VLAN identification. Therefore, all packets appear on the destination
  port as untagged.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_rspan_vlan">
<title>RSPAN VLAN</title>
<simpara>The RSPAN VLAN carries SPAN traffic between RSPAN source and destination sessions. It has these special characteristics:</simpara>
<itemizedlist>
<listitem>
<simpara>
All traffic in the RSPAN VLAN is always flooded.
</simpara>
</listitem>
<listitem>
<simpara>
No MAC address learning occurs on the RSPAN VLAN.
</simpara>
</listitem>
<listitem>
<simpara>
RSPAN VLAN traffic only flows on trunk ports.
</simpara>
</listitem>
<listitem>
<simpara>
RSPAN VLANs must be configured in VLAN configuration mode by using the remote-span VLAN configuration mode command.
</simpara>
</listitem>
<listitem>
<simpara>
STP can run on RSPAN VLAN trunks but not on SPAN destination ports.
</simpara>
</listitem>
<listitem>
<simpara>
An RSPAN VLAN cannot be a private-VLAN primary or secondary VLAN.
</simpara>
</listitem>
</itemizedlist>
<simpara>For VLANs 1 to 1005 that are visible to VLAN Trunking Protocol (VTP), the VLAN
ID and its associated RSPAN characteristic are propagated by VTP. If you assign
an RSPAN VLAN ID in the extended VLAN range (1006 to 4094), you must manually
configure all intermediate switches.</simpara>
<simpara>It is normal to have multiple RSPAN VLANs in a network at the same time with
each RSPAN VLAN defining a network-wide RSPAN session. That is, multiple RSPAN
source sessions anywhere in the network can contribute packets to the RSPAN
session. It is also possible to have multiple RSPAN destination sessions
throughout the network, monitoring the same RSPAN VLAN and presenting traffic
to the user. The RSPAN VLAN ID separates the sessions.</simpara>
</section>
<section id="_interaction_with_other_features">
<title>Interaction with other features</title>
<variablelist>
<varlistentry>
<term>
Routing 
</term>
<listitem>
<simpara>
SPAN does not monitor routed traffic. VSPAN only monitors traffic that enters or exits the switch, not traffic that is routed between VLANs. For example, if a VLAN is being Rx-monitored and the switch routes traffic from another VLAN to the monitored VLAN, that traffic is not monitored and not received on the SPAN destination port.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
STP
</term>
<listitem>
<simpara>
A destination port does not participate in STP while its SPAN or RSPAN session is active. The destination port can participate in STP after the SPAN or RSPAN session is disabled. On a source port, SPAN does not affect the STP status. STP can be active on trunk ports carrying an RSPAN VLAN.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
CDP
</term>
<listitem>
<simpara>
A SPAN destination port does not participate in CDP while the SPAN session is active. After the SPAN session is disabled, the port again participates in CDP.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
VTP
</term>
<listitem>
<simpara>
You can use VTP to prune an RSPAN VLAN between switches.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
VLAN and trunking
</term>
<listitem>
<simpara>
You can modify VLAN membership or trunk settings for source or destination ports at any time. However, changes in VLAN membership or trunk settings for a destination port do not take effect until you remove the SPAN destination configuration. Changes in VLAN membership or trunk settings for a source port immediately take effect, and the respective SPAN sessions automatically adjust accordingly.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
EtherChannel
</term>
<listitem>
<simpara>
You can configure an EtherChannel group as a source port but not as a SPAN destination port. When a group is configured as a SPAN source, the entire group is monitored.
</simpara>
<simpara>If a physical port is added to a monitored EtherChannel group, the new port is added to the SPAN source port list. If a port is removed from a monitored EtherChannel group, it is automatically removed from the source port list.</simpara>
<simpara>A physical port that belongs to an EtherChannel group can be configured as a SPAN source port and still be a part of the EtherChannel. In this case, data from the physical port is monitored as it participates in the EtherChannel. However, if a physical port that belongs to an EtherChannel group is configured as a SPAN destination, it is removed from the group. After the port is removed from the SPAN session, it rejoins the EtherChannel group. Ports removed from an EtherChannel group remain members of the group, but they are in the inactive or suspended state.</simpara>
<simpara>If a physical port that belongs to an EtherChannel group is a destination port and the EtherChannel group is a source, the port is removed from the EtherChannel group and from the list of monitored ports.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Multicasting
</term>
<listitem>
<simpara>
Multicast traffic can be monitored. For egress and ingress port monitoring, only a single unedited packet is sent to the SPAN destination port. It does not reflect the number of times the multicast packet is sent.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Private VLAN
</term>
<listitem>
<simpara>
A private-VLAN port cannot be a SPAN destination port.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Secure port
</term>
<listitem>
<simpara>
A secure port cannot be a SPAN destination port.
</simpara>
<simpara>For SPAN sessions, do not enable port security on ports with monitored egress when ingress forwarding is enabled on the destination port. For RSPAN source sessions, do not enable port security on any ports with monitored egress.</simpara>
<simpara>An IEEE 802.1x port can be a SPAN source port. You can enable IEEE 802.1x on a port that is a SPAN destination port; however, IEEE 802.1x is disabled until the port is removed as a SPAN destination.</simpara>
<simpara>For SPAN sessions, do not enable IEEE 802.1x on ports with monitored egress when ingress forwarding is enabled on the destination port. For RSPAN source sessions, do not enable IEEE 802.1x on any ports that are egress monitored.</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="_configuration_tasks_6">
<title>Configuration tasks</title>
<section id="_default_span_and_rspan_configuration">
<title>Default SPAN and RSPAN configuration</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="40*"/>
<colspec colname="col_2" colwidth="60*"/>
<thead>
<row>
<entry align="left" valign="top">Feature                               </entry>
<entry align="left" valign="top"> Default Setting</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>SPAN state (SPAN and RSPAN)</simpara></entry>
<entry align="left" valign="top"><simpara>Disabled.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Source port traffic to monitor</simpara></entry>
<entry align="left" valign="top"><simpara>Both received and sent traffic (both).</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Encapsulation type (destination port)</simpara></entry>
<entry align="left" valign="top"><simpara>Native form (untagged packets).</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Ingress forwarding (destination port)</simpara></entry>
<entry align="left" valign="top"><simpara>Disabled</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>VLAN filtering</simpara></entry>
<entry align="left" valign="top"><simpara>On a trunk interface used as a source port, all VLANs are monitored.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>RSPAN VLANs</simpara></entry>
<entry align="left" valign="top"><simpara>None configured.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section id="_configuration_guidelines">
<title>Configuration guidelines</title>
<section id="_span">
<title>SPAN</title>
<itemizedlist>
<listitem>
<simpara>
For SPAN sources, you can monitor traffic for a single port or VLAN or a series or range of ports or VLANs for each session. You cannot mix source ports and source VLANs within a single SPAN session.
</simpara>
</listitem>
<listitem>
<simpara>
The destination port cannot be a source port; a source port cannot be a destination port.
</simpara>
</listitem>
<listitem>
<simpara>
You cannot have two SPAN sessions using the same destination port.
</simpara>
</listitem>
<listitem>
<simpara>
When you configure a switch port as a SPAN destination port, it is no longer a normal switch port; only monitored traffic passes through the SPAN destination port.
</simpara>
</listitem>
<listitem>
<simpara>
Entering SPAN configuration commands does not remove previously configured SPAN parameters. You must enter the no monitor session {session_number | all | local | remote} global configuration command to delete configured SPAN parameters.
</simpara>
</listitem>
<listitem>
<simpara>
For local SPAN, outgoing packets through the SPAN destination port carry the original encapsulation headers—untagged, ISL, or IEEE 802.1Q—if the encapsulation replicate keywords are specified. If the keywords are not specified, the packets are sent in native form. For RSPAN destination ports, outgoing packets are not tagged.
</simpara>
</listitem>
<listitem>
<simpara>
You can configure a disabled port to be a source or destination port, but the SPAN function does not start until the destination port and at least one source port or source VLAN are enabled.
</simpara>
</listitem>
<listitem>
<simpara>
You can limit SPAN traffic to specific VLANs by using the filter vlan keyword. If a trunk port is being monitored, only traffic on the VLANs specified with this keyword is monitored. By default, all VLANs are monitored on a trunk port.
</simpara>
</listitem>
<listitem>
<simpara>
You cannot mix source VLANs and filter VLANs within a single SPAN session.
</simpara>
</listitem>
<listitem>
<simpara>
Catalyst 3560-24PS and 3560-48PS switches have hardware limitations related to SPAN. An egress SPAN copy of routed unicast traffic might show an incorrect destination MAC address on both local and remote SPAN sessions. This limitation does not apply to bridged packets. The workaround for local SPAN is to use the replicate option.
</simpara>
</listitem>
<listitem>
<simpara>
On Catalyst 3560-24PS and 3560-48PS switches, egress SPAN routed packets (both unicast and multicast) show the incorrect source MAC address. For local SPAN packets with native encapsulation on the destination port, the packet shows the MAC address of VLAN 1. This problem does not appear with local SPAN when the encapsulation replicate option is used. This limitation does not apply to bridged packets. The workaround is to use the encapsulate replicate keywords in the monitor session global configuration command.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_rspan">
<title>RSPAN</title>
<itemizedlist>
<listitem>
<simpara>
All the items in the previous section apply to RSPAN
</simpara>
</listitem>
<listitem>
<simpara>
As RSPAN VLANs have special properties, you should reserve a few VLANs across your network for use as RSPAN VLANs; do not assign access ports to these VLANs.
</simpara>
</listitem>
<listitem>
<simpara>
You can apply an output ACL to RSPAN traffic to selectively filter or monitor specific packets. Specify these ACLs on the RSPAN VLAN in the RSPAN source switches.
</simpara>
</listitem>
<listitem>
<simpara>
For RSPAN configuration, you can distribute the source ports and the destination ports across multiple switches in your network.
</simpara>
</listitem>
<listitem>
<simpara>
RSPAN does not support BPDU packet monitoring or other Layer 2 switch protocols.
</simpara>
</listitem>
<listitem>
<simpara>
The RSPAN VLAN is configured only on trunk ports and not on access ports. To avoid unwanted traffic in RSPAN VLANs, make sure that the VLAN remote-span feature is supported in all the participating switches.
</simpara>
</listitem>
<listitem>
<simpara>
Access ports (including voice VLAN ports) on the RSPAN VLAN are put in the inactive state.
</simpara>
</listitem>
<listitem>
<simpara>
RSPAN VLANs are included as sources for port-based RSPAN sessions when source trunk ports have active RSPAN VLANs. RSPAN VLANs can also be sources in SPAN sessions. However, since the switch does not monitor spanned traffic, it does not support egress spanning of packets on any RSPAN VLAN identified as the destination of an RSPAN source session on the switch.
</simpara>
</listitem>
<listitem>
<simpara>
You can configure any VLAN as an RSPAN VLAN as long as these conditions are met:
</simpara>
</listitem>
</itemizedlist>
<simpara>–The same RSPAN VLAN is used for an RSPAN session in all the switches.</simpara>
<simpara>–All participating switches support RSPAN.</simpara>
<itemizedlist>
<listitem>
<simpara>
We recommend that you configure an RSPAN VLAN before you configure an RSPAN source or a destination session.
</simpara>
</listitem>
<listitem>
<simpara>
If you enable VTP and VTP pruning, RSPAN traffic is pruned in the trunks to prevent the unwanted flooding of RSPAN traffic across the network for VLAN IDs that are lower than 1005.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_remove_any_existing_span_configuration">
<title>Remove any existing SPAN configuration</title>
<screen>no monitor session {session_number | all | local | remote}</screen>
<simpara>For session_number, the range is 1 to 66.</simpara>
<simpara>Specify <emphasis role="strong">all</emphasis> to remove all SPAN sessions, <emphasis role="strong">local</emphasis> to remove all local sessions, or <emphasis role="strong">remote</emphasis> to remove all remote SPAN sessions.</simpara>
</section>
<section id="_create_a_local_span_session">
<title>Create a local SPAN session</title>
<screen>monitor session number source {interface _id | vlan id} [, | -] [both | rx | tx]
monitor session number destination {interface _id | vlan id} [, | -] [both | rx | tx]</screen>
<simpara>For session_number, the range is 1 to 66.</simpara>
<simpara>For interface-id, specify the source port or source VLAN to monitor.</simpara>
<itemizedlist>
<listitem>
<simpara>
For source interface-id, specify the source port to monitor. Valid interfaces include physical interfaces and port-channel logical interfaces (port-channel port-channel-number). Valid port-channel numbers are 1 to 48.
</simpara>
</listitem>
<listitem>
<simpara>
For vlan-id, specify the source VLAN to monitor. The range is 1 to 4094 (excluding the RSPAN VLAN).
</simpara>
</listitem>
</itemizedlist>
<simpara>(Optional) [, | -] Specify a series or range of interfaces. Enter a space before and after the comma; enter a space before and after the hyphen.</simpara>
<itemizedlist>
<listitem>
<simpara>
You can use the <emphasis role="strong">monitor session</emphasis> <emphasis>session_number</emphasis> <emphasis role="strong">source</emphasis> command multiple times to configure multiple source ports.
</simpara>
</listitem>
<listitem>
<simpara>
A single session can include multiple sources (ports or VLANs), defined in a series of commands, but you cannot combine source ports and source VLANs in one session.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_specify_a_span_session_and_the_destination_port">
<title>Specify a SPAN session and the destination port</title>
<screen>monitor session number
  destination {interface _id  [, | -] [both | rx | tx]
  [encapsulation replicate]}</screen>
<simpara>The session number  must be the same as the source session number.</simpara>
</section>
<section id="_specify_vlans_to_filter">
<title>Specify VLANs to filter</title>
<screen>monitor session session_number filter vlan vlan-id [, | -]</screen>
<simpara>For vlan-id, the range is 1 to 4094.</simpara>
<simpara>(Optional) Use a comma (,) to specify a series of VLANs, or use a hyphen (-) to specify a range of VLANs. Enter a space before and after the comma; enter a space before and after the hyphen.</simpara>
</section>
<section id="_configure_a_vlan_as_an_rspan_vlan">
<title>Configure a VLAN as an RSPAN VLAN</title>
<simpara>First create a new VLAN to be the RSPAN VLAN for the RSPAN session. You must
create the RSPAN VLAN in all switches that will participate in RSPAN. If the
RSPAN VLAN-ID is in the normal range (lower than 1005) and VTP is enabled in
the network, you can create the RSPAN VLAN in one switch, and VTP propagates it
to the other switches in the VTP domain. For extended-range VLANs (greater than
1005), you must configure RSPAN VLAN on both source and destination switches
and any intermediate switches.</simpara>
<simpara>Use VTP pruning to get an efficient flow of RSPAN traffic, or manually delete
the RSPAN VLAN from all trunks that do not need to carry the RSPAN traffic.</simpara>
<variablelist>
<varlistentry>
<term>
Steps
</term>
<listitem>
<orderedlist numeration="arabic">
<listitem>
<simpara>
Enter a VLAN ID to create a VLAN, or enter the VLAN ID of an existing VLAN, and enter VLAN configuration mode. The range is 2 to 1001 and 1006 to 4094.
The RSPAN VLAN cannot be VLAN 1 (the default VLAN) or VLAN IDs 1002 through 1005 (reserved for Token Ring and FDDI VLANs).
</simpara>
<screen>vlan vlan-id</screen>
</listitem>
<listitem>
<simpara>
Configure the VLAN as an RSPAN VLAN.
</simpara>
<screen>remote-span
exit</screen>
</listitem>
<listitem>
<simpara>
Specify the RSPAN session and the source port (monitored port).
</simpara>
<screen>monitor session session_number source {interface interface-id | vlan vlan-id} [, | -] [both | rx | tx]</screen>
</listitem>
<listitem>
<simpara>
Specify the RSPAN session and the destination RSPAN VLAN.
</simpara>
<screen>monitor session session_number destination remote vlan vlan-id</screen>
</listitem>
<listitem>
<simpara>
Configure the RSPAN destination session on a different switch (not the switch on which the source session was configured)
</simpara>
<screen>configure terminal
vlan id
  remote-span
  exit
monitor session { 1-66 | all | local | remote}
monitor session session_number source remote vlan vlan-id
 monitor session session_number destination {interface interface-id [, | -] [ingress {dot1q vlan vlan-id | isl | untagged vlan vlan-id | vlan vlan-id}]}
end</screen>
<note>
<simpara>Though visible in the command-line help string, encapsulation replicate is not supported for RSPAN. The original VLAN ID is overwritten by the RSPAN VLAN ID, and all packets appear on the destination port as untagged.</simpara>
<simpara>(Optional) [, | -] Specify a series or range of interfaces. Enter a space before and after the comma; enter a space before and after the hyphen.</simpara>
<simpara>Enter ingress with additional keywords to enable forwarding of incoming traffic on the destination port and to specify the encapsulation type:</simpara>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">dot1q vlan</emphasis> vlan-id: Forward incoming packets with IEEE 802.1Q encapsulation with the specified VLAN as the default VLAN.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">isl</emphasis>: Forward ingress packets with ISL encapsulation.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">untagged vlan</emphasis> vlan-id or <emphasis role="strong">vlan</emphasis> vlan-id: Forward incoming packets with untagged encapsulation type with the specified VLAN as the default VLAN.
</simpara>
</listitem>
</itemizedlist>
</note>
</listitem>
</orderedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_display_span_and_rspan_status">
<title>Display SPAN and RSPAN status</title>
<screen>Switch# show monitor session

Session 1
==========

Type              : Local Session
Source Ports      :
    RX Only       : None
    TX Only       : None
    Both          : Fa0/4
Source VLANs      :
    RX Only       : None
    TX Only       : None
    Both          : None
Source RSPAN VLAN : None
Destination Ports : Fa0/5
    Encapsulation: DOT1Q
          Ingress: Enabled, default VLAN = 5
Reflector Port    : None
Filter VLANs      : None
Dest RSPAN VLAN   : None</screen>
</section>
</section>
</chapter>
<chapter id="_frame_relay">
<title>Frame Relay</title>
<section id="_concepts_9">
<title>Concepts</title>
<section id="_frame_relay_introduction">
<title>Frame Relay introduction</title>
<itemizedlist>
<listitem>
<simpara>
Connection-oriented layer 2 WAN technology.
</simpara>
</listitem>
<listitem>
<simpara>
Speed between 56 Kbps to 45 Mbps
</simpara>
</listitem>
<listitem>
<simpara>
Statiscally multiplex virtual circuits over a single physical link.
</simpara>
</listitem>
<listitem>
<simpara>
NBMA (non broadcast multi-access)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_virtual_circuits">
<title>Virtual circuits</title>
<itemizedlist>
<listitem>
<simpara>
logical paths between two DTEs
</simpara>
</listitem>
<listitem>
<simpara>
can be permanent (PVC) or switched (SVC)
</simpara>
</listitem>
<listitem>
<simpara>
identifies with DLCI
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_frame_relay_hardware_configurations">
<title>Frame Relay hardware configurations</title>
<simpara>You can create Frame Relay connections using one of the following hardware configurations:</simpara>
<itemizedlist>
<listitem>
<simpara>
Routers and access servers connected directly to the Frame Relay switch
</simpara>
</listitem>
<listitem>
<simpara>
Routers and access servers connected directly to a channel service unit/digital service unit (CSU/DSU), which then connects to a remote Frame Relay switch
</simpara>
</listitem>
</itemizedlist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/frame-relay-typical-configuration.png" contentdepth="100"/>
  </imageobject>
  <textobject><phrase>images/frame-relay-typical-configuration.png</phrase></textobject>
</mediaobject>
</informalfigure>
</section>
<section id="_frame_relay_frame_format">
<title>Frame Relay frame format</title>
<itemizedlist>
<listitem>
<simpara>
Uses LAPF (link access protocol for frame - mode bearer services) which is a variation of the HDLC frame
</simpara>
</listitem>
<listitem>
<simpara>
There is no control frame, no flow control, no error control, no sequence numbers
</simpara>
</listitem>
</itemizedlist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/frame-relay-frame-format.png" contentdepth="100"/>
  </imageobject>
  <textobject><phrase>images/frame-relay-frame-format.png</phrase></textobject>
</mediaobject>
</informalfigure>
<variablelist>
<varlistentry>
<term>
Flags
</term>
<listitem>
<simpara>
binary number 01111110 at the start and end of the frame
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Address
</term>
<listitem>
<simpara>
The frame relay header contains the following information:
</simpara>
<variablelist>
<varlistentry>
<term>
DLCI 
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
10-bit DLCI
</simpara>
</listitem>
<listitem>
<simpara>
represents the virtual connection between the DTE device and the switch.
</simpara>
</listitem>
<listitem>
<simpara>
local significance
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
EA 
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Extended Address
</simpara>
</listitem>
<listitem>
<simpara>
2 x 1 bit  ( 8th byte of each byte)
</simpara>
</listitem>
<listitem>
<simpara>
indicate whether the byte in which the EA value is 1 is the last addressing field.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
C/R
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Not currently defined.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
FECN
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Forward-explicit congestion notification
</simpara>
</listitem>
<listitem>
<simpara>
1 bit set by a switch
</simpara>
</listitem>
<listitem>
<simpara>
indicate to an end DTE device that congestion was experienced in the direction of the frame transmission from
source to destination.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
BECN
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Backward-explicit congestion notification
</simpara>
</listitem>
<listitem>
<simpara>
1 bit set by a switch
</simpara>
</listitem>
<listitem>
<simpara>
indicates that congestion was experienced in the network in the direction opposite of the frame transmission from source to
destination.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
DE
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Discard eligibility
</simpara>
</listitem>
<listitem>
<simpara>
1-bit set by the DTE device, such as a router
</simpara>
</listitem>
<listitem>
<simpara>
indicates that the marked frame is of lesser importance relative to other frames being
transmitted and be dropped before other frame
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Data
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Contains encapsulated upper-layer data.
</simpara>
</listitem>
<listitem>
<simpara>
variable-length field up to 16,000 octets.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
FCS
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Frame Check Sequence
</simpara>
</listitem>
<listitem>
<simpara>
value computed by the source device and verified by the receiver to ensure integrity of transmission.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_frame_relay_addressing">
<title>Frame Relay addressing</title>
<section id="_dlci">
<title>DLCI</title>
<itemizedlist>
<listitem>
<simpara>
Data link connection identifier
</simpara>
</listitem>
<listitem>
<simpara>
10-bits
</simpara>
</listitem>
<listitem>
<simpara>
local significance, unique between DTE and DCE
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_dynamic_address_mapping">
<title>Dynamic address mapping</title>
<simpara>Dynamic address mapping uses <emphasis role="strong">Frame Relay Inverse ARP</emphasis> to request the next hop protocol address
for a specific connection, given its known DLCI. Responses to Inverse ARP requests are entered in
an address-to-DLCI mapping table on the router ; the table is then used to supply the
next hop protocol address or the DLCI for outgoing traffic.</simpara>
<simpara>Inverse ARP is enabled by default for all protocols it supports, but can be disabled for specific
protocol-DLCI pairs. As a result, you can use dynamic mapping for some protocols and static
mapping for other protocols on the same DLCI. You can explicitly disable Inverse ARP for a
protocol-DLCI pair if you know that the protocol is not supported on the other end of the connection.</simpara>
</section>
<section id="_static_address_mapping">
<title>Static address mapping</title>
<simpara>A static map links a specified next-hop protocol address to a specified DLCI.
Static mapping removes the need for Inverse ARP requests; when you supply a
static map, Inverse ARP is automatically disabled for the specified protocol on
the specified DLCI. You must use static mapping if the router at the other end
either does not support Inverse ARP at all or does not support Inverse ARP for
a specific protocol that you want to use over Frame Relay.</simpara>
</section>
</section>
<section id="_lmi">
<title>LMI</title>
<itemizedlist>
<listitem>
<simpara>
Local Management Interface
</simpara>
</listitem>
<listitem>
<simpara>
Developed in 1990 by Cisco Systems, StrataCom, Northern Telecom, and Digital Equipment Corporation.
</simpara>
</listitem>
<listitem>
<simpara>
Extensions to basic Frame Relay specification like
</simpara>
<variablelist>
<varlistentry>
<term>
LMI global addressing 
</term>
<listitem>
<simpara>
The LMI global addressing extension gives Frame Relay DLCI values global rather than local significance.
DLCI values become DTE addresses that are unique in the Frame Relay WAN.
The global addressing extension adds functionality and manageability to Frame Relay internetworks.
Individual network interfaces and the end nodes attached to
them, for example, can be identified by using standard address-resolution and
discovery techniques. In addition, the entire Frame Relay network appears to be
a typical LAN to routers on its periphery.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
LMI virtual cirtual status 
</term>
<listitem>
<simpara>
LMI virtual circuit status messages provide communication and synchronization
between Frame Relay DTE and DCE devices. These messages are used to
periodically report on the status of PVCs, which prevents data from being sent
into black holes (that is, over PVCs that no longer exist).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
LMI multicasting 
</term>
<listitem>
<simpara>
The LMI multicasting extension allows multicast groups to be assigned.
Multicasting saves bandwidth by allowing routing updates and address-resolution
messages to be sent only to specific groups of routers. The extension also
transmits reports on the status of multicast groups in update messages.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</listitem>
</itemizedlist>
<section id="_lmi_types">
<title>LMI types</title>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>Frame Relay LMI Types</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="22*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="22*"/>
<colspec colname="col_4" colwidth="22*"/>
<thead>
<row>
<entry align="left" valign="top">LMI Type </entry>
<entry align="left" valign="top"> Source Document     </entry>
<entry align="left" valign="top"> Allowed DLCI Range </entry>
<entry align="left" valign="top"> LMI DLCI</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>cisco</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Cisco Proprietary</simpara></entry>
<entry align="left" valign="top"><simpara>16–1007</simpara></entry>
<entry align="left" valign="top"><simpara>1023</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>ansi</literal></simpara></entry>
<entry align="left" valign="top"><simpara>ANSI T1.617 Annex D</simpara></entry>
<entry align="left" valign="top"><simpara>16–991</simpara></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>q933a</literal></simpara></entry>
<entry align="left" valign="top"><simpara>ITU Q.933 Annex A</simpara></entry>
<entry align="left" valign="top"><simpara>16–991</simpara></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="_lmi_autosense">
<title>LMI autosense</title>
<itemizedlist>
<listitem>
<simpara>
Enables the interface to determine the LMI type supported by the switch.
</simpara>
</listitem>
<listitem>
<simpara>
Since IOS 11.2, by default no need to configure LMI explicitly
</simpara>
</listitem>
<listitem>
<simpara>
LMI autosense is active in the following situations:
</simpara>
<itemizedlist>
<listitem>
<simpara>
The router is powered up or the interface changes state to up.
</simpara>
</listitem>
<listitem>
<simpara>
The line protocol is down but the line is up.
</simpara>
</listitem>
<listitem>
<simpara>
The interface is a Frame Relay DTE.
</simpara>
</listitem>
<listitem>
<simpara>
The LMI type is not explicitly configured.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
How it works?
</simpara>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">Status request</emphasis> : The router sends out a full status request, in all three LMI types, to the switch. The
  order is ANSI, ITU, cisco in rapid succession.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Status messages</emphasis> :  One or more of the status requests will elicit a reply
 from the switch. The router will decode the format of the
reply and configure itself automatically. If more than one reply is received,
the router will configure itself with the type of the last received reply.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
What happens when LMI is unsuccessful?
</simpara>
<itemizedlist>
<listitem>
<simpara>
Every N391 interval (default is 60 seconds, which is 6 keep exchanges at 10
seconds each), LMI autosense will attempt to ascertain the LMI type.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<tip><simpara>The only visible indication to the user that LMI autosense is under way is that
<emphasis role="strong">debug frame lmi</emphasis> is turned on. At every N391 interval, the user will now see
three rapid status inquiries coming out of the serial interface: one in ANSI,
one in ITU, and one in cisco LMI-type.</simpara></tip>
</section>
<section id="_lmi_status">
<title>LMI Status</title>
</section>
</section>
<section id="_encapsulation">
<title>Encapsulation</title>
<simpara>Two choices for the encapsulation of network protocols over Frame Relay:</simpara>
<itemizedlist>
<listitem>
<simpara>
Cisco
</simpara>
</listitem>
<listitem>
<simpara>
IETF (RFC 2427)
</simpara>
</listitem>
</itemizedlist>
<simpara>The encapsulation must be the same on the 2 DTEs.</simpara>
<tip><simpara>Shut down the interface prior to changing encapsulation types. Although shutting down the interface is not required, it ensures that the interface is reset for the new encapsulation.</simpara></tip>
</section>
<section id="_congestion_controls">
<title>Congestion controls</title>
<itemizedlist>
<listitem>
<simpara>
FECN, BECN, DE
</simpara>
</listitem>
</itemizedlist>
<simpara>Bit  : Meaning When Set                                    : Where Set
FECN : Congestion in the same direction as this frame      : By FR switches in user frames
BECN : Congestion in the opposite direction of this frame  : By FR switches or routers in user or Q.922 test frames
DE   : This frame should be discarded before non-DE frames : By routers or switches in user frames</simpara>
<itemizedlist>
<listitem>
<simpara>
Adaptative shaping
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_compression">
<title>Compression</title>
<simpara>Cisco IOS software supports three options for payload compression on Frame Relay VCs:
packet by packet, data stream, and Frame Relay Forum Implementation Agreement 9
(FRF.9). FRF.9 is the only standardized protocol of the three options. FRF.9 compression
and data-stream compression function basically the same way; the only real difference is
that FRF.9 implies compatibility with non-Cisco devices.</simpara>
<simpara>All three FR compression options use LZS as the compression algorithm, but one key
difference relates to their use of compression dictionaries. LZS defines dynamic dictionary
entries that list a binary string from the compressed data, and an associated smaller string
that represents it during transmission::
thereby reducing the number of bits used to send
data. The table of short binary codes, and their longer associated string of bytes, is called a
dictionary. The packet-by-packet compression method also uses LZS, but the compression
dictionary is built for each packet, then discarded::
hence the name packet-by-packet. The
other two methods do not clear the dictionary after each packet.</simpara>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>Frame Relay payload compression feature comparison</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="45*"/>
<colspec colname="col_2" colwidth="18*"/>
<colspec colname="col_3" colwidth="18*"/>
<colspec colname="col_4" colwidth="18*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Feature</simpara></entry>
<entry align="left" valign="top"><simpara>Packet by Packet</simpara></entry>
<entry align="left" valign="top"><simpara>FRF.9</simpara></entry>
<entry align="left" valign="top"><simpara>Data Stream</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Uses LZS algorithm?</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Same dictionary for all packets?</simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Cisco proprietary?</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
<entry align="left" valign="top"><simpara>No</simpara></entry>
<entry align="left" valign="top"><simpara>Yes</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="_frame_relay_fragmentation">
<title>Frame Relay fragmentation</title>
<section id="_frf_12">
<title>FRF.12</title>
<itemizedlist>
<listitem>
<simpara>
uses FRF.12 for LFI over a Frame Relay PVC
</simpara>
</listitem>
<listitem>
<simpara>
IOS supports two methods for configuring FRF.12:
</simpara>
<itemizedlist>
<listitem>
<simpara>
legacy configuration requires FRTS and a queuing tool
</simpara>
</listitem>
<listitem>
<simpara>
Frame Relay fragmentation at the interfaces (&gt;= ios 12.2(13T))
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section id="_frf_11c">
<title>FRF.11c</title>
<itemizedlist>
<listitem>
<simpara>
works only on Voice over Frame Relay VCs
</simpara>
</listitem>
<listitem>
<simpara>
voice frames are never fragmented, and always interleaved without the need of any queing tool
</simpara>
</listitem>
<listitem>
<simpara>
same configuration to the legacy style of FRF.12 once the VoFR VC has been configured
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_multilink_ppp">
<title>Multilink PPP</title>
<itemizedlist>
<listitem>
<simpara>
Only option for Frame Relay-to-ATM Service Interworking.
</simpara>
</listitem>
<listitem>
<simpara>
MLP over FR uses PPP headers instead of the Cisco or RFC 2427 header, thereby enabling many PPP features
supported by the PPP headers. MLP and LFI configuration would simply need to be added
to that configuration to achieve LFI.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
</section>
<section id="_configuration_tasks_7">
<title>Configuration tasks</title>
<simpara>There are required, basic steps you must follow to enable Frame Relay for your network.
In addition, you can customize Frame Relay for your particular network needs and monitor Frame Relay
connections. The following sections outline these tasks. The tasks in the first two sections are
required.</simpara>
<itemizedlist>
<listitem>
<simpara>
Enable Frame Relay Encapsulation on an Interface
</simpara>
</listitem>
<listitem>
<simpara>
Configure Dynamic or Static Address Mapping
</simpara>
</listitem>
<listitem>
<simpara>
Configure the LMI
</simpara>
</listitem>
<listitem>
<simpara>
Configure Frame Relay Switched Virtual Circuits
</simpara>
</listitem>
<listitem>
<simpara>
Configure Frame Relay Traffic Shaping
</simpara>
</listitem>
<listitem>
<simpara>
Customize Frame Relay for Your Network
</simpara>
</listitem>
<listitem>
<simpara>
Monitor the Frame Relay Connections
</simpara>
</listitem>
</itemizedlist>
<section id="_enable_frame_relay_encapsulation_on_an_interface">
<title>Enable Frame Relay encapsulation on an interface</title>
<screen>(config-if)# encapsulation frame-relay [ietf]</screen>
</section>
<section id="_configure_static_address_mapping">
<title>Configure static address mapping</title>
<simpara>Maps between a next-hop protocol address and DLCI destination.</simpara>
<screen>(config-if)# frame-relay map protocol protocol-address dlci [broadcast] [ietf] [cisco]</screen>
<simpara>The supported protocols are: ip, ipx, decnet, appletalk, vines, clns</simpara>
</section>
<section id="_configure_the_lmi">
<title>Configure the LMI</title>
<variablelist>
<varlistentry>
<term>
Steps
</term>
<listitem>
<orderedlist numeration="arabic">
<listitem>
<simpara>
Set the LMI type (required)
</simpara>
<screen>(config-if)# frame-relay lmi-type {ansi | cisco | q933a}</screen>
</listitem>
<listitem>
<simpara>
Set the LMI keepalive interval (required)
</simpara>
<screen>(config-if)# keepalive number</screen>
</listitem>
<listitem>
<simpara>
Set various optional counter, intervals, and thresholds (optional)
</simpara>
</listitem>
</orderedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_enable_frame_relay_svc_support_on_the_interface">
<title>Enable Frame Relay SVC support on the interface</title>
</section>
<section id="_enable_frame_relay_traffic_shaping_on_the_interface">
<title>Enable Frame Relay traffic shaping on the interface</title>
<tip><simpara>FRTS can only be applied to the physical interface</simpara></tip>
</section>
<section id="_configure_frame_relay_end_to_end_keepalives">
<title>Configure Frame Relay end-to-end keepalives</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>
Specify a map class for the VC
</simpara>
<screen>(config)# map-class frame-relay name</screen>
</listitem>
<listitem>
<simpara>
Specify Frame Relay end-to-end keepalive mode
</simpara>
<screen>(config-map-class)# frame-relay end-to-end keepalive mode { bidirectional | request | reply | passive-reply }</screen>
<variablelist>
<varlistentry>
<term>
bidirectional
</term>
<listitem>
<simpara>
The device sends keepalive requests to the other end of the VC and responds to keepalive requests from the other end of the VC.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
request
</term>
<listitem>
<simpara>
The device sends keepalive requests to the other end of the VC.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
reply
</term>
<listitem>
<simpara>
The device responds to keepalive requests from the other end of the VC.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
passive-reply
</term>
<listitem>
<simpara>
The device responds to keepalive requests from the other end of the VC, but will not track errors or successes.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</listitem>
</orderedlist>
</section>
<section id="_modify_the_default_parameters">
<title>Modify the default parameters</title>
<simpara>Modifies the number of errors needed to change the keepalive state from up to down.</simpara>
<screen>(config-map-class)# frame-relay end-to-end keepalive error-threshold {send | receive} count</screen>
<simpara>Modifies the number of recent events to be checked for errors.</simpara>
<screen>(config-map-class)# frame-relay end-to-end keepalive event-window {send | receive} count</screen>
<simpara>Modifies the number of consecutive success events required to change the keepalive state from down to up.</simpara>
<screen>(config-map-class)# frame-relay end-to-end keepalive success-events {send | receive} count</screen>
<simpara>Modifies the timer interval.</simpara>
<screen>(config-map-class)# frame-relay end-to-end keepalive timer {send | receive} interval</screen>
</section>
<section id="_enable_ppp_over_frame_relay">
<title>Enable PPP over Frame Relay</title>
<simpara>Defines the PVC and maps it to the virtual template.</simpara>
<screen>(config-if)# frame-relay interface-dlci dlci [ppp virtual-template-name]</screen>
</section>
<section id="_configure_frame_relay_subinterfaces">
<title>Configure Frame Relay subinterfaces</title>
<simpara>Creates a point-to-point or multipoint subinterface.</simpara>
<screen>(config)# interface type number.subinterface-number {multipoint | point-to-point}</screen>
<simpara>Configures Frame Relay encapsulation on the serial interface.</simpara>
<screen>(config-subif)# encapsulation frame-relay</screen>
</section>
<section id="_define_subinterface_addressing_on_point_to_point_subinterfaces">
<title>Define subinterface addressing on point-to-point subinterfaces</title>
<simpara>Associates the selected point-to-point subinterface with a DLCI.</simpara>
<screen>(config-subif)# encapsulation interface-dlci number</screen>
</section>
<section id="_accept_inverse_arp_for_dynamic_address_mapping_on_multipoint_subinterfaces">
<title>Accept inverse ARP for dynamic address mapping on multipoint subinterfaces</title>
<simpara>Associates a specified multipoint subinterface with a DLCI.</simpara>
<screen>(config-if)# frame-relay interface-dlci dlci</screen>
</section>
<section id="_configure_static_address_mapping_on_multipoint_subinterfaces">
<title>Configure static address mapping on multipoint subinterfaces</title>
<screen>(config-if)# frame-relay map protocol protocol-address dlci [broadcast] [ietf] [cisco]</screen>
<section id="_disable_or_reenable_frame_relay_inverse_arp">
<title>disable or reenable Frame Relay inverse ARP</title>
<simpara>Enables Frame Relay Inverse ARP for a specific protocol and DLCI pair, only if it was previously disabled.</simpara>
<screen>(config-subif)# frame-relay inverse-arp protocol dlci</screen>
<simpara>Disables Frame Relay Inverse ARP for a specific protocol and DLCI pair.</simpara>
<screen>(config-subif)# no frame relay inverse-arp protocol dlci</screen>
</section>
<section id="_create_a_broadcast_queue_for_an_interface">
<title>Create a broadcast queue for an interface</title>
<screen>(config-if)# frame-relay broadcast-queue size byte-rate packet-rate</screen>
</section>
<section id="_configure_frame_relay_fragmentation">
<title>Configure frame relay fragmentation</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>
Specifies a map class to define QoS values for a Frame Relay SVC or PVC. The map class can be applied to one or many PVCs.
</simpara>
<screen>(config)# map-class frame-relay map-class-name</screen>
</listitem>
<listitem>
<simpara>
Configures Frame Relay fragmentation for the map class. The fragment_size argument defines the payload size of a fragment; it excludes the Frame Relay headers and any Frame Relay fragmentation header. The valid range is from 16 to 1600 bytes, and the default is 53.
</simpara>
<screen>(config-map-class)# frame-relay fragment fragment_size</screen>
</listitem>
</orderedlist>
</section>
</section>
<section id="_configure_payload_compression">
<title>Configure payload compression</title>
</section>
<section id="_verify_frame_relay_configuration">
<title>Verify Frame Relay configuration</title>
<simpara>Displays statistics about PVCs for Frame Relay interfaces.</simpara>
<screen># show frame-relay pvc [interface interface] [dlci]</screen>
<simpara>show frame-relay lmi
show frame-relay map
debug frame-relay lmi</simpara>
<simpara>Displays Frame Relay fragmentation information.</simpara>
<screen># show frame-relay fragment [interface interface] [dlci]</screen>
<simpara>Display compression statistics</simpara>
<screen>(config)# show compress</screen>
<simpara>Displays information about the elements queued at a particular time at the DLCI
level, including the number of packets in the post-hardware- compression queue.</simpara>
<screen># show traffic-shape queue</screen>
<simpara>Shows the status of Frame Relay end-to-end keepalives</simpara>
<screen>show frame-relay end-to-end keepalive interface-id</screen>
</section>
</section>
</chapter>
<chapter id="_hdlc">
<title>HDLC</title>
<section id="_concepts_10">
<title>Concepts</title>
</section>
<section id="_configuration_5">
<title>Configuration</title>
</section>
</chapter>
<chapter id="_point_to_point_protocol">
<title>Point-to-Point Protocol</title>
<section id="_concepts_11">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
HDLC (high-level data link control) and PPP: layer 2 on point-to-point links
</simpara>
</listitem>
<listitem>
<simpara>
ISO HDLC does not include a Type field , so the Cisco implementation adds a proprietary 2-byte Type field
</simpara>
</listitem>
<listitem>
<simpara>
hdlc : error detection, default on ios serial links
</simpara>
</listitem>
<listitem>
<simpara>
ppp : error detection, error recovery, standard protocol Type field, supports synchronous and asynchronous links
</simpara>
</listitem>
<listitem>
<simpara>
hdlc vs ppp framing
</simpara>
</listitem>
</itemizedlist>
<section id="_ppp_lcp">
<title>PPP LCP</title>
<itemizedlist>
<listitem>
<simpara>
LCP  (link control protocol) controls features independent of any Layer 3 protocol
</simpara>
</listitem>
<listitem>
<simpara>
NCP ( network control protocol) for each protocol (IP, appletalk, )
</simpara>
</listitem>
<listitem>
<simpara>
LCP operations:
</simpara>
</listitem>
<listitem>
<simpara>
LCP features
</simpara>
</listitem>
<listitem>
<simpara>
LQM link quality monitoring: drop if % of error frames above a configured value
</simpara>
</listitem>
<listitem>
<simpara>
looped link detection: drop link if a router receives its own randomly chosen magic number
</simpara>
</listitem>
<listitem>
<simpara>
layer 2 load balancing: fragment frames over multilink PPP
</simpara>
</listitem>
<listitem>
<simpara>
authentication: chap, pap
</simpara>
</listitem>
</itemizedlist>
<section id="_configuration_6">
<title>configuration</title>
<itemizedlist>
<listitem>
<simpara>
minimal with <emphasis role="strong">encapsulation ppp</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
optional authentication, quality
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_multilink_ppp_2">
<title>multilink PPP</title>
<itemizedlist>
<listitem>
<simpara>
originally intended to combine multiple ISDN B-channels without requiring any Layer 3 load balancing
</simpara>
</listitem>
<listitem>
<simpara>
now load balance traffic accross any type of point-to-point serial link
</simpara>
</listitem>
<listitem>
<simpara>
add a header ( 2 or 4 bytes ) to allow reassembly on the receiving end
</simpara>
</listitem>
<listitem>
<simpara>
configuration with multilink interfaces or virtual templates
</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<listitem>
<simpara>
LFI (link fragmentation and interleaving )
</simpara>
</listitem>
<listitem>
<simpara>
prevents small, delay sensitive packets from having to wait on longer, delay-insensitive packets to be completely serialized out an interface.
</simpara>
</listitem>
<listitem>
<simpara>
the queuing scheduler generally LLQ on the multilink interface determines the next packet to send:
</simpara>
</listitem>
</itemizedlist>
<section id="_configuration_7">
<title>configuration</title>
<simpara>ppp multilink interleave
ppp multilink fragment-delay ms  defines the fragment size based on size = x * bandwidth</simpara>
</section>
</section>
<section id="_ppp_compression">
<title>ppp compression</title>
<itemizedlist>
<listitem>
<simpara>
use L2 payload compression ( ip + tcp + data + DL) : best with longer packet
</simpara>
</listitem>
<listitem>
<simpara>
TCP header compression ( ip + tcp )
</simpara>
</listitem>
<listitem>
<simpara>
RTP header compression (ip + udp + rtp)
</simpara>
</listitem>
<listitem>
<simpara>
payload compression works best with longer packets, and header with shorter packets
</simpara>
</listitem>
<listitem>
<simpara>
header compression : achieves better compression ration 10:1 to 20:1
</simpara>
</listitem>
</itemizedlist>
<section id="_layer_2_compression">
<title>layer 2 compression</title>
<itemizedlist>
<listitem>
<simpara>
options: LZS (Lempel-Ziv Stacker), MPPC (microsoft point-to-point compression), Predictor
</simpara>
</listitem>
<listitem>
<simpara>
LZS use more CPU and less RAM than Predictor algorithm and have better compression ratio
</simpara>
</listitem>
<listitem>
<simpara>
stacker: supports hdlc, ppp, FR, ATM
</simpara>
</listitem>
<listitem>
<simpara>
mppc: ppp, atm
</simpara>
</listitem>
<listitem>
<simpara>
predictor: ppp, atm
</simpara>
</listitem>
<listitem>
<simpara>
configuration with a matching <emphasis role="strong">compress</emphasis> command under each interface on both end of the links
</simpara>
</listitem>
<listitem>
<simpara>
once configured, ppp starts ccp (compression control protocol) which is another NCP
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_header_compression">
<title>header compression</title>
<itemizedlist>
<listitem>
<simpara>
configured with legacy commands or MQC commands
</simpara>
</listitem>
<listitem>
<simpara>
legacy under the serial (ppp) or multilink interface
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">ip tcp header-compression [passive]</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">ip rtp header-compression [passive]</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
add also MQC commands
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
</section>
<section id="_configuration_tasks_8">
<title>Configuration tasks</title>
<screen>debug ppp authentication</screen>
<simpara>read also <ulink url="http://www.cisco.com/c/en/us/support/docs/wan/point-to-point-protocol-ppp/25440-debug-ppp-negotiation.html#sampdebug">understanding debug ppp negotiation</ulink></simpara>
</section>
</chapter>
</part>
<part id="_implement_ipv4">
<title>Implement IPv4</title>
<chapter id="_ipv4">
<title>IPv4</title>
<section id="_concepts_12">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
RFC 791
</simpara>
</listitem>
</itemizedlist>
<section id="_ip_packet_format">
<title>IP packet format</title>
<figure><title>IP packet format</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ip-packet-format.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/ip-packet-format.png</phrase></textobject>
</mediaobject>
</figure>
<variablelist>
<varlistentry>
<term>
Version
</term>
<listitem>
<simpara>
Indicates the version of IP currently used.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
IP Header Length (IHL)
</term>
<listitem>
<simpara>
Indicates the datagram header length in 32-bit words.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Type-of-Service
</term>
<listitem>
<simpara>
Specifies how an upper-layer protocol would like a current datagram to be handled, and assigns datagrams various levels of importance. Currently referred to as Differentiated Services Code Point (DSCP) (6 bits).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Total Length
</term>
<listitem>
<simpara>
Specifies the length, in bytes, of the entire IP packet, including the data and header.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Identification
</term>
<listitem>
<simpara>
Contains an integer that identifies the current datagram. This field is used to help piece together datagram fragments.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Flags
</term>
<listitem>
<simpara>
Consists of a 3-bit field of which the two low-order (least-significant) bits control fragmentation. The low-order bit specifies whether the packet can be fragmented. The middle bit specifies whether the packet is the last fragment in a series of fragmented packets. The third or high-order bit is not used.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Fragment Offset
</term>
<listitem>
<simpara>
Indicates the position of the fragment&#8217;s data relative to the beginning of the data in the original datagram, which allows the destination IP process to properly reconstruct the original datagram.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Time-to-Live
</term>
<listitem>
<simpara>
Maintains a counter that gradually decrements down to zero, at which point the datagram is discarded. This keeps packets from looping endlessly.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Protocol
</term>
<listitem>
<simpara>
Indicates which upper-layer protocol receives incoming packets after IP processing is complete.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Header Checksum
</term>
<listitem>
<simpara>
Helps ensure IP header integrity.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Source Address
</term>
<listitem>
<simpara>
Specifies the sending node.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Destination Address
</term>
<listitem>
<simpara>
Specifies the receiving node.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Options
</term>
<listitem>
<simpara>
Allows IP to support various options, such as security.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Data
</term>
<listitem>
<simpara>
Contains upper-layer information.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_ip_addressing">
<title>IP addressing</title>
<itemizedlist>
<listitem>
<simpara>
32-bits written in "dotted decimal"
</simpara>
</listitem>
<listitem>
<simpara>
classes: A,B,C,D,E
</simpara>
</listitem>
<listitem>
<simpara>
classless : prefix + host
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cidr">
<title>CIDR</title>
<itemizedlist>
<listitem>
<simpara>
Classless interdomain routing
</simpara>
</listitem>
<listitem>
<simpara>
defined in RFS 1517-1520
</simpara>
</listitem>
<listitem>
<simpara>
administrative assigment of large address blocks and the related summarized
  routes for the purpose of reducing the size of the Internet routing table
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_private_addressing">
<title>Private addressing</title>
<itemizedlist>
<listitem>
<simpara>
RFC 1918
</simpara>
</listitem>
<listitem>
<simpara>
10.0.0.0/8
</simpara>
</listitem>
<listitem>
<simpara>
172.16.0.0/12
</simpara>
</listitem>
<listitem>
<simpara>
192.168.0.0/16
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_vlsm">
<title>VLSM</title>
<itemizedlist>
<listitem>
<simpara>
Variable length subnet mask
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration_tasks_9">
<title>Configuration tasks</title>
<section id="_assign_an_ip_address_to_an_interface">
<title>Assign an IP address to an interface</title>
<screen>(config-if)# ip address ip-address mask [secondary]</screen>
</section>
<section id="_allow_the_use_of_ip_subnet_zero">
<title>Allow the use of IP subnet zero</title>
<screen>(config)# ip subnet-zero</screen>
</section>
<section id="_specify_the_format_in_which_netmask_appear_for_the_current_session">
<title>Specify the format in which netmask appear for the current session</title>
<screen>term ip netmask-format {bitcount | decimal | hexadecimal}</screen>
</section>
<section id="_specify_the_format_in_which_netmask_appear_for_the_current_line">
<title>Specify the format in which netmask appear for the current line</title>
<simpara>Enters line configuration mode for the range of lines specified by the first and last arguments.</simpara>
<screen>(config)# line vty first last</screen>
<simpara>Specifies the format the router uses to display the network mask for an individual line.</simpara>
<screen>term ip netmask-format {bitcount | decimal | hexadecimal}</screen>
</section>
<section id="_use_ip_unnumbered_interfaces_on_point_to_point_wan_interfaces">
<title>Use IP unnumbered interfaces on point-to-point WAN interfaces</title>
<itemizedlist>
<listitem>
<simpara>
Borrow the IP address of another interface
</simpara>
</listitem>
</itemizedlist>
<screen>(config-if)# ip unnumbered interface-type interface-id</screen>
<itemizedlist><title>Restrictions</title>
<listitem>
<simpara>
only point-to-point (non-multiaccess) WAN interfaces
</simpara>
</listitem>
<listitem>
<simpara>
You cannot reboot a IOS image over an ip unnumbered interface
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_use_a_31_bit_prefix_on_point_to_point_wan_interfaces">
<title>Use a 31-bit prefix on point-to-point WAN interfaces</title>
<itemizedlist>
<listitem>
<simpara>
Since RFC 3021
</simpara>
</listitem>
<listitem>
<simpara>
only on point-to-point WAN interfaces
</simpara>
</listitem>
</itemizedlist>
<screen>(config)# ip classless
(config-if)# ip address a.b.c.d 255.255.255.254</screen>
</section>
</section>
<section id="_troubleshooting_4">
<title>Troubleshooting</title>
<section id="_display_the_ip_parameters_for_the_interface">
<title>Display the IP parameters for the interface</title>
<screen>show ip interface</screen>
</section>
<section id="_display_the_ip_networks_the_device_is_connected_to">
<title>Display the IP networks the device is connected to</title>
<screen>show ip route connected</screen>
</section>
<section id="_rfc_5227_ipv4_address_conflict_detection">
<title>RFC 5227 - IPv4 address conflict detection</title>
</section>
</section>
</chapter>
<chapter id="_generic_routing_encapsulation">
<title>Generic Routing Encapsulation</title>
<section id="_concepts_13">
<title>Concepts</title>
<section id="_tunneling">
<title>Tunneling</title>
<simpara>Tunneling encapsulates data packets from one protocol inside a different
protocol and transports the data packets unchanged across a foreign network.
Unlike encapsulation, tunneling allows a lower-layer protocol, or same-layer
protocol, to be carried through the tunnel. A tunnel interface is a virtual (or
logical) interface.</simpara>
<simpara>Components:</simpara>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">Passenger protocol</emphasis> : The protocol that you are encapsulating. Examples of passenger protocols are AppleTalk, connectionless network service (CLNS), IP, and IPX.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Carrier protocol</emphasis> : The protocol that does the encapsulating. Examples of carrier protocols are GRE, IP-in-IP, Layer 2 Tunneling Protocol (L2TP), multiprotocol label switching (MPLS), STUN, and DLSw+.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Transport protocol</emphasis> : The protocol used to carry the encapsulated protocol. The main transport protocol is IP.
</simpara>
</listitem>
</itemizedlist>
<figure><title>IP Tunneling Terminology and Concepts</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ip-tunneling-concepts.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/ip-tunneling-concepts.png</phrase></textobject>
</mediaobject>
</figure>
</section>
<section id="_gre">
<title>GRE</title>
<itemizedlist>
<listitem>
<simpara>
RFC 2784
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_gre_keepalive">
<title>GRE keepalive</title>
<simpara>The GRE tunnel keepalive mechanism gives the ability for one side to originate
and receive keepalive packets to and from a remote router even if the remote
router does not support GRE keepalives. For GRE keepalives, the sender
pre-builds the keepalive response packet inside the original keepalive request
packet so that the remote end only needs to do standard GRE decapsulation of
the outer GRE IP header and then forward the inner IP GRE packet. GRE tunnel
keepalives timers on each side are independent and do not have to match. The
problem with the configuration of keepalives only on one side of the tunnel is
that only the router that has keepalives configured marks its tunnel interface
as down if the keepalive timer expires. The GRE tunnel interface on the other
side, where keepalives are not configured, remains up even if the other side of
the tunnel is down. The tunnel can become a black-hole for packets directed
into the tunnel from the side that did not have keepalives configured.</simpara>
</section>
</section>
<section id="_configuration_8">
<title>Configuration</title>
<section id="_configure_a_gre_tunnel">
<title>Configure a GRE tunnel</title>
<simpara>To build a tunnel, a tunnel interface must be defined on each of two routers
and the tunnel interfaces must reference each other.
At each router, the tunnel interface must be configured with a L3 address.
The tunnel endpoints, tunnel source, and tunnel destination must be defined,
and the type of tunnel must be selected.
Optional steps can be performed to customize the tunnel.</simpara>
<simpara>Remember to configure the router at each end of the tunnel.
If only one side of a tunnel is configured,
the tunnel interface may still come up and stay up (unless
keepalive is configured), but packets going into the tunnel will be dropped.</simpara>
<formalpara><title>summary steps</title><para>
<screen>interface tunnel number
  bandwidth kbps
  keepalive [period [retries]]
  tunnel source {ip-address | interface-type interface-number}
  tunnel destination {hostname | ip-address}
  tunnel key key-number
  tunnel mode {gre ip| gre multipoint}
  ip mtu bytes
  ip tcp mss mss-value
  tunnel path-mtu-discovery [age-timer {aging-mins| infinite}]</screen>
</para></formalpara>
<section id="_create_a_tunnel_interface">
<title>Create a tunnel interface</title>
<screen>interface tunnel number</screen>
</section>
<section id="_specify_a_source_interface_for_the_tunnel">
<title>Specify a source interface for the tunnel.</title>
<simpara>The tunnel source interface can be a local physical or logical local interface,
and not just an IP address</simpara>
<screen>tunnel source {a.b.c.d | source-interface }</screen>
</section>
<section id="_specify_the_destination_ip_address_for_the_tunnel">
<title>Specify the destination IP address for the tunnel.</title>
<tip><simpara>The router should have a route to this address, but not through the tunnel interface.</simpara></tip>
<screen>tunnel destination ip-address</screen>
</section>
<section id="_specify_the_tunnel_mode">
<title>Specify the tunnel mode</title>
<simpara>The default tunnel mode is <emphasis role="strong">gre ip</emphasis>.</simpara>
<screen>tunnel mode [gre {ip | multipoint} | dvmrp | ipip | mpls | nos]</screen>
</section>
<section id="_adjust_the_gre_keepalive">
<title>Adjust the GRE keepalive</title>
<simpara>Specifies the number of times that the device will continue to send keepalive
packets without response before bringing the tunnel interface protocol down.</simpara>
<simpara>GRE keepalive packets may be configured either on only one side of the tunnel or on both.
If GRE keepalive is configured on both sides of the tunnel, the period and retries arguments can be different at each side of the link.</simpara>
<simpara>This command is supported only on GRE point-to-point tunnels.</simpara>
<screen>(config-if)# keepalive [ period [retries]]</screen>
</section>
</section>
<section id="_configuration_example">
<title>Configuration example</title>
<simpara>Note that Ethernet interface 0/1 is the tunnel source for Router A and the tunnel destination for Router B. Fast Ethernet interface 0/1 is the tunnel source for Router B and the tunnel destination for Router A.</simpara>
<variablelist>
<varlistentry>
<term>
Router A
</term>
<listitem>
<screen>interface Tunnel0
 ip address 10.1.1.2 255.255.255.0
 tunnel source Ethernet0/1
 tunnel destination 192.168.3.2
 tunnel mode gre ip
!
interface Ethernet0/1
 ip address 192.168.4.2 255.255.255.0</screen>
</listitem>
</varlistentry>
<varlistentry>
<term>
Router B
</term>
<listitem>
<screen>interface Tunnel0
 ip address 10.1.1.1 255.255.255.0
 tunnel source FastEthernet0/1
 tunnel destination 192.168.4.2
 tunnel mode gre ip
!
interface FastEthernet0/1
 ip address 192.168.3.2 255.255.255.0</screen>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="_troubleshooting_5">
<title>Troubleshooting</title>
<simpara>Three reasons for a GRE tunnel to shut down:</simpara>
<itemizedlist>
<listitem>
<simpara>
There is no route to the tunnel destination address.
</simpara>
</listitem>
<listitem>
<simpara>
The interface that anchors the tunnel source is down.
</simpara>
</listitem>
<listitem>
<simpara>
The route to the tunnel destination address is through the tunnel itself. “%TUN-5-RECURDOWN:Tunnel0“
</simpara>
</listitem>
</itemizedlist>
<simpara>With the above three reasons for tunnel shut down are problems local to the
router at the tunnel endpoints and do not cover problems in the intervening
network.</simpara>
<simpara>Also if the two routers tunnel modes do not match, the tunnel interface can
still stay in an up/ip state but the routers cannot forward packets because of
the mismatch encapsulation.</simpara>
<section id="_tun_5_recurdown_error_message_and_flapping_eigrp_ospf_bgp_neighbors_over_a_gre_tunnel">
<title>"%TUN-5-RECURDOWN" error message and flapping EIGRP/OSPF/BGP neighbors over a GRE tunnel</title>
<simpara><ulink url="http://www.cisco.com/c/en/us/support/docs/ip/enhanced-interior-gateway-routing-protocol-eigrp/22327-gre-flap.html">http://www.cisco.com/c/en/us/support/docs/ip/enhanced-interior-gateway-routing-protocol-eigrp/22327-gre-flap.html</ulink></simpara>
</section>
</section>
</chapter>
<chapter id="_rip">
<title>RIP</title>
<section id="_overview">
<title>Overview</title>
<itemizedlist>
<listitem>
<simpara>
Distance vector protocol
</simpara>
</listitem>
<listitem>
<simpara>
transport: UDP 520
</simpara>
</listitem>
<listitem>
<simpara>
update destination:
</simpara>
<itemizedlist>
<listitem>
<simpara>
broadcast 255.255.255.255 for RIPv1
</simpara>
</listitem>
<listitem>
<simpara>
multicast 255.0.0.9 for RIPv2
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
full updates every 30 seconds
</simpara>
</listitem>
<listitem>
<simpara>
Trigerred updates
</simpara>
</listitem>
<listitem>
<simpara>
multiple routes to the same subnet with equal metric:
</simpara>
<itemizedlist>
<listitem>
<simpara>
1 to 6
</simpara>
</listitem>
<listitem>
<simpara>
default = 4
</simpara>
</listitem>
<listitem>
<simpara>
configured with <emphasis role="strong">ip maximum-paths <emphasis>n</emphasis></emphasis>
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
metric: hop count with
</simpara>
<itemizedlist>
<listitem>
<simpara>
1 signifying a directly connected network of the advertising router
</simpara>
</listitem>
<listitem>
<simpara>
16 signifying an unreachable network.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Support CIDR, VLSM, authentication
</simpara>
</listitem>
<listitem>
<simpara>
Periodic updates every 30 seconds to multicast address 224.0.0.9
</simpara>
</listitem>
<listitem>
<simpara>
Split horizon with poison reverse
</simpara>
</listitem>
<listitem>
<simpara>
Subnet mask included in route entry
</simpara>
</listitem>
<listitem>
<simpara>
Administrative distance: 120
</simpara>
</listitem>
<listitem>
<simpara>
Route tags when routes are redistributed into RIP
</simpara>
</listitem>
<listitem>
<simpara>
Can advertise a next-hop router that is different from itself
</simpara>
</listitem>
<listitem>
<simpara>
Does not keep a separate topology table
</simpara>
</listitem>
</itemizedlist>
<section id="_timers_2">
<title>Timers</title>
<variablelist>
<varlistentry>
<term>
Update timer
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
default: 30 seconds
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Invalid timer
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
default: 180 seconds
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Holdown timer
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
default:
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Flush timer
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
default: 240 seconds
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="_ripv2">
<title>RIPv2</title>
<simpara>Now after looking over RIPv1 we can see that it has some drawbacks in todays networks. So what RIPv2 can provide that RIPv1 cannot is the following;</simpara>
<literallayout class="monospaced">Subnet masks are carried with each route entry
Authentication of routing updates
Next-hop addresses are carried with each route entry
External route tags
Multicast route updates</literallayout>
<simpara>The most important of these extensions is the addition of a Subnet Mask field to the routing update entries, enabling the use of variable-length subnet masks and qualifying RIPv2 as a classless routing protocol.</simpara>
<simpara>RIPv2 multicasts updates to other RIPv2-speaking routers, using the reserved class D address 224.0.0.9. The advantage of multicasting is that devices on the local network that are not concerned with RIP routing do not have to spend time “unwrapping” broadcast packets from the router.</simpara>
<simpara>The RIPv2 message format is made up similar to RIPv1 but with the expectation of a couple of fields;</simpara>
<literallayout class="monospaced">Route Tag provides a field for tagging external routes or routes that have been redistributed into the RIPv2 process.</literallayout>
<literallayout class="monospaced">Subnet Mask is 32-bit mask that identifies the network and subnet portion of the IPv4 address.
Next Hop identifies a better next-hop address, if one exists, than the address of the advertising router.</literallayout>
<simpara>Compatibility with RIPv1</simpara>
<simpara>If the Version field indicates Version 1 but any bits of any unused fields are set to one, the update is discarded. If the version is greater than one, the fields defined as unused in Version 1 are ignored and the message is processed. As a result, newer editions of the protocol, like RIPv2, can be backward-compatible with RIPv1.</simpara>
<simpara>Four settings, which allows Versions 1 and 2 to interoperate:</simpara>
<literallayout class="monospaced">RIP-1, in which only RIPv1 messages are transmitted
RIP-1 Compatibility, which causes RIPv2 to broadcast its messages instead of multicast them so that RIPv1 may receive them
RIP-2, in which RIPv2 messages are multicast to destination address 224.0.0.9
None, in which no updates are sent</literallayout>
<simpara>These can be configured under the interface with the following command;</simpara>
<simpara>Router(config-if)ip rip send version {1,2}</simpara>
<simpara>Router(config-if)ip rip receive version {1,2}
Classless Routing Protocols</simpara>
<simpara>The true defining characteristic of classless routing protocols is the capability to carry subnet masks in their route advertisements. One benefit of having a mask associated with each route is that the all-zeros and all-ones subnets are now available for use. Classful routing protocols cannot distinguish between an all-zeros subnet (172.16.0.0, for example) and the major network number (172.16.0.0). Likewise, they cannot distinguish between a broadcast on the all-ones subnet (172.16.255. 255) and an all-subnets broadcast (172.16.255.255).</simpara>
<simpara>If the subnet masks are included, this difficulty disappears. You can readily see that 172.16.0.0/16 is the major network number and that 172.16.0.0/24 is an all-zeros subnet. 172.168.255.255/16 and 172.16.255.255/24 are just as distinguishable.</simpara>
<simpara>By default, the Cisco IOS rejects an attempt to configure an all-zeros subnet as an invalid address/mask combination even if a classless routing protocol is running. To override this default behavior, enter the global command ip subnet-zero.</simpara>
<simpara>A much greater benefit of having a subnet mask associated with each route is being able to use variable-length subnet masking (VLSM) and to summarize a group of major network addresses with a single aggregate address.</simpara>
<simpara>Router(config)#router rip
Router(config-router)#version 2
Router(config-router)#network 10.0.0.0
Router(config-router)#no auto-summary
Authentication</simpara>
<simpara>A security concern with any routing protocol is the possibility of a router accepting invalid routing updates. The source of invalid updates may be an attacker trying to maliciously disrupt the network or trying to capture packets by tricking the router into sending them to the wrong destination. A more mundane source of invalid updates may be a malfunctioning router. RIPv2 includes the capability to authenticate the source of a routing update by including a password.</simpara>
<simpara>Authentication is supported by modifying what would normally be the first route entry of the RIP message. With authentication, the maximum number of entries a single update can carry is reduced to 24. The presence of authentication is indicated by setting the Address Family Identifier field to all ones (0xFFFF). The Authentication Type for simple password authentication is two (0×0002), and the remaining 16 octets carry an alphanumeric password of up to 16 characters. The password is left-justified in the field, and if the password is less than 16 octets, the unused bits of the field are set to zero.</simpara>
<simpara>Cisco uses the first and last route entry spaces for MD5 authentication purposes.</simpara>
<simpara>MD5 is a one-way message digest or secure hash function, produced by RSA Data Security, Inc. It is also occasionally referred to as a cryptographic checksum because it works in somewhat the same way as an arithmetic checksum. MD5 computes a 128-bit hash value from a plain text message of arbitrary length (a RIPv2 update, for instance) and a password. This “fingerprint” is transmitted along with the message. The receiver, knowing the same password, calculates its own hash value. If nothing in the message has changed, the receiver’s hash value should match the sender’s value transmitted with the message.</simpara>
<simpara>The Cisco implementation of RIPv2 message authentication includes the choice of simple password or MD5 authentication, and the option of defining multiple keys, or passwords, on a “key chain.” The router may then be configured to use different keys at different times.</simpara>
<simpara>A key chain must be configured, even if there is only one key on it. Although any routers that will exchange authenticated updates must have the same password, the name of the key chain has significance only on the local router. When configuring clear text authentication the key numbers do not have to match, but when configuring MD5 authentication the key numbers much match on both side of the authentication to be successful. What can happen if both routers have different key numbers the router with highest key number, R1 = Key 1 R2 = Key 2, will learn the routes from the other router. The router with the lower number will not learn any routes from the other router. So R2 from my example will only learn routes from R1 and R1 will not learn any routes from R2.</simpara>
<simpara>Router(config)#key chain AUTH_R2
Router(config-keychain)#key 1
Router(config-keychain-key)#key-string ERICLEAHY.COM</simpara>
<simpara>Key management is used to migrate from one authentication key to another. So by defining multiple keys, you can set different times for when one key will begin and end. Then having the next key be used when the first key ends. This will help in keeping you keys integrity at a high level. The only down fall is when running this on multiple routers in your network you will need to keep all keys up to date! Also a key can be defined to never expire by adding the keyword infinite after the start time syntax.</simpara>
<simpara>Router(config-keychain-key)#accept-lifetime 17:30:00 May 5 2012 duration 43200
Router(config-keychain-key)#send-lifetime 17:30:00 May 5 2012 23:59:59 Dec 24 2012</simpara>
<simpara>After creating the key(s) you now have to befine which interface(s) the keys will be enabled on. MD5 should be used mostly but the key can be sent in clear text if MD5 is not defined.</simpara>
<simpara>Router(config-if)#ip rip authentication key-chain AUTH_R2</simpara>
<simpara>Router(config-if)#ip rip authentication mode ?
md5   Keyed message digest
text  Clear text authentication</simpara>
<simpara>Router(config-if)#ip rip authentication mode md5</simpara>
</section>
</chapter>
<chapter id="_ospf">
<title>OSPF</title>
<section id="_concepts_14">
<title>Concepts</title>
<section id="_introduction_2">
<title>introduction</title>
<itemizedlist>
<listitem>
<simpara>
RFC 2328
</simpara>
</listitem>
<listitem>
<simpara>
link state protocol :
</simpara>
</listitem>
<listitem>
<simpara>
Dijkstra short path first algorithm
</simpara>
</listitem>
<listitem>
<simpara>
classless protocol
</simpara>
</listitem>
<listitem>
<simpara>
IP protocol 89
</simpara>
</listitem>
<listitem>
<simpara>
multicasts to 224.0.0.5 and 224.0.0.6
</simpara>
</listitem>
</itemizedlist>
<simpara>equal-cost multipath
hierarchical design to reduce traffic
authentication updates</simpara>
</section>
<section id="_neighbors">
<title>Neighbors</title>
<simpara>To form adjacency neighbors must agree on &#8230;</simpara>
<itemizedlist>
<listitem>
<simpara>
unique router ID
</simpara>
</listitem>
<listitem>
<simpara>
same nj
</simpara>
</listitem>
<listitem>
<simpara>
area-id :
</simpara>
</listitem>
<listitem>
<simpara>
authentication
</simpara>
</listitem>
<listitem>
<simpara>
hello and dead intervals
</simpara>
</listitem>
<listitem>
<simpara>
stub area flag
</simpara>
</listitem>
<listitem>
<simpara>
MTU ??
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_ospf_cost">
<title>Ospf cost</title>
<itemizedlist>
<listitem>
<simpara>
cost = 10Exp8 / bandwidth in bps
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_link_state_packets">
<title>Link-State Packets</title>
<variablelist>
<varlistentry>
<term>
Type 1
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Router LSA
</simpara>
</listitem>
<listitem>
<simpara>
generated by each router for each interface in the area
</simpara>
</listitem>
<listitem>
<simpara>
flooded only within the same area
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Type 2
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Network LSA
</simpara>
</listitem>
<listitem>
<simpara>
generated by DR
</simpara>
</listitem>
<listitem>
<simpara>
describes the set of routers attached to a particular network
</simpara>
</listitem>
<listitem>
<simpara>
flooded only within the area that contains the network
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Type 3
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Summary inter-area LSA
</simpara>
</listitem>
<listitem>
<simpara>
Generated by ABR
</simpara>
</listitem>
<listitem>
<simpara>
describes inter-area routes to network
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Type 4
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Summary inter-area LSA
</simpara>
</listitem>
<listitem>
<simpara>
Generated by ABR
</simpara>
</listitem>
<listitem>
<simpara>
describes routes to ASBR
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Type 5
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
AS external LSA
</simpara>
</listitem>
<listitem>
<simpara>
originated by ASBR
</simpara>
</listitem>
<listitem>
<simpara>
describes routes to destinations external to the AS
</simpara>
</listitem>
<listitem>
<simpara>
flooded all over except stub areas
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_backbone_and_area_0">
<title>backbone and area 0</title>
</section>
<section id="_virtual_links">
<title>Virtual links</title>
<itemizedlist>
<listitem>
<simpara>
purposes:
</simpara>
<itemizedlist>
<listitem>
<simpara>
Areas not physically connected to area 0
</simpara>
</listitem>
<listitem>
<simpara>
partitioning the backbone
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
transit area can not be stub
</simpara>
</listitem>
</itemizedlist>
<formalpara><title>Router A</title><para>
<screen>(config)# router ospf 10
(config-router)# area 2 virtual-link 2.2.2.2</screen>
</para></formalpara>
<formalpara><title>Router B</title><para>
<screen>(config)# router ospf 10
(config-router)# area 2 virtual-link 1.1.1.1</screen>
</para></formalpara>
</section>
<section id="_adjacency">
<title>Adjacency</title>
</section>
<section id="_dr_election">
<title>DR election</title>
</section>
<section id="_router_id">
<title>Router id</title>
<simpara>Determined by these rules in order of preference at boot or ospf process
restart:</simpara>
<itemizedlist>
<listitem>
<simpara>
manually configured router id
</simpara>
</listitem>
<listitem>
<simpara>
highest IP address of an up/up loopback
</simpara>
</listitem>
<listitem>
<simpara>
highest IP address of an up/up non-loopack
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_network_types">
<title>network types</title>
<variablelist>
<varlistentry>
<term>
point-to-point
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
only 2 routers
</simpara>
</listitem>
<listitem>
<simpara>
automatic neighbor relationships
</simpara>
</listitem>
<listitem>
<simpara>
no DR/BDR election
</simpara>
</listitem>
<listitem>
<simpara>
default for HDLC and PPP
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
broadcast
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
automatic neighbor discovery
</simpara>
</listitem>
<listitem>
<simpara>
DR/BDR election
</simpara>
</listitem>
<listitem>
<simpara>
default for ethernet, TR, FDDI
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
non-broadcast
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
no broadcast/multicast
</simpara>
</listitem>
<listitem>
<simpara>
manual configuration of neighbor
</simpara>
</listitem>
<listitem>
<simpara>
DR/BDR election
</simpara>
</listitem>
<listitem>
<simpara>
default on Frame Relay, X.25 and SMDS
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
point-to-multipoint
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
multi-access, broadcast
</simpara>
</listitem>
<listitem>
<simpara>
automatic discovery of neighbor (MA)
</simpara>
</listitem>
<listitem>
<simpara>
DR/BDR election
</simpara>
</listitem>
<listitem>
<simpara>
one IP subnet
</simpara>
</listitem>
<listitem>
<simpara>
maintain connectivity during a VC failure ???
</simpara>
</listitem>
<listitem>
<simpara>
generates host routes (with mask /32 ) for each neighbor
</simpara>
</listitem>
<listitem>
<simpara>
default for ???
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
point-to-multipoint non-broadcast
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
manual configuration of neighbor
</simpara>
</listitem>
<listitem>
<simpara>
no DR/BDR election
</simpara>
</listitem>
<listitem>
<simpara>
network proprietary to Cisco
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<tip><simpara>if Multi-Access network type then no DR/BDR election
if non-broadcast, then manual configuration of neighbors</simpara></tip>
<simpara><ulink url="http://www.cisco.com/c/en/us/support/docs/ip/open-shortest-path-first-ospf/7039-1.html#t27">OSPF design guide: selecting interface network types</ulink></simpara>
</section>
<section id="_graceful_restart">
<title>Graceful restart</title>
<itemizedlist>
<listitem>
<simpara>
enables a router to continue to forward packets during a restart of the
  routing process
</simpara>
</listitem>
<listitem>
<simpara>
must be configured on all neighbor routers
</simpara>
</listitem>
<listitem>
<simpara>
can also work with EIGRP, BGP, IS-IS
</simpara>
</listitem>
<listitem>
<simpara>
default since IOS 12.4(6)T
</simpara>
</listitem>
<listitem>
<simpara>
2 versions: RFC 3623 and Cisco NSF
</simpara>
</listitem>
</itemizedlist>
<simpara><ulink url="http://www.cisco.com/en/US/docs/ios-xml/ios/iproute_ospf/command/ospf-a1.html#wp258289">Cisco
NSF</ulink></simpara>
</section>
<section id="_spf_throttling">
<title>SPF throttling</title>
</section>
<section id="_capability_vrf_lite">
<title>capability vrf-lite</title>
<simpara>Read OSG, chapter 19, VRF lite, pp. 872-876</simpara>
<simpara><ulink url="http://www.cisco.com/en/US/docs/ios-xml/ios/iproute_ospf/command/ospf-a1.html#wp2582896905">http://www.cisco.com/en/US/docs/ios-xml/ios/iproute_ospf/command/ospf-a1.html#wp2582896905</ulink></simpara>
</section>
<section id="_lsa_type">
<title>LSA type</title>
<variablelist>
<varlistentry>
<term>
Type 4 LSA - Summary
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
Injected into an area by an ABR
</simpara>
</listitem>
<listitem>
<simpara>
tells other other routers in the area how to get to the advertising router
  of an external route
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_summarization">
<title>summarization</title>
<simpara>Why the null 0 interface is added ?</simpara>
<itemizedlist>
<listitem>
<simpara>
do prevent routing loops
</simpara>
<itemizedlist>
<listitem>
<simpara>
packets destined for the routes that have been summarized will a longer  match
</simpara>
</listitem>
<listitem>
<simpara>
packets destined to summary routes will be dropped
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>See good explanation</simpara>
</section>
</section>
<section id="_configuration_tasks_10">
<title>Configuration tasks</title>
<section id="_enable_ospf_on_the_router">
<title>Enable OSPF on the router</title>
<screen>(config)# router ospf process-id
(config-router)# network a.b.c.d [w.i.l.d] area id</screen>
</section>
<section id="_ospf_authentication">
<title>OSPF authentication</title>
<itemizedlist>
<listitem>
<simpara>
Null , default: type 0
</simpara>
</listitem>
<listitem>
<simpara>
Plain-text, simple password authentication
</simpara>
</listitem>
</itemizedlist>
<screen>(config-router)# area id authentication
(config-if)# ip ospg authentication-key string</screen>
<itemizedlist>
<listitem>
<simpara>
Message digest authentication
</simpara>
</listitem>
</itemizedlist>
<screen>(config-router)# area id authentication message-digest
(config-if)# ip ospg message-digest-key key-id md5 string</screen>
<itemizedlist>
<listitem>
<simpara>
Message digest
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configure_ospf_interface_parameters">
<title>Configure OSPF interface parameters</title>
<section id="_configure_spf_timers">
<title>configure spf timers</title>
<screen>(config-router)# timers spf seconds seconds</screen>
<itemizedlist>
<listitem>
<simpara>
spf-delay: between topology change notifications and recalculation of the
  shortest path
</simpara>
</listitem>
<listitem>
<simpara>
spf-holdtime : between spf calculations
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_configure_spf_throttling">
<title>configure spf throttling</title>
<screen>spf ???</screen>
</section>
</section>
<section id="_readings">
<title>readings</title>
<simpara><ulink url="http://www.cisco.com/en/US/tech/tk365/technologies_tech_note09186a0080094aaa.shtml">What
are ospf areas and virtual links</ulink></simpara>
<simpara><ulink url="http://www.cisco.com/en/US/tech/tk365/technologies_white_paper09186a0080094e9e.shtml#appa1">ospf
design guide: link-state advertisements</ulink></simpara>
</section>
</chapter>
<chapter id="_eigrp">
<title>EIGRP</title>
<section id="_concepts_15">
<title>Concepts</title>
<section id="_eigrp_features">
<title>EIGRP Features</title>
<itemizedlist>
<listitem>
<simpara>
classless protocol (VLSM, summarization)
</simpara>
</listitem>
<listitem>
<simpara>
multiple routed protocol support (ipv4, ipx, appletalk, )
</simpara>
</listitem>
<listitem>
<simpara>
uses its own transport protocol
</simpara>
<itemizedlist>
<listitem>
<simpara>
IP protocol 88: RTP
</simpara>
</listitem>
<listitem>
<simpara>
uses multicast to 224.0.0.10 and unicast
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Forms active neighbor adjancies
</simpara>
</listitem>
<listitem>
<simpara>
DUAL for loop-free topology and fast convergence
</simpara>
</listitem>
<listitem>
<simpara>
granular metric
</simpara>
</listitem>
<listitem>
<simpara>
unequal cost load balancing
</simpara>
</listitem>
<listitem>
<simpara>
summarization
</simpara>
</listitem>
<listitem>
<simpara>
Supports MD5 based authentication
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_neighbors_2">
<title>Neighbors</title>
<itemizedlist>
<listitem>
<simpara>
discovered with Hello packets
</simpara>
</listitem>
<listitem>
<simpara>
must agree on
</simpara>
</listitem>
<listitem>
<simpara>
primary IPv4 subnet
</simpara>
</listitem>
<listitem>
<simpara>
Autonomous System Number
</simpara>
</listitem>
<listitem>
<simpara>
authentication
</simpara>
</listitem>
<listitem>
<simpara>
K values
</simpara>
</listitem>
<listitem>
<simpara>
do not need to agree on timers
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eigrp_messages">
<title>EIGRP messages</title>
<variablelist>
<varlistentry>
<term>
Hello
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
multicast to 224.0.0.10
</simpara>
</listitem>
<listitem>
<simpara>
do not require acknowlegment
</simpara>
</listitem>
<listitem>
<simpara>
can be used as Ack if sent without data
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Ack
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
unicast
</simpara>
</listitem>
<listitem>
<simpara>
contains a nonzero acknowledgement number
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Update
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
multicast or unicast
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Query
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
multicast unless in response to a received query
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Reply
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
unicast
</simpara>
</listitem>
<listitem>
<simpara>
indicates that it does not need to go into Active state
because it has a FS
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Request
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
unicast or multicast
</simpara>
</listitem>
<listitem>
<simpara>
get specific info from neighbors
</simpara>
</listitem>
<listitem>
<simpara>
used in route server applications
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<section id="_eigrp_topology">
<title>EIGRP topology</title>
</section>
<section id="_sending_eigrp_updates">
<title>Sending EIGRP updates</title>
<simpara>• Once neighbors are found, EIGRP UPDATE messages used to exchange
routes
– Sent as multicast to 224.0.0.10 or as unicast
• Update messages describe attributes of a route</simpara>
<literallayout class="monospaced">Prefix + Length
Next-Hop
Bandwidth
Delay
Load
Reliability
MTU
Hop Count
External Attributes</literallayout>
</section>
<section id="_calculate_the_eigrp_topology">
<title>Calculate the EIGrp topology</title>
</section>
</section>
<section id="_eigrp_loop_prevention_techniques">
<title>EIGRP Loop prevention techniques</title>
<section id="_split_horizontal">
<title>Split horizontal</title>
</section>
<section id="_dual_feasibility_condition">
<title>DUAL feasibility condition</title>
</section>
</section>
<section id="_eigrp_reconvergence">
<title>EIGRP reconvergence</title>
<itemizedlist>
<listitem>
<simpara>
if the successor becomes unreachable,
</simpara>
<itemizedlist>
<listitem>
<simpara>
if there is a feasible successor
</simpara>
<itemizedlist>
<listitem>
<simpara>
use the FS without local computation
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
else
</simpara>
<itemizedlist>
<listitem>
<simpara>
query the neighbors and put the route in active
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Transport: IP protocol 88
</simpara>
</listitem>
<listitem>
<simpara>
Administrative distance : 90 internal routes, 5 summary routes , 170 external routes
</simpara>
</listitem>
<listitem>
<simpara>
Hello intterval
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_metric">
<title>Metric</title>
<simpara>metric = 256 * [K1 x bandwidth + (k2 x bandwidth)/ (256 -load) + k3 x delay] x [k5 /( reliability + k4)]</simpara>
<itemizedlist>
<listitem>
<simpara>
bandwith: 10<superscript>7</superscript> / minimum bandwidth in Kbps
</simpara>
</listitem>
<listitem>
<simpara>
delay: in tens-of-microseconds
</simpara>
</listitem>
<listitem>
<simpara>
reliability: likelihood of successful packet transmission with 0 means 0% and 255 means 100%
</simpara>
</listitem>
<listitem>
<simpara>
load : effective load of the route with 255 means 100% loading
</simpara>
</listitem>
<listitem>
<simpara>
mtu : minimum Maximum transmission unit
</simpara>
</listitem>
<listitem>
<simpara>
default values: k1,k2,k3,k4,k5 = 1,0,1,0,0
</simpara>
</listitem>
<listitem>
<simpara>
the values of K must match for the neighbors to become adjacents
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eigrp_autonomous_system_configuration">
<title>EIGRP Autonomous System Configuration</title>
<itemizedlist>
<listitem>
<simpara>
created with the command  <emphasis role="strong">router eigrp</emphasis> <emphasis>autonomous-system-number</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
EIGRP VPNS can be configured only under IPv4 address family. A VRF instance and route distinguisher must be defined before the address family session can be created.
</simpara>
</listitem>
<listitem>
<simpara>
recommendation: configure the asn when the address family is configured by <emphasis role="strong">router eigrp</emphasis> <emphasis>asn</emphasis> <emphasis role="strong">address-family</emphasis> or seperately using the <emphasis role="strong">autonomous-system</emphasis> command.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eigrp_named_configuration">
<title>EIGRP Named Configuration</title>
<itemizedlist>
<listitem>
<simpara>
created with the command <emphasis role="strong">router eigrp</emphasis> <emphasis>virtual-instance-name</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
can be configured in IPv4 and IPv6 named configuration
</simpara>
</listitem>
<listitem>
<simpara>
VRF instance and a RD are optional
</simpara>
</listitem>
<listitem>
<simpara>
EIGRP IPv6 VRF-lite feature is available only in EIGRP named configuration
</simpara>
</listitem>
<listitem>
<simpara>
EIGRP VPNs can be configured. A VRF and RD must be defind before the address-family session can be created.
</simpara>
</listitem>
<listitem>
<simpara>
a single EIGRP routing process can support multiple VRFs.  However, a single VRF can be supported by each VPN . Redistribution between VRFs is not supported.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eigrp_neighbor_relationship_maintenance">
<title>EIGRP Neighbor Relationship Maintenance</title>
<itemizedlist>
<listitem>
<simpara>
Hellos
</simpara>
</listitem>
<listitem>
<simpara>
adjancency
</simpara>
</listitem>
<listitem>
<simpara>
authentication
</simpara>
</listitem>
<listitem>
<simpara>
MD5
</simpara>
</listitem>
<listitem>
<simpara>
HMAC-SHA-256 (Hash-based Message Authentication Code- Secure Hash Algorithm) :
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_dual_finite_state_machine">
<title>DUAL Finite State Machine</title>
<itemizedlist>
<listitem>
<simpara>
a successor is a neighboring router that has a least-cost path to a
  destination that is guarentedd not to be part of a routinf
</simpara>
</listitem>
<listitem>
<simpara>
Feasibility condition: RD &lt; FD
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_protocol_dependent_modules">
<title>Protocol-Dependent Modules</title>
</section>
<section id="_eigrp_metric_weights">
<title>EIGRP Metric Weights</title>
</section>
<section id="_goodbye_message">
<title>Goodbye Message</title>
<itemizedlist>
<listitem>
<simpara>
broadcast when an EIGRP routing process is shut down
</simpara>
</listitem>
<listitem>
<simpara>
Speeds convergence as peers don&#8217;t have to wait the hold timer expiration
</simpara>
</listitem>
<listitem>
<simpara>
Normal message displayed by routers that support Good Bye message
</simpara>
</listitem>
</itemizedlist>
<screen>*Apr 26 13:48:42.523: %DUAL-5-NBRCHANGE: IP-EIGRP(0) 1: Neighbor 10.1.1.1
(Ethernet0/0) is down: Interface Goodbye received</screen>
<itemizedlist>
<listitem>
<simpara>
Misleading message displayed by router which doesnt support the Goodbye message
</simpara>
</listitem>
</itemizedlist>
<screen>*Apr 26 13:48:41.811: %DUAL-5-NBRCHANGE: IP-EIGRP(0) 1: Neighbor
(Ethernet0/0) is down: K-value mismatch</screen>
<itemizedlist>
<listitem>
<simpara>
The receipt of a goodbye message by a non supporting peer does not disrupt normal network operations.
</simpara>
</listitem>
<listitem>
<simpara>
The nonsupporting peer will terminate the session when the hold timer expires
</simpara>
</listitem>
<listitem>
<simpara>
The sending and receiving routers will converge normally after the sender reloads
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_routing_metric_offset_lists">
<title>Routing Metric Offset Lists</title>
</section>
<section id="_eigrp_cost_metrics">
<title>EIGRP Cost Metrics</title>
</section>
<section id="_route_summarization">
<title>Route Summarization</title>
</section>
<section id="_summary_aggregate_addresses">
<title>Summary Aggregate Addresses</title>
</section>
<section id="_floating_summary_routes">
<title>Floating Summary Routes</title>
</section>
<section id="_eigrp_route_authentication">
<title>EIGRP Route Authentication</title>
</section>
<section id="_hello_packets_and_the_hold_time_intervals">
<title>Hello Packets and the Hold-Time Intervals</title>
</section>
<section id="_split_horizon">
<title>Split Horizon</title>
</section>
<section id="_link_bandwidth_percentage">
<title>Link Bandwidth Percentage</title>
<itemizedlist>
<listitem>
<simpara>
by default, EIGRP packets consume  max 50% of the link bandwidth as configured by the <emphasis role="strong">bandwith</emphasis> command
</simpara>
</listitem>
<listitem>
<simpara>
bandwidth configured by <emphasis role="strong">bandwidth</emphasis> in AS configuration and <emphasis role="strong">bandwith-percent</emphasis> for named configuration
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eigrp_stub_routing">
<title>EIGRP Stub Routing</title>
</section>
<section id="_eigrp_stub_routing_leak_map_support">
<title>EIGRP Stub Routing Leak Map Support</title>
</section>
</section>
<section id="_configuration_tasks_11">
<title>Configuration tasks</title>
<section id="_enable_eigrp_autonomous_system_configuration">
<title>Enable eigrp autonomous system configuration</title>
<simpara>Create an EIGRP routing process .</simpara>
<screen>(config)# router eigrp asn
(config-router)# network a.b.c.d [e.f.g.h]</screen>
<itemizedlist>
<listitem>
<simpara>
A maximum of 30 EIGRP can be configured
</simpara>
</listitem>
<listitem>
<simpara>
EIGRP sends updates only interfaces in the specified networks
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_enable_eigrp_named_configuration">
<title>Enable EIGRP named configuration</title>
<screen>(config)# router eigrp virtual-instance-name</screen>
<simpara>Define the EIGRP IPv4 or IPv6 routing instance</simpara>
<screen>(config-router)# address-family ipv4 [multicast] [umicast] [vrf vrf-name] autonomous-system asn
(config-router-af)# network a.b.c.d</screen>
<screen>(config-router)# address-family ipv6 [umicast] [vrf vrf-name] autonomous-system asn</screen>
</section>
</section>
</chapter>
<chapter id="_bgp">
<title>BGP</title>
<section id="_concepts_16">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
exterior gateway protocol
</simpara>
</listitem>
<listitem>
<simpara>
create loop-free inter-domain routing between AS.
</simpara>
</listitem>
<listitem>
<simpara>
path vector
</simpara>
</listitem>
<listitem>
<simpara>
TCP 179
</simpara>
</listitem>
<listitem>
<simpara>
AD: external 20 , internal and local 200
</simpara>
</listitem>
<listitem>
<simpara>
RFC 1771
</simpara>
</listitem>
</itemizedlist>
<section id="_when_to_use_bgp">
<title>When to use BGP</title>
<itemizedlist>
<listitem>
<simpara>
multiple connections to Internet via different providers
</simpara>
</listitem>
<listitem>
<simpara>
multiple connections to external ASs via the same provider but different routing policy
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_autonomous_systems">
<title>Autonomous systems</title>
<itemizedlist>
<listitem>
<simpara>
AS: set of routers under a single technical administration
</simpara>
</listitem>
<listitem>
<simpara>
16-bit number
</simpara>
</listitem>
<listitem>
<simpara>
1 - 65535
</simpara>
</listitem>
<listitem>
<simpara>
private use: 64512 - 65535
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_bgp_peers">
<title>BGP peers</title>
<itemizedlist>
<listitem>
<simpara>
formed over a TCP connection
</simpara>
</listitem>
<listitem>
<simpara>
exchanges network reachability information
</simpara>
</listitem>
<listitem>
<simpara>
initially exchange full BGP routing table then incremental updates
</simpara>
</listitem>
<listitem>
<simpara>
keep version number
</simpara>
<variablelist>
<varlistentry>
<term>
iBPG peers 
</term>
<listitem>
</listitem>
</varlistentry>
</variablelist>
</listitem>
<listitem>
<simpara>
same AS
</simpara>
</listitem>
<listitem>
<simpara>
must be fully meshed within AS
</simpara>
<variablelist>
<varlistentry>
<term>
eBGP peers 
</term>
<listitem>
</listitem>
</varlistentry>
</variablelist>
</listitem>
<listitem>
<simpara>
different AS
</simpara>
</listitem>
<listitem>
<simpara>
by default, one hop away but you can change that with <emphasis role="strong">ebgp-multihop</emphasis>
</simpara>
</listitem>
</itemizedlist>
<section id="_bgp_peers_messages">
<title>BGP peers messages</title>
<variablelist>
<varlistentry>
<term>
OPEN
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
initiates the session
</simpara>
</listitem>
<listitem>
<simpara>
contains BGP version , local AS number, BGP router Id
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
KEEPALIVE
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
every 60 seconds
</simpara>
</listitem>
<listitem>
<simpara>
hold-time: 180 seconds
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
UPDATE
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
exchange routes between peers
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
NOTIFICATION
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
go out in response to error, fatal condition
</simpara>
</listitem>
<listitem>
<simpara>
torn down or reset the BGP peer session
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_bgp_fsm_states">
<title>BGP FSM States</title>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">Idle</emphasis> – initial BGP state
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Connect</emphasis> - waits for a TCP connection with the remote peer. If
successful, an OPEN message is sent. If unsuccessful, the session is
placed in an Active state
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Active</emphasis> – BGP attempts to initiate a TCP connection with the remote
peer. If successful, an OPEN message is sent. If unsuccessful, BGP
will wait for a ConnectRetry timer to expire, and place the session
back in a Connect State.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">OpenSent</emphasis> – BGP has both established the TCP connection and sent
an OPEN Message, and is awaiting a reply OPEN Message. Once it
receives a reply OPEN Message, the BGP peer will send a
KEEPALIVE message.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">OpenConfirm</emphasis> – BGP listens for a reply KEEPALIVE message.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Established</emphasis> – the BGP peer session is fully established. UPDATE
messages containing routing information will now be sent.
</simpara>
</listitem>
<listitem>
<simpara>
if peer stuck in <emphasis role="strong">Active</emphasis> state, potential problems can include:
</simpara>
<itemizedlist>
<listitem>
<simpara>
no IP connectivity
</simpara>
</listitem>
<listitem>
<simpara>
incorrect <emphasis role="strong">neighbor</emphasis> statement
</simpara>
</listitem>
<listitem>
<simpara>
access-list filtering TCP port 179
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_best_path_selection_algorithm">
<title>Best path selection algorithm</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>
highest weight
</simpara>
</listitem>
<listitem>
<simpara>
highest local pref
</simpara>
</listitem>
<listitem>
<simpara>
locally originated paths over externally originated paths
</simpara>
</listitem>
<listitem>
<simpara>
shortest AS path
</simpara>
</listitem>
<listitem>
<simpara>
lowest origin type ( internal over external over incomplete)
</simpara>
</listitem>
<listitem>
<simpara>
lowest MED
</simpara>
</listitem>
<listitem>
<simpara>
eBGP paths over iBGP paths
</simpara>
</listitem>
<listitem>
<simpara>
lowest IGP cost
</simpara>
</listitem>
<listitem>
<simpara>
oldest path
</simpara>
</listitem>
<listitem>
<simpara>
lowest BGP router id
</simpara>
</listitem>
</orderedlist>
<simpara>source: <ulink url="http://www.cisco.com/en/US/tech/tk365/technologies_tech_note09186a0080094431.shtml">http://www.cisco.com/en/US/tech/tk365/technologies_tech_note09186a0080094431.shtml</ulink></simpara>
</section>
<section id="_community_attributes">
<title>community attributes</title>
<itemizedlist>
<listitem>
<simpara>
no-advertise: prevents advertisements to any BGP peer
</simpara>
</listitem>
<listitem>
<simpara>
no-export: prevents advertisements to any eBGP peer
</simpara>
</listitem>
<listitem>
<simpara>
no-advertise: prevents advertisements outside the AS, or in confederation scenarios, outside the sub-AS
</simpara>
</listitem>
<listitem>
<simpara>
internet:  advertises routes to any route
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration_tasks_12">
<title>Configuration tasks</title>
<section id="_congigure_bgp_neighbors">
<title>Congigure BGP neighbors</title>
</section>
</section>
</chapter>
<chapter id="_redistribution">
<title>Redistribution</title>
<section id="_administrative_distance">
<title>Administrative distance</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Route source    </entry>
<entry align="left" valign="top"> Distance</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Connected route</simpara></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Static route</simpara></entry>
<entry align="left" valign="top"><simpara>1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>eBGP</simpara></entry>
<entry align="left" valign="top"><simpara>20</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>internal EIGRP</simpara></entry>
<entry align="left" valign="top"><simpara>90</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IGRP</simpara></entry>
<entry align="left" valign="top"><simpara>100</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>OSPF</simpara></entry>
<entry align="left" valign="top"><simpara>110</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IS-IS</simpara></entry>
<entry align="left" valign="top"><simpara>115</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>RIP</simpara></entry>
<entry align="left" valign="top"><simpara>120</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>External EIGRP</simpara></entry>
<entry align="left" valign="top"><simpara>170</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>iBGP</simpara></entry>
<entry align="left" valign="top"><simpara>200</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Unknown</simpara></entry>
<entry align="left" valign="top"><simpara>255</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</chapter>
</part>
<part id="_implement_ipv6">
<title>Implement IPv6</title>
<chapter id="_ipv6">
<title>IPv6</title>
<section id="_addressing">
<title>Addressing</title>
<itemizedlist>
<listitem>
<simpara>
128 bits
</simpara>
</listitem>
<listitem>
<simpara>
represented in hexadecimal and uses colon-separated fields of 16 bits.
</simpara>
</listitem>
</itemizedlist>
<section id="_ipv4_vs_ipv6">
<title>IPv4 vs IPv6</title>
<itemizedlist>
<listitem>
<simpara>
you can configure multiple ipv6 addresses on a logical or physical interface with equal precedence on IOS (only one primary
  ipv4 with optional secondary address)
</simpara>
</listitem>
<listitem>
<simpara>
automatic configuration of globally unique address (without the need of DHCP)
</simpara>
</listitem>
<listitem>
<simpara>
built-in neighbor discovery of neighbors, routers and gateways
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_address_abbreviation_rules">
<title>Address abbreviation rules</title>
<itemizedlist>
<listitem>
<simpara>
Whenever one or more successive 16-bit groups in an IPv6 address consist of all 0s, that
portion of the address can be omitted and represented by two colons (::). The two-colon
abbreviation can be used only once in an address, to eliminate ambiguity.
</simpara>
</listitem>
<listitem>
<simpara>
When a 16-bit group in an IPv6 address begins with one or more 0s, the leading 0s can be
omitted. This option applies regardless of whether the double-colon abbreviation method is
used anywhere in the address.
</simpara>
</listitem>
</itemizedlist>
<screen>2001:0001:0000:0000:00A1:0CC0:01AB:397A

2001:1:0:0:A1:CC0:1AB:397A
2001:0001::00A1:0CC0:01AB:397A
2001:1::A1:CC0:1AB:397A</screen>
</section>
<section id="_address_types">
<title>Address types</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="3">
<colspec colname="col_1" colwidth="28*"/>
<colspec colname="col_2" colwidth="14*"/>
<colspec colname="col_3" colwidth="57*"/>
<thead>
<row>
<entry align="left" valign="top"> Address Type </entry>
<entry align="left" valign="top"> Range </entry>
<entry align="left" valign="top"> Application</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Aggregatable global unicast</simpara></entry>
<entry align="left" valign="top"><simpara>2000::/3</simpara></entry>
<entry align="left" valign="top"><simpara>Host-to-host communication; same as IPv4 unicast.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Multicast</simpara></entry>
<entry align="left" valign="top"><simpara>FF00::/8</simpara></entry>
<entry align="left" valign="top"><simpara>One-to-many and many-to-many
communication; same as IPv4 multicast.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Anycast</simpara></entry>
<entry align="left" valign="top"><simpara>Same as Unicast</simpara></entry>
<entry align="left" valign="top"><simpara>Application-based, including load balancing,
optimizing traffic for a particular service, and
redundancy. Relies on routing metrics to
determine the best destination for a particular
host.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Link-local  unicast</simpara></entry>
<entry align="left" valign="top"><simpara>FE80::/10</simpara></entry>
<entry align="left" valign="top"><simpara>Connected-link communications.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Solicited-node multicast</simpara></entry>
<entry align="left" valign="top"><simpara>FF02::1:FF00:0/104</simpara></entry>
<entry align="left" valign="top"><simpara>Neighbor solicitation.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<section id="_unicast">
<title>Unicast</title>
<itemizedlist>
<listitem>
<simpara>
Begin with binary 001 (hexadeximal= 2000::/3)
</simpara>
</listitem>
</itemizedlist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ipv6-unicast-address-format.png" contentdepth="150"/>
  </imageobject>
  <textobject><phrase>images/ipv6-unicast-address-format.png</phrase></textobject>
</mediaobject>
</informalfigure>
<itemizedlist>
<listitem>
<simpara>
starts with FE80::/10
</simpara>
</listitem>
<listitem>
<simpara>
follows by 54 bits set to 0
</simpara>
</listitem>
<listitem>
<simpara>
Interface ID
</simpara>
</listitem>
<listitem>
<simpara>
routers do not forward link-local traffic to other segments.
</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<listitem>
<simpara>
one option is to have first 96 bits set to 0
</simpara>
</listitem>
</itemizedlist>
<screen>0:0:0:0:0:10:10:100:16
::10:10:100:16
::A:A:64:10</screen>
<simpara>First, enable ipv6 on the router</simpara>
<screen>(config)# ipv6 unicast-routing</screen>
<simpara>Configure a global unicast address</simpara>
<screen>(config-if)# ipv6 address 2014:10:12::19:66/64</screen>
<simpara>Router automatically configure a link local address on all IPv6 enabled interfaces.
However, you can explicitly configure one</simpara>
<screen>(config-if)# ipv6 address fe80::1 link-local</screen>
</section>
<section id="_multicast">
<title>Multicast</title>
<itemizedlist>
<listitem>
<simpara>
begin with FF as the first octect, or FF00::/8
</simpara>
</listitem>
<listitem>
<simpara>
the second octet specifies lifetime (permanent or temporary) and the scope (node, link, site, organization, global)
</simpara>
</listitem>
</itemizedlist>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ipv6-multicast-address-format.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/ipv6-multicast-address-format.png</phrase></textobject>
</mediaobject>
</informalfigure>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>IPv6 Multicast Well-Known Addresses</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top">Function</entry>
<entry align="left" valign="top">Multicast Group</entry>
<entry align="left" valign="top">IPv4 Equivalent</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>All hosts</simpara></entry>
<entry align="left" valign="top"><simpara>FF02::1</simpara></entry>
<entry align="left" valign="top"><simpara>Subnet broadcast address</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>All Routers</simpara></entry>
<entry align="left" valign="top"><simpara>FF02::2</simpara></entry>
<entry align="left" valign="top"><simpara>224.0.0.2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>OSPFv3 routers</simpara></entry>
<entry align="left" valign="top"><simpara>FF02::5</simpara></entry>
<entry align="left" valign="top"><simpara>224.0.0.5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>OSPFv3 designated routers</simpara></entry>
<entry align="left" valign="top"><simpara>FF02::6</simpara></entry>
<entry align="left" valign="top"><simpara>224.0.0.6</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>EIGRP routers</simpara></entry>
<entry align="left" valign="top"><simpara>FF02::A</simpara></entry>
<entry align="left" valign="top"><simpara>224.0.0.10</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>PIM routers</simpara></entry>
<entry align="left" valign="top"><simpara>FF02::D</simpara></entry>
<entry align="left" valign="top"><simpara>224.0.0.13</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>Each router must join the <emphasis role="strong">solicited-node group</emphasis> (FF02::1:FF00:0000/104)  for all unicast and anycast traffic.
The last 24 bits come from the corresponding last 24 bits of the unicast or anycast address.
The <emphasis role="strong">neighbor discovery</emphasis> process uses solicited-node addresses.</simpara>
</section>
<section id="_anycast">
<title>Anycast</title>
<simpara>Anycast addresses can be assigned to any number of hosts that provide the same service; when other hosts access this
service, the specific server they hit is determined by the unicast routing metrics on the path to that
particular group of servers. This provides geographic differentiation, enhanced availability, and
load balancing for the service.</simpara>
<screen>(config-if)# ipv6 address 3001:fffe::104/64 anycast</screen>
<simpara>All IPv6 routers additionally must support the subnet router anycast address. This anycast address
is a prefix followed by all 0s in the interface ID portion of the address. Hosts can use a subnet
router anycast address to reach a particular router on the link identified by the prefix given in the
subnet router anycast address.</simpara>
</section>
<section id="_the_unspecified_address">
<title>The unspecified address</title>
<itemizedlist>
<listitem>
<simpara>
represented by <emphasis role="strong">::</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
used as source address by an interface that has not yet learned its unicast addresses.
</simpara>
</listitem>
<listitem>
<simpara>
cannot be assigned to an interface
</simpara>
</listitem>
<listitem>
<simpara>
cannot be used as a destination address
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_how_to_embed_an_rp_address_within_a_multicast_group_address">
<title>how to embed an RP address within a multicast group address</title>
<simpara>RFC 2373</simpara>
<simpara>Given address 2001:DB*:0717::A,
Follow the structure FF<emphasis>7</emphasis><emphasis role="strong">x</emphasis>:0<emphasis role="strong">y</emphasis>30:2001:DB8:0717::<emphasis role="strong">group</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>
FF for a multicast address
</simpara>
</listitem>
<listitem>
<simpara>
7 indicates that the RP address is embedded in the multicast address
</simpara>
</listitem>
<listitem>
<simpara>
x for the multicast scope
</simpara>
<itemizedlist>
<listitem>
<simpara>
1 node-local
</simpara>
</listitem>
<listitem>
<simpara>
2 link-local
</simpara>
</listitem>
<listitem>
<simpara>
5 site-local
</simpara>
</listitem>
<listitem>
<simpara>
8 organization-local
</simpara>
</listitem>
<listitem>
<simpara>
E global
</simpara>
</listitem>
<listitem>
<simpara>
F reserved
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
0 in the first character of the second hextet
</simpara>
</listitem>
<listitem>
<simpara>
y for the RP interface ID from 1 to F
</simpara>
</listitem>
<listitem>
<simpara>
30 for the mask for the network (0x30 = decimal 48)
</simpara>
</listitem>
<listitem>
<simpara>
remaining hextets for the network prefix
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_ipv6_address_autoconfiguration">
<title>IPv6 address autoconfiguration</title>
<variablelist>
<varlistentry>
<term>
Stateful autoconfiguration
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
assigns a host its entire 128-bit address using DHCP
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
Stateless autoconfiguration
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
assignes a host a 64-bit prefix, and the host derive the last bit using EUI-64 process.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<section id="_eui_64_address">
<title>EUI-64 address</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>
split 48-bit MAC address in two parts
</simpara>
</listitem>
<listitem>
<simpara>
place FFFE in the middle
</simpara>
</listitem>
<listitem>
<simpara>
set to 1 the universal/local bit (7th bit in the interface id )
</simpara>
</listitem>
</orderedlist>
<simpara>Given the IPv6 prefix 2001:128:1f:633 and MAC address 00:07:85:80:71:B8,
the resulting EUI-address is 2001:128:1f:633:<emphasis role="strong">2</emphasis>07:85<emphasis role="strong">FF:FE</emphasis>80:71B8/64</simpara>
<screen>(config-if)# ipv6 address 2001:128:1f:633::/64 eui-64</screen>
</section>
</section>
</section>
<section id="_basic_ipv6_functionality_protocols">
<title>Basic  IPv6 functionality protocols</title>
<section id="_neighbor_discovery">
<title>Neighbor discovery</title>
<itemizedlist>
<listitem>
<simpara>
RFC 2461
</simpara>
</listitem>
<listitem>
<simpara>
discover and track other IPv6 hosts on connected interfaces
</simpara>
</listitem>
<listitem>
<simpara>
uses ICMPv6 messages and Solicited-node multicast addresses
</simpara>
</listitem>
<listitem>
<simpara>
major roles
</simpara>
<itemizedlist>
<listitem>
<simpara>
Stateless address autoconfiguration (detailed in RFC 2462)
</simpara>
</listitem>
<listitem>
<simpara>
Duplicate address detection (DAD)
</simpara>
</listitem>
<listitem>
<simpara>
Router discovery
</simpara>
</listitem>
<listitem>
<simpara>
Prefix discovery
</simpara>
</listitem>
<listitem>
<simpara>
Parameter discovery (link MTU, hop limits)
</simpara>
</listitem>
<listitem>
<simpara>
Neighbor discovery
</simpara>
</listitem>
<listitem>
<simpara>
Neighbor address resolution (replaces ARP, both dynamic and static)
</simpara>
</listitem>
<listitem>
<simpara>
Neighbor and router reachability verification
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section id="_neighbor_advertisements">
<title>Neighbor advertisements</title>
<itemizedlist><title>ICMPv6 messages used by ND</title>
<listitem>
<simpara>
host advertises their pr
</simpara>
</listitem>
<listitem>
<simpara>
source addresses
</simpara>
</listitem>
<listitem>
<simpara>
destination addresses
</simpara>
</listitem>
<listitem>
<simpara>
icmp type, code: 134,0
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_neighbor_solicitation">
<title>Neighbor solicitation</title>
<itemizedlist>
<listitem>
<simpara>
NS messages to find the link-layer of a specific neighbor
</simpara>
</listitem>
<listitem>
<simpara>
source address: manual assigned or ::
</simpara>
</listitem>
<listitem>
<simpara>
destination address: target address or solicited-node multicast address
</simpara>
</listitem>
<listitem>
<simpara>
icmp type, code: 135,0
</simpara>
</listitem>
<listitem>
<simpara>
uses in 3 operations: duplicate address detection, neighbor reachability verification, layer 3 to layer 2 address resolution.
</simpara>
</listitem>
</itemizedlist>
<note><simpara>IPv6 does not include ARP as a protocol but rather integrates the same functionality into ICMP as part of neighbor discovery.
The response to an NS message is an NA message .</simpara></note>
<figure><title>Neighbor discovery between two hosts</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ipv6-neighbor-discovery.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/ipv6-neighbor-discovery.png</phrase></textobject>
</mediaobject>
</figure>
</section>
<section id="_router_advertisement">
<title>Router advertisement</title>
<itemizedlist>
<listitem>
<simpara>
routers advertise their presence and link prefixes, mtu, hop limits
</simpara>
</listitem>
<listitem>
<simpara>
source address: router&#8217;s link-local address
</simpara>
</listitem>
<listitem>
<simpara>
destination address: all-nodes FF02::1 for periodic broadcasts, querying host address for response
</simpara>
</listitem>
<listitem>
<simpara>
icmp type, code: 134,0
</simpara>
</listitem>
</itemizedlist>
<simpara>A Cisco IPv6 router begins sending RA messages for each of its configured interface prefixes
when the <emphasis role="strong">ipv6 unicast-routing</emphasis> command is configured. You can change the default RA interval
(200 seconds) using the command <emphasis role="strong">ipv6 nd ra-interval</emphasis>. Router advertisements on a given interface
include all of the 64-bit IPv6 prefixes configured on that interface. This allows for stateless address
autoconfiguration using EUI-64 to work properly. RAs also include the link MTU, hop limits, and
whether a router is a candidate default router.</simpara>
<simpara>IPv6 routers send periodic RA messages to inform hosts about the IPv6 prefixes used on the link
and to inform hosts that the router is available to be used as a default gateway.
By default, a Cisco router running IPv6 on an interface advertises itself as a candidate default router.</simpara>
<simpara>If you do not want a router to advertise itself as a default candidate,
use the command <emphasis role="strong">ipv6 nd ra-lifetime 0</emphasis> . By
sending RAs with a lifetime of 0, a router still informs connected hosts of its presence, but tells
connected hosts not to use it to reach hosts off the subnet.</simpara>
<simpara>If, for some reason, you wanted to hide the presence of a router entirely in terms of router
advertisements, you can disable router advertisements on that router by issuing the ipv6 nd
suppress-ra command.</simpara>
</section>
<section id="_router_solicitation">
<title>Router solicitation</title>
<itemizedlist>
<listitem>
<simpara>
Host query for the presence of routers on the link
</simpara>
</listitem>
<listitem>
<simpara>
source address: querying host interface, or :: if not assigned
</simpara>
</listitem>
<listitem>
<simpara>
destination address: FF02::2
</simpara>
</listitem>
<listitem>
<simpara>
icmp type, code : 133,0
</simpara>
</listitem>
</itemizedlist>
<simpara>At startup, IPv6 hosts can send Router Solicitation (RS) messages to the all-routers multicast
address. Hosts do this to learn the addresses of routers on a given link, as well as their various
parameters, without waiting for a periodic RA message. If a host has no configured IPv6 address,
it sends an RS using the unspecified address as the source. If it has a configured address, it sources
the RS from the configured address.</simpara>
</section>
<section id="_duplicate_address_detection">
<title>Duplicate address Detection</title>
<simpara>To verify that autoconfigured or statically address is unique,
the host sends an NS message to its own autoconfigured address&#8217;s corresponding solicited-node multicast address.
This message is sourced from the unspecified address ::.
In the target address field in the NS is the address the host seeks to verify.
If an NA from another host results, the sending host knows that the address is not unique
-</simpara>
</section>
<section id="_neighbor_unreachability_detection">
<title>Neighbor unreachability detection</title>
<simpara>2 options:</simpara>
<itemizedlist>
<listitem>
<simpara>
a host sends a probe to the desired host&#8217;s solicited-node multicast address and receives an RA or an NA in response.
</simpara>
</listitem>
<listitem>
<simpara>
a host, in communication with the desired host, receives a clue from higher-layer protocol (e.g. TCP ACK)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_icmpv6">
<title>ICMPv6</title>
<itemizedlist>
<listitem>
<simpara>
RFC 2463
</simpara>
</listitem>
<listitem>
<simpara>
two groups of messages: error reporting messages and informational messages
</simpara>
</listitem>
<listitem>
<simpara>
IOS implements ICMP rate limiting by setting the minimum interval between error messages and build a token bucket
</simpara>
</listitem>
</itemizedlist>
<simpara>Limit ICMPv6 error messages with default interval 100 ms , and default token-bucket size 10.</simpara>
<screen>(config)# ipv6 icmp error-interval seconds ???</screen>
<section id="_unicast_reverse_path_forwarding">
<title>Unicast reverse path forwarding</title>
<itemizedlist>
<listitem>
<simpara>
protects router from DoS attacks from spoofed IPv6 host address.
</simpara>
</listitem>
<listitem>
<simpara>
performs a recursive lookup in the ipv6 routing table
  to verify that the packet came in on the correct interface.
</simpara>
</listitem>
</itemizedlist>
<screen>(config-if)# ipv6 verify unicast reverse-path</screen>
</section>
</section>
<section id="_dns">
<title>DNS</title>
<itemizedlist>
<listitem>
<simpara>
provides resolution of domain names
</simpara>
</listitem>
<listitem>
<simpara>
DNS records: AAAA (RFC 1886), A6 (RFC 2874)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cdp">
<title>CDP</title>
<itemizedlist>
<listitem>
<simpara>
Cisco Discovery Protocol
</simpara>
</listitem>
<listitem>
<simpara>
provides extensive information about the configuration and functionality of Cisco devices.
</simpara>
</listitem>
</itemizedlist>
<simpara>Display IPv6 information transmitted in CDP, use the <emphasis role="strong">detail</emphasis> keyword</simpara>
<screen># show cdp neighbors detail</screen>
</section>
<section id="_dhcp">
<title>DHCP</title>
<itemizedlist>
<listitem>
<simpara>
RFC 3315
</simpara>
</listitem>
</itemizedlist>
<simpara>Two conditions can cause a host to use DHCPv6:</simpara>
<itemizedlist>
<listitem>
<simpara>
The host is explicitly configured to use DHCPv6 based on an implementation-specific setting.
</simpara>
</listitem>
<listitem>
<simpara>
An IPv6 router advertises in its RA messages that it wants hosts to use DHCPv6 for
addressing. Routers do this by setting the M flag (Managed Address Configuration) in RAs.
</simpara>
</listitem>
</itemizedlist>
<simpara>To use stateful autoconfiguration, a host sends a DHCP request to one of two well-known IPv6
multicast addresses on UDP port 547:</simpara>
<itemizedlist>
<listitem>
<simpara>
FF02::1:2, all DHCP relay agents and servers
</simpara>
</listitem>
<listitem>
<simpara>
FF05::1:3, all DHCP servers
</simpara>
</listitem>
</itemizedlist>
<simpara>The DHCP server then provides the necessary configuration information in reply to the host on
UDP port 546. This information can include the same types of information used in an IPv4
network, but additionally it can provide information for multiple subnets, depending on how the
DHCP server is configured.</simpara>
<simpara>To configure a Cisco router as a DHCPv6 server,
you first configure a DHCP pool, just as in IPv4
then enable the DHCPv6 service using the <emphasis role="strong">ipv6 dhcp server pool-name</emphasis></simpara>
</section>
<section id="_access_lists">
<title>Access lists</title>
<simpara>Similar with IPv4 access lists except that:</simpara>
<itemizedlist>
<listitem>
<simpara>
Because Neighbor Discovery is a key protocol in IPv6 networks, access lists implicitly permit
ND traffic. This is necessary to avoid breaking ND’s ARP-like functionality. You can override
this implicit-permit behavior using deny statements in IPv6 access lists.
</simpara>
</listitem>
<listitem>
<simpara>
To configure an interface to filter traffic using an access list,
use the <emphasis role="strong">ipv6 traffic-filter access-list-name {in | out}</emphasis> command.
</simpara>
</listitem>
<listitem>
<simpara>
IPv6 access lists are always named; they cannot be numbered (unless you use a number as a name).
</simpara>
</listitem>
<listitem>
<simpara>
IPv6 access lists are configured in named access-list configuration mode, which is like IPv4
named access-list configuration mode. However, you can also enter IPv4-like commands that
specify an entire access-list entry on one line. The router will convert it to the correct
configuration commands for named access-list configuration mode.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_ipv6_routing">
<title>IPv6 routing</title>
<section id="_static_routes">
<title>Static routes</title>
<simpara>Similar to IPv4 static routes except that:</simpara>
<itemizedlist>
<listitem>
<simpara>
An IPv6 static route to an interface has an administrative distance of 1, not 0 as in IPv4.
</simpara>
</listitem>
<listitem>
<simpara>
An IPv6 static route to a next-hop IP address also has an administrative distance of 1, like IPv4.
</simpara>
</listitem>
<listitem>
<simpara>
Floating static routes work the same way in IPv4 and IPv6.
</simpara>
</listitem>
<listitem>
<simpara>
An IPv6 static route to a broadcast interface type, such as Ethernet, must also specify a next-
hop IPv6 address because
</simpara>
<itemizedlist>
<listitem>
<simpara>
IPv6 does not use ARP
</simpara>
</listitem>
<listitem>
<simpara>
There is no concept of proxy ARP
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<screen>(config)# ipv6 route 2001:128::/64 2001::207:85FF:FE80:7208</screen>
<screen>show ipv6 route</screen>
</section>
<section id="_ospfv3">
<title>OSPFv3</title>
</section>
<section id="_eigrpv6">
<title>EIGRPv6</title>
</section>
</section>
<section id="_ospfv3_2">
<title>ospfv3</title>
<itemizedlist>
<listitem>
<simpara>
router id is highest ipv4 loopback, highest ipv4, or <emphasis role="strong">router-id</emphasis> id command
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_readings_2">
<title>readings</title>
<simpara><ulink url="http://www.cisco.com/c/en/us/td/docs/ios/12_4/interface/configuration/guide/inb_tun.html#wp1045782">Implement tunnels</ulink></simpara>
<simpara><ulink url="http://www.cisco.com/en/US/docs/ios/ipv6/configuration/guide/ip6-ospf.html#wp1069821">implementing OSPF for IPv6</ulink></simpara>
</section>
</chapter>
<chapter id="_ospfv3_3">
<title>OSPFv3</title>
<section id="_concepts_17">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
Type 1 : router LSA do not advertise prefixes.
</simpara>
</listitem>
<listitem>
<simpara>
Type 9 : intra-area-prefix LASA advertise prefixes.
</simpara>
</listitem>
</itemizedlist>
<section id="_ls_type">
<title>LS type</title>
<itemizedlist>
<listitem>
<simpara>
16 bits
</simpara>
</listitem>
<listitem>
<simpara>
indicates what type of LSA it is and how far the LSA should be flooded
</simpara>
<itemizedlist>
<listitem>
<simpara>
U bit (understand )
</simpara>
<itemizedlist>
<listitem>
<simpara>
first bit
</simpara>
</listitem>
<listitem>
<simpara>
indicates how the LSA should be handled by a router that does not understand the LSA function code field.
</simpara>
</listitem>
<listitem>
<simpara>
value 0 to flood the LSA only on the local link
</simpara>
</listitem>
<listitem>
<simpara>
value 1 to store and flood the LSA as if the router understand the LSA type
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
S2, S1 (second and third bit)
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="1">
<colspec colname="col_1" colwidth="100*"/>
<thead>
<row>
<entry align="left" valign="top">S2 : S1 : scope
0  : 0  : link-local
0  : 1  : area-wide
1  : 0  : aS- wide
1  : 1  : reserved</entry>
</row>
</thead>
<tbody>
</tbody>
</tgroup>
</informaltable>
<itemizedlist>
<listitem>
<simpara>
LSA type (last 13 bits)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_commands">
<title>Commands</title>
<simpara><ulink url="http://www.cisco.com/c/en/us/td/docs/ios-xml/ios/ipv6/configuration/15-2mt/ipv6-15-2mt-book/ip6-ospf.html#GUID-C94EFDA2-7D3C-4A82-AA0C-94A662767CB7">implement OSPFv3</ulink></simpara>
</section>
</chapter>
<chapter id="_eigrpv6_2">
<title>EIGRPv6</title>
</chapter>
<chapter id="_bgp_2">
<title>BGP</title>
<section id="_concepts_18">
<title>Concepts</title>
<itemizedlist>
<listitem>
<simpara>
exterior gateway protocol
</simpara>
</listitem>
<listitem>
<simpara>
create loop-free inter-domain routing between AS.
</simpara>
</listitem>
<listitem>
<simpara>
path vector
</simpara>
</listitem>
<listitem>
<simpara>
TCP 179
</simpara>
</listitem>
<listitem>
<simpara>
AD: external 20 , internal and local 200
</simpara>
</listitem>
<listitem>
<simpara>
RFC 1771
</simpara>
</listitem>
</itemizedlist>
<section id="_when_to_use_bgp_2">
<title>When to use BGP</title>
<itemizedlist>
<listitem>
<simpara>
multiple connections to Internet via different providers
</simpara>
</listitem>
<listitem>
<simpara>
multiple connections to external ASs via the same provider but different routing policy
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_autonomous_systems_2">
<title>Autonomous systems</title>
<itemizedlist>
<listitem>
<simpara>
AS: set of routers under a single technical administration
</simpara>
</listitem>
<listitem>
<simpara>
16-bit number
</simpara>
</listitem>
<listitem>
<simpara>
1 - 65535
</simpara>
</listitem>
<listitem>
<simpara>
private use: 64512 - 65535
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_bgp_peers_2">
<title>BGP peers</title>
<itemizedlist>
<listitem>
<simpara>
formed over a TCP connection
</simpara>
</listitem>
<listitem>
<simpara>
exchanges network reachability information
</simpara>
</listitem>
<listitem>
<simpara>
initially exchange full BGP routing table then incremental updates
</simpara>
</listitem>
<listitem>
<simpara>
keep version number
</simpara>
<variablelist>
<varlistentry>
<term>
iBPG peers 
</term>
<listitem>
</listitem>
</varlistentry>
</variablelist>
</listitem>
<listitem>
<simpara>
same AS
</simpara>
</listitem>
<listitem>
<simpara>
must be fully meshed within AS
</simpara>
<variablelist>
<varlistentry>
<term>
eBGP peers 
</term>
<listitem>
</listitem>
</varlistentry>
</variablelist>
</listitem>
<listitem>
<simpara>
different AS
</simpara>
</listitem>
<listitem>
<simpara>
by default, one hop away but you can change that with <emphasis role="strong">ebgp-multihop</emphasis>
</simpara>
</listitem>
</itemizedlist>
<section id="_bgp_peers_messages_2">
<title>BGP peers messages</title>
<variablelist>
<varlistentry>
<term>
OPEN
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
initiates the session
</simpara>
</listitem>
<listitem>
<simpara>
contains BGP version , local AS number, BGP router Id
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
KEEPALIVE
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
every 60 seconds
</simpara>
</listitem>
<listitem>
<simpara>
hold-time: 180 seconds
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
UPDATE
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
exchange routes between peers
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>
NOTIFICATION
</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>
go out in response to error, fatal condition
</simpara>
</listitem>
<listitem>
<simpara>
torn down or reset the BGP peer session
</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_bgp_fsm_states_2">
<title>BGP FSM States</title>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">Idle</emphasis> – initial BGP state
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Connect</emphasis> - waits for a TCP connection with the remote peer. If
successful, an OPEN message is sent. If unsuccessful, the session is
placed in an Active state
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Active</emphasis> – BGP attempts to initiate a TCP connection with the remote
peer. If successful, an OPEN message is sent. If unsuccessful, BGP
will wait for a ConnectRetry timer to expire, and place the session
back in a Connect State.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">OpenSent</emphasis> – BGP has both established the TCP connection and sent
an OPEN Message, and is awaiting a reply OPEN Message. Once it
receives a reply OPEN Message, the BGP peer will send a
KEEPALIVE message.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">OpenConfirm</emphasis> – BGP listens for a reply KEEPALIVE message.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">Established</emphasis> – the BGP peer session is fully established. UPDATE
messages containing routing information will now be sent.
</simpara>
</listitem>
<listitem>
<simpara>
if peer stuck in <emphasis role="strong">Active</emphasis> state, potential problems can include:
</simpara>
<itemizedlist>
<listitem>
<simpara>
no IP connectivity
</simpara>
</listitem>
<listitem>
<simpara>
incorrect <emphasis role="strong">neighbor</emphasis> statement
</simpara>
</listitem>
<listitem>
<simpara>
access-list filtering TCP port 179
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_best_path_selection_algorithm_2">
<title>Best path selection algorithm</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>
highest weight
</simpara>
</listitem>
<listitem>
<simpara>
highest local pref
</simpara>
</listitem>
<listitem>
<simpara>
locally originated paths over externally originated paths
</simpara>
</listitem>
<listitem>
<simpara>
shortest AS path
</simpara>
</listitem>
<listitem>
<simpara>
lowest origin type ( internal over external over incomplete)
</simpara>
</listitem>
<listitem>
<simpara>
lowest MED
</simpara>
</listitem>
<listitem>
<simpara>
eBGP paths over iBGP paths
</simpara>
</listitem>
<listitem>
<simpara>
lowest IGP cost
</simpara>
</listitem>
<listitem>
<simpara>
oldest path
</simpara>
</listitem>
<listitem>
<simpara>
lowest BGP router id
</simpara>
</listitem>
</orderedlist>
<simpara>source: <ulink url="http://www.cisco.com/en/US/tech/tk365/technologies_tech_note09186a0080094431.shtml">http://www.cisco.com/en/US/tech/tk365/technologies_tech_note09186a0080094431.shtml</ulink></simpara>
</section>
<section id="_community_attributes_2">
<title>community attributes</title>
<itemizedlist>
<listitem>
<simpara>
no-advertise: prevents advertisements to any BGP peer
</simpara>
</listitem>
<listitem>
<simpara>
no-export: prevents advertisements to any eBGP peer
</simpara>
</listitem>
<listitem>
<simpara>
no-advertise: prevents advertisements outside the AS, or in confederation scenarios, outside the sub-AS
</simpara>
</listitem>
<listitem>
<simpara>
internet:  advertises routes to any route
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration_tasks_13">
<title>Configuration tasks</title>
<section id="_congigure_bgp_neighbors_2">
<title>Congigure BGP neighbors</title>
</section>
</section>
</chapter>
</part>
<part id="_implement_mpls_layer_3_vpns">
<title>Implement MPLS Layer 3 VPNs</title>
<formalpara><title>Exam objectives</title><para>
<screen>weight: 4%

4.0 Implement MPLS Layer 3 VPNs
4.1 Implement MPLS
4.2 Implement Layer 3 VPNs on provider edge, provider and customer edge (CE) routers
4.3 Implement VRF and Multi-VRF Customer Edge (VRF-Lite)</screen>
</para></formalpara>
<chapter id="_mpls">
<title>MPLS</title>
<section id="_concepts_19">
<title>Concepts</title>
<simpara>mpls vpn
  ce : no mpls-aware
  pe : mpls and vpn aaware
  p : no vpn aawre</simpara>
<section id="_route_distinguishers_and_route_targets">
<title>Route distinguishers and route targets</title>
<simpara><ulink url="http://www.cisco.com/c/en/us/td/docs/net_mgmt/ip_solution_center/3-1/mpls/user/guide/mpls/1_iscqsg.html#wp1039468">RD and RT</ulink></simpara>
</section>
</section>
<section id="_commands_2">
<title>Commands</title>
<screen>show mpls forwarding-table</screen>
<simpara>check <ulink url="http://www.cisco.com/en/US/docs/ios-xml/ios/mpls/command/mp-s2.html#wp4232274342">http://www.cisco.com/en/US/docs/ios-xml/ios/mpls/command/mp-s2.html#wp4232274342</ulink></simpara>
</section>
</chapter>
</part>
<part id="_ip_multicast_routing">
<title>IP multicast routing</title>
<chapter id="_cisco_implementation_of_ip_multicast_routing">
<title>Cisco Implementation of IP multicast routing</title>
<simpara>The Cisco IOS software supports these protocols to implement IP multicast routing:</simpara>
<itemizedlist>
<listitem>
<simpara>
Internet Group Management Protocol (IGMP) is used among hosts on a LAN and
  the routers  on that LAN to track the multicast
  groups of which hosts are members.
</simpara>
</listitem>
<listitem>
<simpara>
Protocol-Independent Multicast (PIM) protocol is used among routers and
  multilayer switches to track which multicast packets to forward to each other
  and to their directly connected LANs.
</simpara>
</listitem>
<listitem>
<simpara>
Distance Vector Multicast Routing Protocol (DVMRP) is used on the multicast
  backbone of the Internet (MBONE).
  The Cisco IOS software supports PIM-to-DVMRP interaction.
</simpara>
</listitem>
<listitem>
<simpara>
Cisco Group Management Protocol (CGMP) is used on Cisco routers and multilayer switches
connected to Layer 2 Catalyst switches to perform tasks similar to those performed by IGMP.
</simpara>
</listitem>
</itemizedlist>
<figure><title>Multicast routing protocols</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ip-multicast-routing-protocols.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/ip-multicast-routing-protocols.png</phrase></textobject>
</mediaobject>
</figure>
</chapter>
<chapter id="_ip_multicast_introduction">
<title>IP multicast introduction</title>
<section id="_definitions">
<title>Definitions</title>
<variablelist>
<varlistentry>
<term>
IP multicasting
</term>
<listitem>
<simpara>
Sending a message from a single source to selected multiple destinations across a
Layer 3 network in one data stream.
If you want to send a message from one source to one destination, you could send a unicast
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_multicast_ip_addressing">
<title>Multicast IP addressing</title>
<simpara>Multicast applications always use a multicast IP address. This multicast address represents the
multicast application and is referred to as a multicast group. Unlike a unicast IP address, which
uniquely identifies a single IP host, a multicast address used as a destination address on an IP
packet signifies that the packet is carrying traffic for a specific multicast application. For example,
if a multicast packet is traveling over a network with a destination address 225.5.5.5, it is
proclaiming to the network devices that, “I am carrying traffic for the multicast application that
uses multicast group address 225.5.5.5; do you want it?” A multicast address is never assigned to
a network device, so it is never used as a source address. The source address on a multicast packet,
or any IP packet, should always be a unicast address.</simpara>
<section id="_multicast_address_range_and_structure">
<title>Multicast Address Range and Structure</title>
<simpara>The Internet Assigned Numbers Authority (IANA) has assigned class D IP addresses to multicast
applications. The first 4 bits of the first octet for a class D address are always 1110. IP multicast
addresses range from 224.0.0.0 through 239.255.255.255. As these addresses are used to represent
multicast groups (applications) and not hosts, there is no need for a subnet mask for multicast
addresses because they are not hierarchical. In other words, there is only one requirement for a
multicast address: The first 4 bits of the first octet must be 1110. The last 28 bits are unstructured.</simpara>
</section>
<section id="_well_known_multicast_addresses">
<title>Well-known multicast addresses</title>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>Multicast Address ranges and their use</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="30*"/>
<colspec colname="col_2" colwidth="70*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Multicast Address</simpara></entry>
<entry align="left" valign="top"><simpara>Range Usage</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.0 to 239.255.255.255</simpara></entry>
<entry align="left" valign="top"><simpara>This range represents the entire IPv4 multicast address space. It is reserved for multicast applications.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.0 to 224.0.0.255</simpara></entry>
<entry align="left" valign="top"><simpara>permanent groups; Addresses from this range are assigned by IANA for network protocols on a local segment. Routers do not forward packets with destination addresses used from this range.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.1.0 to 224.0.1.255</simpara></entry>
<entry align="left" valign="top"><simpara>permanent groups; Addresses from this range are assigned by IANA for the network protocols that are forwarded in the entire network. Routers forward packets with destination addresses used from this range.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>232.0.0.0 to 232.255.255.255</simpara></entry>
<entry align="left" valign="top"><simpara>This range is used for SSM applications.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>233.0.0.0 to 233.255.255.255</simpara></entry>
<entry align="left" valign="top"><simpara>This range is called the GLOP addressing. It is used for automatically allocating 256 multicast addresses to any enterprise that owns a registered ASN.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>239.0.0.0 to 239.255.255.255</simpara></entry>
<entry align="left" valign="top"><simpara>This range is used for private multicast domains. These addresses are called administratively scoped addresses.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Remaining ranges of addresses</simpara></entry>
<entry align="left" valign="top"><simpara>transient groups; Any enterprise can allocate a multicast address from the transient groups for a global multicast application and should release it when the application is no longer in use.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="30*"/>
<colspec colname="col_2" colwidth="70*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Address</simpara></entry>
<entry align="left" valign="top"><simpara>Usage</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.1</simpara></entry>
<entry align="left" valign="top"><simpara>All multicast hosts</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.2</simpara></entry>
<entry align="left" valign="top"><simpara>All multicast routers</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.4</simpara></entry>
<entry align="left" valign="top"><simpara>DVMRP routers</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.5</simpara></entry>
<entry align="left" valign="top"><simpara>All OSPF routers</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>2224.0.0.9</simpara></entry>
<entry align="left" valign="top"><simpara>RIPv2 routers</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.10</simpara></entry>
<entry align="left" valign="top"><simpara>EIGRP routers</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.13</simpara></entry>
<entry align="left" valign="top"><simpara>PIM routers</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.22</simpara></entry>
<entry align="left" valign="top"><simpara>IGMPv3</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.0.25</simpara></entry>
<entry align="left" valign="top"><simpara>RGMP</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.1.39</simpara></entry>
<entry align="left" valign="top"><simpara>Cisco-RP-Announce</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>224.0.1.40</simpara></entry>
<entry align="left" valign="top"><simpara>Cisco-RP-Discovery</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section id="_mapping_ip_multicast_address_to_mac_addresses">
<title>Mapping IP multicast address to MAC addresses</title>
<simpara>ip &#8594; mac address = (0x01005E) + 0 bit + last 23 bits of the IP address</simpara>
</section>
</section>
</chapter>
<chapter id="_igmp">
<title>IGMP</title>
<section id="_concepts_20">
<title>Concepts</title>
<simpara>To participate in IP multicasting, multicast hosts, routers, and multilayer
switches must have IGMP operating.</simpara>
<simpara>This protocol is the group membership protocol used by hosts to inform routers and multilayer switches of the
existence of members on their directly connected networks and to allow them to send and receive multicast datagrams.</simpara>
<simpara>Multicast routers and switches learn about group membership when a host joining
a new group sends an IGMP message to the group address declaring its
membership.</simpara>
<simpara>Using the information obtained through IGMP, routers and switches maintain a
list of multicast group memberships on a per-interface basis. A multicast group
membership is active on an interface if at least one host on that interface has
sent an IGMP join message to receive the multicast group traffic.</simpara>
<section id="_igmp_version_1">
<title>IGMP version 1</title>
<simpara>IGMPv1 uses a query-response model that allows the multicast router and multilayer switch to
determine which multicast groups are active (have one or more hosts interested
in a multicast group) on the local subnet. In this model, the router or switch
acting as the IGMP querier periodically (every 60 seconds) multicasts an IGMPv1
<emphasis role="strong">membership query</emphasis> to the all-hosts multicast group (224.0.0.1) on the local
subnet. All hosts enabled for multicasting listen for this address and receive
the query. A host responds with an IGMPv1 membership report to receive
multicast traffic for a specific group, and routers or switches on the subnet
learn where active receivers are for the multicast groups.</simpara>
<simpara>A host can also join a multicast group by sending one or more <emphasis role="strong">unsolicited
membership</emphasis> reports as shown in the figure    <xref linkend="igmp_v1_join_process"/> below. In this example, Host 3 sends an
unsolicited report to receive traffic for multicast group 224.3.3.3 instead of
waiting for the next membership query from Router 1.</simpara>
<formalpara id="igmp_v1_join_process"><title>igmp v1 join process</title><para><inlinemediaobject>
  <imageobject>
  <imagedata fileref="images/igmp-v1-join-process.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/igmp-v1-join-process.png</phrase></textobject>
</inlinemediaobject></para></formalpara>
<simpara>A host leaves a multicast group by ceasing to process traffic for the multicast
group and to respond to IGMP queries.</simpara>
<simpara>IGMPv1 relies on the Layer 3 IP multicast routing protocols (PIM, DVMRP, and so
forth) to resolve which one of multiple multicast routers or multilayer
switches on a subnet should be the querier. The query router sends IGMPv1
queries to determine which multicast groups are active (have one or more hosts
sending unsolicited reports) on the local subnet. In general, a designated
router is selected as the querier.</simpara>
</section>
<section id="_igmp_version_2">
<title>IGMP version 2</title>
<simpara>The query and membership report messages are identical to IGMPv1 message with two exceptions.</simpara>
<itemizedlist>
<listitem>
<simpara>
IGMPv2 query message is broken into two categories:
<emphasis role="strong">general queries</emphasis>, which perform the same function as the IGMPv1 queries, and
<emphasis role="strong">group-specific</emphasis> queries, which are queries directed to a single group.
</simpara>
</listitem>
<listitem>
<simpara>
IGMPv2 and IGMPv1 uses different type codes for membership reports.
</simpara>
</listitem>
</itemizedlist>
<simpara>IGMPv2 also includes new features:</simpara>
<variablelist>
<varlistentry>
<term>
Querier election process
</term>
<listitem>
<simpara>
IGMPv2 routers or multilayer switches can elect the
query router without having to rely on the multicast routing protocol to
perform this process.
</simpara>
<simpara>As each IGMPv2 router or multilayer switch starts, it sends an IGMPv2 general
query message to the all-host multicast group (224.0.0.1) with its interface
address in the source IP address field of the message. Each IGMPv2 device
compares the source IP address in the message with its own interface address,
and the device with the lowest IP address on the subnet is elected as the
querier.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Maximum response time field
</term>
<listitem>
<simpara>
this field in the query message permits the query
router to specify the maximum query-response time and controls the burstiness
of the response process.
</simpara>
<simpara>This feature can be important when large numbers of groups are active on a
subnet and you want to spread the responses over a longer period of time.
However, increasing the maximum response timer value also increases the leave
latency; the query router must now wait longer to make sure there are no more
hosts for the group on the subnet.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Group-specific query message
</term>
<listitem>
<simpara>
permits the query router to perform the query
operation on a specific group instead of all groups.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Leave group messages
</term>
<listitem>
<simpara>
provides hosts with a method of notifying routers and
multilayer switches on the network that they are leaving a group as shown in the figure below.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<formalpara><title>IGMPv2 leave process</title><para><inlinemediaobject>
  <imageobject>
  <imagedata fileref="images/igmp-v2-leave-process.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/igmp-v2-leave-process.png</phrase></textobject>
</inlinemediaobject></para></formalpara>
<simpara>In this example, Hosts 2 and 3 are members of multicast group 224.1.1.1. Host 2
sends an IGMPv2 leave message to the all-multicast-routers group (224.0.0.2) to
inform all routers and multilayer switches on the subnet that it is leaving the
group. Router 1, the query router, receives the message, but because it keeps a
list only of the group memberships that are active on a subnet and not
individual hosts that are members, it sends a group-specific query to the
target group (224.1.1.1) to determine whether any hosts remain for the group.
Host 3 is still a member of multicast group 224.1.1.1 and receives the
group-specific query. It responds with an IGMPv2 membership report to inform
Router 1 that a member is still present. When Router 1 receives the report, it
keeps the group active on the subnet. If no response is received, the query
router stops forwarding its traffic to the subnet.</simpara>
</section>
</section>
<section id="_configuration_tasks_14">
<title>Configuration tasks</title>
<section id="_default_igmp_configuration">
<title>default igmp configuration</title>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="54*"/>
<colspec colname="col_2" colwidth="45*"/>
<thead>
<row>
<entry align="left" valign="top">Feature                                            </entry>
<entry align="left" valign="top"> Default Setting</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>IGMP version</simpara></entry>
<entry align="left" valign="top"><simpara>Version 2 on all interfaces.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IGMP query timeout</simpara></entry>
<entry align="left" valign="top"><simpara>60 seconds on all interfaces.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IGMP maximum query response time</simpara></entry>
<entry align="left" valign="top"><simpara>10 seconds on all interfaces.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Multilayer switch as a member of a multicast group</simpara></entry>
<entry align="left" valign="top"><simpara>No group memberships are defined.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Access to multicast groups</simpara></entry>
<entry align="left" valign="top"><simpara>All groups are allowed on an interface.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IGMP host-query message interval</simpara></entry>
<entry align="left" valign="top"><simpara>60 seconds on all interfaces.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Multilayer switch as a statically connected member</simpara></entry>
<entry align="left" valign="top"><simpara>Disabled.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section id="_change_the_igmp_version">
<title>change the igmp version</title>
<screen>(config-if)# ip igmp version {2|1}</screen>
<simpara>Return to the default version</simpara>
<screen>(config-if)# no ip igmp version</screen>
<note><simpara>If you change to version 1, you cannot configure the <emphasis role="strong">ip igmp query-interval</emphasis> or the <emphasis role="strong">ip igmp query-max-response-time</emphasis> interface configuration
commands.</simpara></note>
</section>
<section id="_change_the_igmp_query_timeout">
<title>Change the IGMP query timeout</title>
<simpara>If you are using IGMPv2, you can specify the period of time before the
multilayer switch takes over as the querier for the interface.</simpara>
<simpara>By default, the switch waits twice the query interval controlled by the <emphasis role="strong">ip igmp query-interval</emphasis>
interface configuration command. After that time, if the switch has received no
queries, it becomes the querier.</simpara>
<screen>(config-if)# ip igmp querier-timeout _seconds ! the range is from 60 to 300 seconds_</screen>
</section>
<section id="_change_the_meximum_query_response_time">
<title>Change the meximum query response time</title>
<simpara>If you are using IGMPv2, you can change the maximum query response time
advertised in IGMP queries. The maximum query response time allows the
multilayer switch to quickly detect that there are no more directly connected
group members on a LAN. Decreasing the value allows the switch to prune groups
faster.</simpara>
<simpara>The default is 10 seconds. The range is 1 to 25.</simpara>
<screen>(config-if)# ip igmp query-max-response-time _seconds</screen>
</section>
<section id="_configure_a_switch_as_a_member_of_a_group">
<title>Configure a switch as a member of a group</title>
<simpara>Multilayer switches can be configured as members of a multicast group. This is
useful to determine multicast reachability in a network. If all the
multicast-capable routers and multilayer switches that you administer are
members of a multicast group, pinging that group causes all these devices to
respond. The devices respond to ICMP echo-request packets addressed to a group
of which they are members. Another example is the multicast trace-route tools
provided in the Cisco IOS software.</simpara>
<screen>(config-if)# ip igmp-join-group _group-address_</screen>
</section>
<section id="_controlling_access_to_ip_multicast_groups">
<title>Controlling Access to IP Multicast Groups</title>
<simpara>The multilayer switch sends IGMP host-query messages to determine which
multicast groups have members on attached local networks. The switch then
forwards to these group members all packets addressed to the multicast group.
You can place a filter on each interface to restrict the multicast groups that
hosts on the subnet serviced by the interface can join.</simpara>
<screen>(config-if)# ip igmp access-group 'standard-access-list-number'</screen>
</section>
<section id="_modifying_the_igmp_host_query_message_interval">
<title>Modifying the IGMP Host-Query Message Interval</title>
<simpara>The multilayer switch periodically sends IGMP host-query messages to discover
which multicast groups are present on attached networks. These messages are
sent to the all-hosts multicast group (224.0.0.1) with a time-to-live (TTL) of
1. The switch sends host-query messages to refresh its knowledge of memberships
present on the network. If, after some number of queries, the IOS software
discovers that no local hosts are members of a multicast group, the software
stops forwarding multicast packets to the local network from remote origins for
that group and sends a prune message upstream toward the source.</simpara>
<simpara>The switch elects a PIM designated router (DR) for the LAN (subnet). The DR is
the router or multilayer switch with the highest IP address for IGMPv2; for
IGMPv1, the DR is elected according to the multicast routing protocol that runs
on the LAN. The designated router is responsible for sending IGMP host-query
messages to all hosts on the LAN. In sparse mode, the designated router also
sends PIM register and PIM join messages toward the RP router.</simpara>
<simpara>Default = 60 seconds, range = [1,18000] seconds</simpara>
<screen>ip igmp query-interval _seconds_</screen>
<section id="_configuring_the_multilayer_switch_as_a_statically_connected_member">
<title>Configuring the Multilayer Switch as a Statically Connected Member</title>
<simpara>Sometimes there is either no group member on a network segment or a host cannot report its group membership by using IGMP. However, you might want multicast traffic to go to that network segment. These are ways to pull multicast traffic down to a network segment:</simpara>
<itemizedlist>
<listitem>
<simpara>
Use the <emphasis role="strong">ip igmp join-group</emphasis> interface configuration command. With this method, the multilayer switch accepts the multicast packets in addition to forwarding them. Accepting the multicast packets prevents the switch from fast switching.
</simpara>
</listitem>
<listitem>
<simpara>
Use the <emphasis role="strong">ip igmp static-group</emphasis> interface configuration command. With this method, the multilayer switch does not accept the packets itself, but only forwards them. This method allows fast switching. The outgoing interface appears in the IGMP cache, but the switch itself is not a member, as evidenced by lack of an L (local) flag in the multicast route entry.
</simpara>
</listitem>
</itemizedlist>
<screen>(config-if)# ip igmp static-group</screen>
</section>
</section>
<section id="_enable_cgmp_server_support">
<title>Enable CGMP server support</title>
<simpara>The multilayer switch serves as a CGMP server for devices that do not support
IGMP snooping but have CGMP client functionality. CGMP is a protocol used on
Cisco routers and multilayer switches connected to Layer 2 Catalyst switches to
perform tasks similar to those performed by IGMP. CGMP is necessary because the
Layer 2 switch cannot distinguish between IP multicast data packets and IGMP
report messages, which are both at the MAC-level and are addressed to the same
group address.</simpara>
<simpara>By default, CGMP is disabled on all interfaces.</simpara>
<simpara>Enabling CGMP triggers a CGMP join message. Enable CGMP only on Layer 3
interfaces connected to Layer 2 Catalyst switches.</simpara>
<simpara>(Optional) When you enter the proxy keyword, the CGMP proxy function is
enabled. The proxy router advertises the existence of non-CGMP-capable routers
by sending a CGMP join message with the non-CGMP-capable router MAC address and
a group address of 0000.0000.0000.</simpara>
<simpara>To perform CGMP proxy, the multilayer switch must be the IGMP querier. If
you configure the ip cgmp proxy command, you must manipulate the IP addresses
so that the switch is the IGMP querier, which might be the highest or lowest IP
address, depending on which version of IGMP is running on the network. An IGMP
Version 2 querier is selected based on the lowest IP address on the interface.
An IGMP Version 1 querier is selected based on the multicast routing protocol
used on the interface.</simpara>
<screen>ip cgmp [proxy]</screen>
</section>
<section id="_configure_the_ttl_threshold">
<title>Configure the TTL Threshold</title>
<simpara>Each time an IP multicast packet is forwarded by the multilayer switch, the
time-to-live (TTL) value in the IP header is decremented by one. If the packet
TTL decrements to zero, the switch drops the packet. TTL thresholds can be
applied to individual interfaces of the multilayer switch to prevent multicast
packets with a TTL less than the TTL threshold from being forwarded out the
interface. TTL thresholds provide a simple method to prevent the forwarding of
multicast traffic beyond the boundary of a site or region, based on the TTL
field in a multicast packet. This is known as TTL scoping.</simpara>
<simpara>Figure 33-10 shows a multicast packet arriving on Gigabit Ethernet interface
0/2 with a TTL value of 24. Assuming that the RPF check succeeds and that
Gigabit Ethernet interfaces 0/1, 0/3, and 0/4 are all in the outgoing interface
list, the packet would normally be forwarded out these interfaces. Because some
TTL thresholds have been applied to these interfaces, the multilayer switch
makes sure that the packet TTL value, which is decremented by 1 to 23, is
greater than or equal to the interface TTL threshold before forwarding the
packet out the interface. In this example, the packet is forwarded out
interfaces 0/1 and 0/4, but not interface 0/3.</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/multicast-ttl-threshold.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/multicast-ttl-threshold.png</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>Figure 33-11 shows an example of TTL threshold boundaries being used to limit
the forwarding of multicast traffic. Company XYZ has set a TTL threshold of 100
on all routed interfaces at the perimeter of its network. Multicast
applications that constrain traffic to within the company&#8217;s network need to
send multicast packets with an initial TTL value set to 99. The engineering and
marketing departments have set a TTL threshold of 40 at the perimeter of their
networks; therefore, multicast applications running on these networks can
prevent their multicast transmissions from leaving their respective networks.</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/multicast-ttl-boundaries.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/multicast-ttl-boundaries.png</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>The default TTL value is 0 hops, which means that all multicast packets are
forwarded out the interface. The range is 0 to 255.</simpara>
<simpara>Only multicast packets with a TTL value greater than the threshold are
forwarded out the interface.</simpara>
<simpara>You should configure the TTL threshold only on routed interfaces at the
perimeter of the network.</simpara>
<screen>(config-if)# ip multicast ttl-threshold _value_</screen>
</section>
<section id="_configure_an_ip_multicast_boundary">
<title>Configure an IP multicast boundary</title>
<simpara>Like TTL thresholds, administratively-scoped boundaries can also be used to
limit the forwarding of multicast traffic outside of a domain or subdomain.
This approach uses a special range of multicast addresses, called
administratively-scoped addresses, as the boundary mechanism. If you configure
an administratively-scoped boundary on a routed interface, multicast traffic
whose multicast group addresses fall in this range can not enter or exit this
interface, thereby providing a firewall for multicast traffic in this address
range.</simpara>
<simpara>Figure 33-12 shows that Company XYZ has an administratively-scoped boundary set
for the multicast address range 239.0.0.0/8 on all routed interfaces at the
perimeter of its network. This boundary prevents any multicast traffic in the
range 239.0.0.0 through 239.255.255.255 from entering or leaving the network.
Similarly, the engineering and marketing departments have an
administratively-scoped boundary of 239.128.0.0/16 around the perimeter of
their networks. This boundary prevents multicast traffic in the range of
239.128.0.0 through 239.128.255.255 from entering or leaving their respective
networks.</simpara>
<figure><title>Administratively-Scoped Boundaries</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/multicast-administratively-scoped-boundaries.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/multicast-administratively-scoped-boundaries.png</phrase></textobject>
</mediaobject>
</figure>
<simpara>You can define an administratively-scoped boundary on a routed interface for
multicast group addresses. A standard access list defines the range of
addresses affected. When a boundary is defined, no multicast data packets are
allowed to flow across the boundary from either direction. The boundary allows
the same multicast group address to be reused in different administrative
domains.</simpara>
<simpara>The IANA has designated the multicast address range 239.0.0.0 to
239.255.255.255 as the administratively-scoped addresses. This range of
addresses can then be reused in domains administered by different
organizations. The addresses would be considered local, not globally unique.</simpara>
<screen>(config-if)# ip multicast boundary _standard-access-list-number_</screen>
</section>
<section id="_verify_configuration">
<title>Verify configuration</title>
<simpara>Display multicast-related information about an interface.</simpara>
<screen>show ip igmp interface [interface-id]</screen>
<simpara>Display the multicast groups that are directly connected to the multilayer
switch and that were learned through IGMP.</simpara>
<screen>show ip igmp groups [group-name | group-address | type number]</screen>
</section>
</section>
</chapter>
<chapter id="_pim">
<title>PIM</title>
<section id="_understanding">
<title>Understanding</title>
<variablelist>
<varlistentry>
<term>
PIM is called protocol-independent
</term>
<listitem>
<simpara>
Regardless of the unicast routing protocols used to populate the unicast routing table,
PIM uses this information to perform multicast forwarding instead of maintaining a separate multicast
routing table.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<section id="_versions">
<title>Versions</title>
<section id="_pimv1">
<title>PIMv1</title>
<itemizedlist>
<listitem>
<simpara>
introduced in IOS 11.1(6)
</simpara>
</listitem>
<listitem>
<simpara>
support Auto-RP : eliminates the need to manually configure the rendezvous point in every router.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_pimv2">
<title>PIMv2</title>
<itemizedlist>
<listitem>
<simpara>
default version since IOS 11.3
</simpara>
</listitem>
<listitem>
<simpara>
support BSR (boot strap router) capability.
</simpara>
</listitem>
<listitem>
<simpara>
A single, active RP exists per multicast group, with multiple backup RPs. This single RP compares to multiple active RPs for the same group in PIMv1.
</simpara>
</listitem>
<listitem>
<simpara>
A BSR provides a fault-tolerant, automated RP discovery and distribution mechanism that enables routers and multilayer switches to dynamically learn the group-to-RP mappings.
</simpara>
</listitem>
<listitem>
<simpara>
Sparse mode and dense mode are properties of a group, as opposed to an interface. We strongly recommend sparse-dense mode, as opposed to either sparse mode or dense mode only.
</simpara>
</listitem>
<listitem>
<simpara>
PIM join and prune messages have more flexible encoding for multiple address families.
</simpara>
</listitem>
<listitem>
<simpara>
A more flexible hello packet format replaces the query packet to encode current and future capability options.
</simpara>
</listitem>
<listitem>
<simpara>
Register messages to an RP specify whether they are sent by a border router or a designated router.
</simpara>
</listitem>
<listitem>
<simpara>
PIM packets are no longer inside IGMP packets; they are standalone packets.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_modes_3">
<title>Modes</title>
<simpara>PIM can operate in dense mode (DM), sparse mode (SM), or in sparse-dense mode
(PIM DM-SM), which handles both sparse groups and dense groups at the same
time.</simpara>
<section id="_pim_dm">
<title>PIM DM</title>
<simpara>In dense mode, a PIM DM router or multilayer switch assumes that all other
routers or multilayer switches forward multicast packets for a group. If a PIM
DM device receives a multicast packet and has no directly connected members or
PIM neighbors present, a prune message is sent back to the source. Subsequent
multicast packets are not flooded to this router or switch on this pruned
branch. PIM DM builds source-based multicast distribution trees.</simpara>
<simpara>The simplest form of a multicast distribution tree is a source tree whose root
is the source of the multicast traffic and whose branches form a spanning tree
through the network to the receivers. Because this tree uses the shortest path
through the network, it is also referred to as a shortest-path tree (SPT). A
separate SPT exists for every individual source sending to each group. The
special notation of (S,G) (pronounced S comma G) identifies an SPT where S is
the IP address of the source and G is the multicast group address.</simpara>
<simpara><xref linkend="x1"/> shows an example of SPT for group 224.1.1.1 rooted at the source,
Host A, and connecting two receivers, Hosts B and C. The SPT notation for this
group would be (194.1.1.1, 224.1.1.1).</simpara>
<figure id="x1"><title>Host A Shortest-Path Tree</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/pim-shortest-path-tree.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/pim-shortest-path-tree.png</phrase></textobject>
</mediaobject>
</figure>
<simpara>If Host B is also sending traffic to group 224.1.1.1 and Hosts A and C are
receivers, then a separate (S,G) SPT would exist with the notation of
(194.2.2.2, 224.1.1.1).</simpara>
<simpara>PIM DM employs only SPTs to deliver (S,G) multicast traffic by using a flood
and prune method. It assumes that every subnet in the network has at least one
receiver of the (S,G) multicast traffic, and therefore the traffic is flooded
to all points in the network.</simpara>
<simpara>To avoid unnecessary consumption of network resources, PIM DM devices send
prune messages up the source distribution tree to stop unwanted multicast
traffic. Branches without receivers are pruned from the distribution tree,
leaving only branches that contain receivers. Prunes have a timeout value
associated with them, after which the PIM DM device puts the interface into the
forwarding state and floods multicast traffic out the interface. When a new
receiver on a previously pruned branch of the tree joins a multicast group, the
PIM DM device detects the new receiver and immediately sends a graft message up
the distribution tree toward the source. When the upstream PIM DM device
receives the graft message, it immediately puts the interface on which the
graft was received into the forwarding state so that the multicast traffic
begins flowing to the receiver.</simpara>
</section>
<section id="_pim_sm">
<title>PIM SM</title>
<simpara>PIM SM uses shared trees and SPTs to distribute multicast traffic to multicast receivers in the network.</simpara>
<simpara>In PIM SM, a router or multilayer switch assumes that other routers or switches
do not forward multicast packets for a group, unless there is an explicit
request for the traffic (join message). When a host joins a multicast group
using IGMP, its directly connected PIM SM device sends PIM join messages toward
the root, also known as the RP. This join message travels router-by-router
toward the root, constructing a branch of the shared tree as it goes. The RP
keeps track of multicast receivers; it also registers sources through register
messages received from the source&#8217;s first-hop router (designated router [DR])
to complete the shared tree path from the source to the receiver. The branches
of the shared tree are maintained by periodic join refresh messages that the
PIM SM devices send along the branch.</simpara>
<simpara>When using a shared tree, sources must send their traffic to the RP so that the
traffic reaches all receivers. The special notation *,G, (pronounced star comma
G) is used to represent the tree, where * means all sources and G represents
the multicast group. Figure <xref linkend="pim-shared-distribution-tree"/> shows a shared tree for group 224.2.2.2 with
the RP located at Router 3. Multicast group traffic from source Hosts A and D
travels to the RP (Router 3) and then down the shared tree to two receivers,
Hosts B and C. Because all sources in the multicast group use a common shared
tree, the special notation (*, 224.2.2.2) describes this shared tree.</simpara>
<figure id="pim-shared-distribution-tree"><title>Shared Distribution Tree</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/pim-shared-distribution-tree.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/pim-shared-distribution-tree.png</phrase></textobject>
</mediaobject>
</figure>
<note><simpara>In addition to using the shared distribution tree, PIM SM can also use
SPTs. By joining an SPT, multicast traffic is routed directly to the receivers
without having to go through the RP, thereby reducing network latency and
possible congestion at the RP. The disadvantage is that PIM SM devices must
create and maintain (S,G) state entries in their routing tables along with the
(S,G) SPT. This action consumes router resources.</simpara></note>
<simpara>Prune messages are sent up the distribution tree to prune multicast group
traffic. This action permits branches of the shared tree or SPT that were
created with explicit join messages to be torn down when they are no longer
needed. For example, if a leaf router (a router without any downstream
connections) detects that it no longer has any directly connected hosts (or
downstream multicast routers) for a particular multicast group, it sends a
prune message up the distribution tree to stop the flow of unwanted multicast
traffic.</simpara>
</section>
</section>
<section id="_shared_tree_vs_source_tree">
<title>Shared tree vs Source tree</title>
<simpara>By default, members of a group receive data from senders to the group across a
single data-distribution tree rooted at the RP. Figure <xref linkend="pim_tree"/> shows this type of
shared-distribution tree. Data from senders is delivered to the RP for
distribution to group members joined to the shared tree.</simpara>
<figure id="pim_tree"><title>PIM trees</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/pim-trees.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/pim-trees.png</phrase></textobject>
</mediaobject>
</figure>
<simpara>If the data rate warrants, leaf routers (routers without any downstream
connections) on the shared tree can use the data distribution tree rooted at
the source. This type of distribution tree is called a shortest-path tree or
source tree. By default, the IOS software switches to a source tree upon
receiving the first data packet from a source.</simpara>
<simpara>This process describes the move from a shared tree to a source tree:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
A receiver joins a group; leaf Router C sends a join message toward the RP.
</simpara>
</listitem>
<listitem>
<simpara>
The RP puts a link to Router C in its outgoing interface list.
</simpara>
</listitem>
<listitem>
<simpara>
A source sends data; Router A encapsulates the data in a register message
and sends it to the RP.
</simpara>
</listitem>
<listitem>
<simpara>
The RP forwards the data down the shared tree to Router C and sends a join
message toward the source. At this point, data might arrive twice at Router C,
once encapsulated and once natively.
</simpara>
</listitem>
<listitem>
<simpara>
When data arrives natively (unencapsulated) at the RP, it sends a
register-stop message to Router A.
</simpara>
</listitem>
<listitem>
<simpara>
By default, reception of the first data packet prompts Router C to send a
join message toward the source.
</simpara>
</listitem>
<listitem>
<simpara>
When Router C receives data on (S,G), it sends a prune message for the
source up the shared tree.
</simpara>
</listitem>
<listitem>
<simpara>
The RP deletes the link to Router C from the outgoing interface of (S,G).
The RP triggers a prune message toward the source.
</simpara>
</listitem>
</orderedlist>
<simpara>Join and prune messages are sent for sources and RPs. They are sent hop-by-hop
and are processed by each PIM device along the path to the source or RP.
Register and register-stop messages are not sent hop-by-hop. They are sent by
the designated router that is directly connected to a source and are received
by the RP for the group.</simpara>
<simpara>Multiple sources sending to groups use the shared tree.</simpara>
<simpara>You can configure the PIM device to stay on the shared tree.</simpara>
</section>
<section id="_auto_rp">
<title>Auto-RP</title>
<simpara>This proprietary feature eliminates the need to manually configure the
rendezvous point (RP) information in every router and multilayer switch in the
network.  Auto-RP uses IP multicast to automate the distribution of group-to-RP mappings
to all Cisco routers and multilayer switches in a PIM network.</simpara>
<simpara>It has these benefits:</simpara>
<itemizedlist>
<listitem>
<simpara>
It is easy to use multiple RPs within a network to serve different group
  ranges.
</simpara>
</listitem>
<listitem>
<simpara>
It allows load splitting among different RPs and arrangement of RPs according
  to the location of group participants.
</simpara>
</listitem>
<listitem>
<simpara>
It avoids inconsistent, manual RP configurations on every router and
  multilayer switch in a PIM network, which can cause connectivity problems.
</simpara>
</listitem>
</itemizedlist>
<simpara>For Auto-RP to work, you configure a Cisco router or multilayer switch
as the <emphasis role="strong">mapping agent</emphasis>. It uses IP multicast to learn which routers or switches
in the network are possible candidate RPs by joining the well-known
Cisco-RP-announce multicast group (224.0.1.39) to receive candidate RP
announcements. Candidate RPs send multicast RP-announce messages to a
particular group or group range every 60 seconds (default) to announce their
availability. Each RP-announce message contains a holdtime that tells the
mapping agent how long the candidate RP announcement is valid. The default is
180 seconds.</simpara>
<simpara>Mapping agents listen to these candidate RP announcements and use the
information to create entries in their Group-to-RP mapping caches. Only one
mapping cache entry is created for any Group-to-RP range received, even if
multiple candidate RPs are sending RP announcements for the same range. As the
RP-announce messages arrive, the mapping agent selects the router or switch
with the highest IP address as the active RP and stores this RP address in the
Group-to-RP mapping cache.</simpara>
<simpara>Mapping agents multicast the contents of their Group-to-RP mapping cache in
RP-discovery messages every 60 seconds (default) to the Cisco-RP-discovery
multicast group (224.0.1.40), which all Cisco PIM routers and multilayer
switches join to receive Group-to-RP mapping information. Thus, all routers and
switches automatically discover which RP to use for the groups they support.
The discovery messages also contain a holdtime, which defines how long the
Group-to-RP mapping is valid. If a router or switch fails to receive
RP-discovery messages and the Group-to-RP mapping information expires, it
switches to a statically configured RP that was defined with the <emphasis role="strong">ip pim
rp-address</emphasis> global configuration command. If no statically configured RP exists,
the router or switch changes the group to dense-mode operation.</simpara>
<simpara>Multiple RPs serve different group ranges or serve as hot backups of each
other.</simpara>
</section>
<section id="_bootstrap_router">
<title>Bootstrap Router</title>
<simpara>PIMv2 BSR is another method to distribute group-to-RP mapping information to
all PIM routers and multilayer switches in the network. It eliminates the need
to manually configure RP information in every router and switch in the network.
However, instead of using IP multicast to distribute group-to-RP mapping
information, BSR uses hop-by-hop flooding of special BSR messages to distribute
the mapping information.</simpara>
<simpara>The BSR is elected from a set of candidate routers and switches in the domain
that have been configured to function as BSRs. The election mechanism is
similar to the root-bridge election mechanism used in bridged LANs. The BSR
election is based on the BSR priority of the device contained in the BSR
messages that are sent hop-by-hop through the network. Each BSR device examines
the message and forwards out all interfaces only the message that has either a
higher BSR priority than its BSR priority or the same BSR priority, but with a
higher BSR IP address. Using this method, the BSR is elected.</simpara>
<simpara>The elected BSR sends BSR messages to the all-PIM-routers multicast group
(224.0.0.13) with a TTL of 1. Neighboring PIMv2 routers or multilayer switches
receive the BSR message and multicast it out all other interfaces (except the
one on which it was received) with a TTL of 1. In this way, BSR messages travel
hop-by-hop throughout the PIM domain. Because BSR messages contain the IP
address of the current BSR, the flooding mechanism allows candidate RPs to
automatically learn which device is the elected BSR.</simpara>
<simpara>Candidate RPs send candidate RP advertisements showing the group range for
which they are responsible directly to the BSR, which stores this information
in its local candidate-RP cache. The BSR periodically advertises the contents
of this cache in BSR messages to all other PIM devices in the domain. These
messages travel hop-by-hop through the network to all routers and switches,
which store the RP information in the BSR message in their local RP cache. The
routers and switches select the same RP for a given group because they all use
a common RP hashing algorithm.</simpara>
<section id="_multicast_forwarding_and_reverse_path_check">
<title>Multicast Forwarding and Reverse Path Check</title>
<simpara>With unicast routing, routers and multilayer switches forward traffic through
the network along a single path from the source to the destination host whose
IP address appears in the destination address field of the IP packet. Each
router and switch along the way makes a unicast forwarding decision, using the
destination IP address in the packet, by looking up the destination address in
the unicast routing table and forwarding the packet through the specified
interface to the next hop toward the destination.</simpara>
<simpara>With multicasting, the source is sending traffic to an arbitrary group of hosts
represented by a multicast group address in the destination address field of
the IP packet. To determine whether to forward or drop an incoming multicast
packet, the router or multilayer switch uses a <emphasis role="strong">reverse path forwarding</emphasis> (RPF)
check on the packet as follows and shown in Figure <xref linkend="rpf"/>:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
The router or multilayer switch examines the source address of the arriving
multicast packet to determine whether the packet arrived on an interface that
is on the reverse path back to the source.
</simpara>
</listitem>
<listitem>
<simpara>
If the packet arrives on the interface leading back to the source, the RPF
check is successful and the packet is forwarded to all interfaces in the
outgoing interface list (which might not be all interfaces on the router).
</simpara>
</listitem>
<listitem>
<simpara>
If the RPF check fails, the packet is discarded.
</simpara>
</listitem>
</orderedlist>
<simpara>Some multicast routing protocols, such as DVMRP, maintain a separate multicast
routing table and use it for the RPF check. However, PIM uses the unicast
routing table to perform the RPF check.</simpara>
<simpara>Figure <xref linkend="rpf"/> shows Gigabit Ethernet interface 0/2 receiving a multicast packet from source 151.10.3.21. A check of the routing table shows that the interface on the reverse path to the source is Gigabit Ethernet interface 0/1, not interface 0/2. Because the RPF check fails, the multilayer switch discards the packet. Another multicast packet from source 151.10.3.21 is received on interface 0/1, and the routing table shows this interface is on the reverse path to the source. Because the RPF check passes, the switch forwards the packet to all interfaces in the outgoing interface list.</simpara>
<figure id="rpf"><title>RPF Check</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/pim-rpf-check.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/pim-rpf-check.png</phrase></textobject>
</mediaobject>
</figure>
<simpara>PIM uses both source trees and RP-rooted shared trees to forward datagrams ; the RPF check is performed differently for each:</simpara>
<itemizedlist>
<listitem>
<simpara>
If a PIM router or multilayer switch has a source-tree state (that is, an (S,G) entry is present in the multicast routing table), it performs the RPF check against the IP address of the source of the multicast packet.
</simpara>
</listitem>
<listitem>
<simpara>
If a PIM router or multilayer switch has a shared-tree state (and no explicit source-tree state), it performs the RPF check on the rendezvous point (RP) address (which is known when members join the group).
</simpara>
</listitem>
</itemizedlist>
<simpara>Sparse-mode PIM uses the RPF lookup function to determine where it needs to send joins and prunes:</simpara>
<itemizedlist>
<listitem>
<simpara>
(S,G) joins (which are source-tree states) are sent toward the source.
</simpara>
</listitem>
<listitem>
<simpara>
(*,G) joins (which are shared-tree states) are sent toward the RP.
</simpara>
</listitem>
</itemizedlist>
<simpara>DVMRP and dense-mode PIM use only source trees and use RPF as previously described.</simpara>
</section>
</section>
<section id="_neighbor_discovery_2">
<title>Neighbor Discovery</title>
<simpara>PIM uses a neighbor discovery mechanism to establish PIM neighbor adjacencies.
To establish adjacencies, a PIM router or multilayer switch sends PIM hello
messages to the all-PIM-routers multicast group (224.0.0.13) on each of its
multicast-enabled interfaces. The hello message contains a holdtime, which
tells the receiver when the neighbor adjacency associated with the sender
expires if no more PIM hello messages are received. Keeping track of
adjacencies is important for PIM DM operation for building the source
distribution tree.</simpara>
<simpara>PIM hello messages are also used to elect the DR for multi-access networks
(Ethernet). The router or multilayer switch on the network with the highest IP
address is the DR. With PIM DM operation, the DR has meaning only if IGMPv1 is
in use; IGMPv1 does not have an IGMP querier election process, so the elected
DR functions as the IGMP querier. In PIM SM operation, the DR is the router or
switch that is directly connected to the multicast source. It sends PIM
register messages to notify the RP that multicast traffic from a source needs
to be forwarded down the shared tree.</simpara>
</section>
<section id="_pimv1_and_pimv2_interoperability">
<title>PIMv1 and PIMv2 interoperability</title>
<simpara>The Cisco PIMv2 implementation allows interoperability and transition between
Version 1 and Version 2, although there might be some minor problems.</simpara>
<simpara>You can upgrade to PIMv2 incrementally. PIM Versions 1 and 2 can be configured
on different routers and multilayer switches within one network. Internally,
all routers and multilayer switches on a shared media network must run the same
PIM version. Therefore, if a PIMv2 device detects a PIMv1 device, the Version 2
device downgrades itself to Version 1 until all Version 1 devices have been
shut down or upgraded.</simpara>
<simpara>PIMv2 uses the BSR to discover and announce RP-set information for each group
prefix to all the routers and multilayer switches in a PIM domain. PIMv1,
together with the Auto-RP feature, can perform the same tasks as the PIMv2 BSR.
However, Auto-RP is a standalone protocol, separate from PIMv1, and is a
proprietary Cisco protocol. PIMv2 is a standards track protocol in the IETF. We
recommend that you use PIMv2. The BSR mechanism interoperates with Auto-RP on
Cisco routers and multilayer switches. For more information, see the "Auto-RP
and BSR Configuration Guidelines" section.</simpara>
<simpara>When PIMv2 devices interoperate with PIMv1 devices, Auto-RP should have already
been deployed. A PIMv2 BSR that is also an Auto-RP mapping agent automatically
advertises the RP elected by Auto-RP. That is, Auto-RP sets its single RP on
every router or multilayer switch in the group. Not all routers and switches in
the domain use the PIMv2 hash function to select multiple RPs.</simpara>
<simpara>Dense-mode groups in a mixed PIMv1 and PIMv2 region need no special
configuration; they automatically interoperate.</simpara>
<simpara>Sparse-mode groups in a mixed PIMv1 and PIMv2 region are possible because the
Auto-RP feature in PIMv1 interoperates with the PIMv2 RP feature. Although all
PIMv2 devices can also use PIMv1, we recommend that the RPs be upgraded to
PIMv2 (or at least upgraded to PIMv1 in the Cisco IOS Release 11.3 software).
To ease the transition to PIMv2, we have these recommendations:</simpara>
<itemizedlist>
<listitem>
<simpara>
Use Auto-RP throughout the region.
</simpara>
</listitem>
<listitem>
<simpara>
Configure sparse-dense mode throughout the region.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_auto_rp_and_bsr_configuration_guidelines">
<title>Auto-RP and BSR configuration guidelines</title>
<simpara>There are two approaches to using PIMv2. You can use Version 2 exclusively in
your network or migrate to Version 2 by employing a mixed PIM version
environment.</simpara>
<itemizedlist>
<listitem>
<simpara>
If your network is all Cisco routers and multilayer switches, you can use
either Auto-RP or BSR.
</simpara>
</listitem>
<listitem>
<simpara>
If you have non-Cisco routers in your network, you must use BSR.
</simpara>
</listitem>
<listitem>
<simpara>
If you have Cisco PIMv1 and PIMv2 routers and multilayer switches and
non-Cisco routers, you must use both Auto-RP and BSR.
</simpara>
</listitem>
<listitem>
<simpara>
Because bootstrap messages are sent hop-by-hop, a PIMv1 device prevents these
messages from reaching all routers and multilayer switches in your network.
Therefore, if your network has a PIMv1 device in it and only Cisco routers and
multilayer switches, it is best to use Auto-RP.
</simpara>
</listitem>
<listitem>
<simpara>
If you have a network that includes non-Cisco routers, configure the Auto-RP
mapping agent and the BSR on a Cisco PIMv2 router or multilayer switch. Ensure
that no PIMv1 device is on the path between the BSR and a non-Cisco PIMv2
router.
</simpara>
</listitem>
<listitem>
<simpara>
If you have non-Cisco PIMv2 routers that need to interoperate with Cisco PIMv1
routers and multilayer switches, both Auto-RP and a BSR are required. We
recommend that a Cisco PIMv2 device be both the Auto-RP mapping agent and the
BSR.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_configuration_tasks_15">
<title>Configuration tasks</title>
<section id="_configure_basic_multicast_routing">
<title>Configure basic multicast routing</title>
<simpara>You must enable IP multicast routing and configure the PIM version and PIM mode
so that the IOS software can forward multicast packets and determine how the
multilayer switch populates its multicast routing table.</simpara>
<simpara>You can configure an interface to be in PIM dense mode, sparse mode, or
sparse-dense mode. The mode determines how the switch populates its multicast
routing table and how it forwards multicast packets it receives from its
directly connected LANs. You must enable PIM in one of these modes for an
interface to perform IP multicast routing. Enabling PIM on an interface also
enables IGMP operation on that interface.</simpara>
<simpara>By default, multicast routing is disabled, and there is no default mode
setting. The following procedure is required.</simpara>
<itemizedlist>
<listitem>
<simpara>
Enable IP multicast forwarding
</simpara>
</listitem>
</itemizedlist>
<screen>(config)# ip multicast-routing</screen>
<itemizedlist>
<listitem>
<simpara>
Enter interface configuration mode, and specify the Layer 3 interface on which you want to enable multicast routing.
The specified interface must be one of the following:
</simpara>
<itemizedlist>
<listitem>
<simpara>
A routed port: a physical port that has been configured as a Layer 3 port by entering the no <emphasis role="strong">switchport interface</emphasis> configuration command.
</simpara>
</listitem>
<listitem>
<simpara>
An SVI: a VLAN interface created by using the <emphasis role="strong">interface vlan vlan-id</emphasis> global configuration command.
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>These ports must have IP addresses assigned to them.</simpara>
<screen>interface _interface-id_</screen>
<itemizedlist>
<listitem>
<simpara>
Configure the PIM version on the interface. By default, version 2 is enabled and is the recommended setting.
</simpara>
</listitem>
</itemizedlist>
<screen>(config-if)# ip pim version [1|2]</screen>
<itemizedlist>
<listitem>
<simpara>
Enable a PIM mode on the interface.  By default, no mode is configured.
</simpara>
</listitem>
</itemizedlist>
<screen>(config-if)# pim {dense-mode | sparse-mode | sparse-dense-mode }</screen>
<section id="_manually_assigning_an_rp_to_multicast_groups">
<title>Manually Assigning an RP to Multicast Groups</title>
<simpara>Senders of multicast traffic announce their existence through register messages
received from the source&#8217;s first-hop router (designated router) and forwarded
to the RP. Receivers of multicast packets use RPs to join a multicast group by
using explicit join messages. RPs are not members of the multicast group;
rather, they serve as a meeting place for multicast sources and group members.</simpara>
<simpara>Configure the address of a PIM RP.</simpara>
<simpara>By default, no PIM RP address is configured. You must configure the IP address
of RPs on all routers and multilayer switches (including the RP). If there is
no RP configured for a group, the multilayer switch treats the group as dense,
using the dense-mode PIM techniques. A PIM device can use multiple RPs, but
only one per group.</simpara>
<itemizedlist>
<listitem>
<simpara>
For ip-address, enter the unicast address of the RP in dotted-decimal
notation.
</simpara>
</listitem>
<listitem>
<simpara>
(Optional) For access-list-number, enter an IP standard access list number
from 1 to 99. If no access list is configured, the RP is used for all groups.
</simpara>
</listitem>
<listitem>
<simpara>
(Optional) The override keyword means that if there is a conflict between the
RP configured with this command and one learned by Auto-RP or BSR, the RP
configured with this command prevails.
</simpara>
</listitem>
</itemizedlist>
<screen>ip pim rp-address ip-address [access-list-number] [override]</screen>
</section>
</section>
<section id="_configure_auto_rp">
<title>Configure Auto-RP</title>
<simpara>Configure another PIM device to be the candidate RP for local groups.</simpara>
<itemizedlist>
<listitem>
<simpara>
For interface-id, enter the interface type and number that identifies the RP
address. Valid interfaces include physical ports, port channels, and VLANs.
</simpara>
</listitem>
<listitem>
<simpara>
For scope ttl, specify the time-to-live value in hops. Enter a hop count that
is high enough so that the RP-announce messages reach all mapping agents in the
network. There is no default setting. The range is 1 to 255.
</simpara>
</listitem>
<listitem>
<simpara>
For <emphasis role="strong">group-list</emphasis> access-list-number, enter an IP standard access list number
from 1 to 99. If no access list is configured, the RP is used for all groups.
</simpara>
</listitem>
<listitem>
<simpara>
For interval seconds, specify how often the announcement messages must be
sent. The default is 60 seconds. The range is 1 to 16383.
</simpara>
</listitem>
</itemizedlist>
<screen>ip pim send-rp-announce _interface-id_ scope _ttl_ group-list _access-list-number_ interval _seconds_</screen>
<simpara>Find a multilayer switch whose connectivity is not likely to be interrupted,
and assign it the role of RP-mapping agent.</simpara>
<simpara>For scope ttl, specify the time-to-live value in hops to limit the RP discovery
packets. All devices within the hop count from the source device receive the
Auto-RP discovery messages. These messages tell other devices which group-to-RP
mapping to use to avoid conflicts (such as overlapping group-to-RP ranges).
There is no default setting. The range is 1 to 255.</simpara>
<screen>ip pim send-rp-discovery scope ttl</screen>
<simpara>Configure PIM-SM interfaces to use dens mode to flood Auto-RP traffic to 224.0.1.39 and 224.0.1.40.</simpara>
<screen>ip pim autorp listener</screen>
</section>
<section id="_prevent_join_messages_to_false_rps">
<title>Prevent Join Messages to false RPs</title>
<simpara>Determine whether the <emphasis role="strong">ip pim accept-rp</emphasis> command was previously configured
throughout the network by using the show running-config privileged EXEC
command. If the <emphasis role="strong">ip pim accept-rp</emphasis> command is not configured on any device, this
problem can be addressed later. In those routers or multilayer switches already
configured with the <emphasis role="strong">ip pim accept-rp</emphasis> command, you must enter the command again
to accept the newly advertised RP.</simpara>
<simpara>To accept all RPs advertised with Auto-RP and reject all other RPs by default,
use the <emphasis role="strong">ip pim accept-rp auto-rp</emphasis> global configuration command.</simpara>
<simpara>If all interfaces are in sparse mode, use a default-configured RP to support
the two well-known groups 224.0.1.39 and 224.0.1.40. Auto-RP uses these two
well-known groups to collect and distribute RP-mapping information. When this
is the case and the <emphasis role="strong">ip pim accept-rp auto-rp</emphasis> command is configured, another <emphasis role="strong">ip
pim accept-rp</emphasis> command accepting the RP must be configured as follows:</simpara>
<screen>Switch(config)# ip pim accept-rp 172.10.20.1 1
Switch(config)# access-list 1 permit 224.0.1.39
Switch(config)# access-list 1 permit 224.0.1.40</screen>
</section>
<section id="_prevent_candidate_rp_spoofing">
<title>Prevent candidate RP spoofing</title>
<simpara>Filter incoming RP announcement messages.</simpara>
<simpara>Enter this command on each mapping agent in the network.</simpara>
<simpara>Without this command, all incoming RP-announce messages are accepted by
default.</simpara>
<simpara>For <emphasis role="strong">rp-list</emphasis> access-list-number, configure an access list of candidate RP
addresses that, if permitted, is accepted for the group ranges supplied in the
group-list access-list-number variable. If this variable is omitted, the filter
applies to all multicast groups.</simpara>
<simpara>If more than one mapping agent is used, the filters must be consistent across
all mapping agents to ensure that no conflicts occur in the Group-to-RP mapping
information.</simpara>
<screen>ip pim rp-announce-filter rp-list _access-list-number_ group-list _access-list-number_</screen>
</section>
<section id="_define_the_pim_domain_border">
<title>Define the PIM domain border</title>
<simpara>As IP multicast becomes more widespread, the chances of one PIMv2 domain
bordering another PIMv2 domain is increasing. Because these two domains
probably do not share the same set of RPs, BSR, candidate RPs, and candidate
BSRs, you need to constrain PIMv2 BSR messages from flowing into or out of the
domain. Allowing these messages to leak across the domain borders could
adversely affect the normal BSR election mechanism and elect a single BSR
across all bordering domains and co-mingle candidate RP advertisements,
resulting in the election of RPs in the wrong domain.</simpara>
<simpara>Define a PIM bootstrap message boundary for the PIM domain.</simpara>
<simpara>Enter this command on each interface that connects to other bordering PIM
domains. This command instructs the multilayer switch to neither send or
receive PIMv2 BSR messages on this interface as shown in Figure 33-8.</simpara>
<screen>(config-if)# ip pim bsr-border</screen>
<figure><title>Constraining PIMv2 BSR Messages</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/pim-constraining-bsr-messages.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/pim-constraining-bsr-messages.png</phrase></textobject>
</mediaobject>
</figure>
</section>
<section id="_define_the_ip_multicast_boundary">
<title>Define the IP multicast boundary</title>
<simpara>You define a multicast boundary to prevent Auto-RP messages from entering the
PIM domain. You create an access list to deny packets destined for 224.0.1.39
and 224.0.1.40, which carry Auto-RP information.</simpara>
<screen>(config-if)# ip multicast boundary access-list-number</screen>
</section>
<section id="_configure_candidate_bsrs">
<title>Configure candidate BSRs</title>
<simpara>You can configure one or more candidate BSRs. The devices serving as candidate
BSRs should have good connectivity to other devices and be in the backbone
portion of the network.</simpara>
<simpara>Configure your multilayer switch to be a candidate BSR.</simpara>
<itemizedlist>
<listitem>
<simpara>
For interface-id, enter the interface type and number on this switch from which the BSR address is derived to make it a candidate. This interface must be enabled with PIM. Valid interfaces include physical ports, port channels, and VLANs.
</simpara>
</listitem>
<listitem>
<simpara>
For hash-mask-length, specify the mask length (32 bits maximum) that is to be ANDed with the group address before the hash function is called. All groups with the same seed hash correspond to the same RP. For example, if this value is 24, only the first 24 bits of the group addresses matter.
</simpara>
</listitem>
<listitem>
<simpara>
(Optional) For priority, enter a number from 0 to 255. The BSR with the larger priority is preferred. If the priority values are the same, the device with the highest IP address is selected as the BSR. The default is 0.
</simpara>
</listitem>
</itemizedlist>
<screen>(config)# ip pim bsr-candidate _interface-id_ _hash-mask-length_ [priority]</screen>
</section>
<section id="_configure_candidate_rps">
<title>Configure Candidate RPs</title>
<simpara>You can configure one or more candidate RPs. Similar to BSRs, the RPs should
also have good connectivity to other devices and be in the backbone portion of
the network. An RP can serve the entire IP multicast address space or a portion
of it. Candidate RPs send candidate RP advertisements to the BSR. When deciding
which devices should be RPs, consider these options:</simpara>
<itemizedlist>
<listitem>
<simpara>
In a network of Cisco routers and multilayer switches where only Auto-RP is
used, any device can be configured as an RP.
</simpara>
</listitem>
<listitem>
<simpara>
In a network that includes only Cisco PIMv2 routers and multilayer switches
and with routers from other vendors, any device can be used as an RP.
</simpara>
</listitem>
<listitem>
<simpara>
In a network of Cisco PIMv1 routers, Cisco PIMv2 routers, and routers from
other vendors, configure only Cisco PIMv2 routers and multilayer switches as
RPs.
</simpara>
</listitem>
</itemizedlist>
<simpara>Configure your multilayer switch to be a candidate RP.</simpara>
<itemizedlist>
<listitem>
<simpara>
For interface-id, enter the interface type and number whose associated IP address is advertised as a candidate RP address. Valid interfaces include physical ports, port channels, and VLANs.
</simpara>
</listitem>
<listitem>
<simpara>
(Optional) For group-list access-list-number, enter an IP standard access list number from 1 to 99. If no group-list is specified, the multilayer switch is a candidate RP for all groups.
</simpara>
</listitem>
</itemizedlist>
<screen>ip pim rp-candidate interface-id [group-list access-list-number]</screen>
</section>
<section id="_delay_the_use_of_pim_shortest_path_tree">
<title>Delay the Use of PIM Shortest-Path Tree</title>
<simpara>The change from shared to source tree happens when the first data packet
arrives at the last-hop router (Router C in Figure 33-9). This change occurs
because the ip pim spt-threshold interface configuration command controls that
timing; its default setting is 0 kbps.</simpara>
<simpara>The shortest-path tree requires more memory than the shared tree but reduces
delay. You might want to postpone its use. Instead of allowing the leaf router
to immediately move to the shortest-path tree, you can specify that the traffic
must first reach a threshold.</simpara>
<simpara>You can configure when a PIM leaf router should join the shortest-path tree for
a specified group. If a source sends at a rate greater than or equal to the
specified kbps rate, the multilayer switch triggers a PIM join message toward
the source to construct a source tree (shortest-path tree). If the traffic rate
from the source drops below the threshold value, the leaf router switches back
to the shared tree and sends a prune message toward the source.</simpara>
<simpara>You can specify to which groups the shortest-path tree threshold applies by
using a group list (a standard access list). If a value of 0 is specified or if
the group list is not used, the threshold applies to all groups.</simpara>
<simpara>Specify the threshold that must be reached before moving to shortest-path tree
(spt).</simpara>
<itemizedlist>
<listitem>
<simpara>
For kbps, specify the traffic rate in kilobits per second. The default is 0
kbps. The range is 0 to 4294967.
</simpara>
</listitem>
<listitem>
<simpara>
Specify infinity if you want all sources for the specified group to use the
shared tree, never switching to the source tree.
</simpara>
</listitem>
<listitem>
<simpara>
(Optional) For group-list access-list-number, specify the access list created
in Step 2. If the value is 0 or if the group-list is not used, the threshold
applies to all groups.
</simpara>
</listitem>
</itemizedlist>
<screen>ip pim spt-threshold {kbps | infinity} [group-list access-list-number]</screen>
</section>
<section id="_modifying_the_pim_router_query_message_interval">
<title>Modifying the PIM Router-Query Message Interval</title>
<simpara>PIM routers and multilayer switches send PIM router-query messages to determine
which device will be the DR for each LAN segment (subnet). The DR is
responsible for sending IGMP host-query messages to all hosts on the directly
connected LAN.</simpara>
<simpara>With PIM DM operation, the DR has meaning only if IGMPv1 is in use. IGMPv1 does
not have an IGMP querier election process, so the elected DR functions as the
IGMP querier. With PIM SM operation, the DR is the device that is directly
connected to the multicast source. It sends PIM register messages to notify the
RP that multicast traffic from a source needs to be forwarded down the shared
tree. In this case, the DR is the device with the highest IP address.</simpara>
<simpara>The default is 30 seconds. The range is 1 to 65535.</simpara>
<screen>ip pim query-interval _seconds</screen>
</section>
<section id="_verify_2">
<title>Verify</title>
<simpara>Display information about interfaces configured for PIM.</simpara>
<screen>show ip pim interface [type number] [count]</screen>
<simpara>List the PIM neighbors discovered by the multilayer switch.</simpara>
<screen>show ip pim neighbor [type number]</screen>
<simpara>Display the elected BSR</simpara>
<screen>show ip pim bsr</screen>
<simpara>displays the RP that was selected for the specified group.</simpara>
<screen>show ip pim rp-hash group</screen>
<simpara>displays how the multilayer switch learns of the RP (through the BSR or the Auto-RP mechanism).</simpara>
<screen>show ip pim rp [group-name | group-address | mapping]</screen>
<simpara>Display the RP routers associated with a sparse-mode multicast group.</simpara>
<screen>show ip pim rp [group-name | group-address]</screen>
<simpara>Display how the multilayer switch is doing Reverse-Path Forwarding (that is, from the unicast routing table, DVMRP routing table, or</simpara>
<screen>show ip rpf {source-address | name}</screen>
<simpara>Query a multicast router or multilayer switch about which neighboring multicast devices are peering with it.</simpara>
<screen>mrinfo [hostname | address] [source-address | interface]</screen>
<simpara>Display IP multicast packet rate and loss information.</simpara>
<screen>mstat source [destination] [group]</screen>
<simpara>Trace the path from a source to a destination branch for a multicast distribution tree for a given group.</simpara>
<screen>mtrace source [destination] [group]</screen>
</section>
</section>
<section id="_troubleshoot_2">
<title>Troubleshoot</title>
<simpara>When debugging interoperability problems between PIMv1 and PIMv2, check these
in the order shown:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
Verify RP mapping with the show ip pim rp-hash privileged EXEC command,
making sure that all systems agree on the same RP for the same group.
</simpara>
</listitem>
<listitem>
<simpara>
Verify interoperability between different versions of DRs and RPs. Make sure
the RPs are interacting with the DRs properly (by responding with
register-stops and forwarding decapsulated data packets from registers).
</simpara>
</listitem>
</orderedlist>
<simpara><ulink url="http://www.cisco.com/c/en/us/td/docs/ios/12_4t/ip_mcast/configuration/guide/mctlsplt.html#wp1061381">Load splitting IP multicast traffic over ECMP</ulink></simpara>
</section>
<section id="_misc">
<title>misc</title>
<simpara>To be added in the text,</simpara>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>PIM type code</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="10*"/>
<colspec colname="col_2" colwidth="90*"/>
<thead>
<row>
<entry align="left" valign="top">Type  , Name</entry>
<entry align="left" valign="top">0     , Hello</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>1     , Register</simpara></entry>
<entry align="left" valign="top"><simpara>2     , Register Stop</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>3     , Join/Prune</simpara></entry>
<entry align="left" valign="top"><simpara>4     , Bootstrap</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>5     , Assert</simpara></entry>
<entry align="left" valign="top"><simpara>6     , Graft</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>7     , Graft-Ack</simpara></entry>
<entry align="left" valign="top"><simpara>8     , Candidate RP Advertisement</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>9     , State Refresh</simpara></entry>
<entry align="left" valign="top"><simpara>10    , DF Election</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>11-14 , Unassigned</simpara></entry>
<entry align="left" valign="top"><simpara>15    , Reserved for extension of type space</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>Define the ssm range of IP multicast addresses</simpara>
<screen>(config)# ip pim [vrf name] ssm { default | range access-list-number}</screen>
<simpara><emphasis role="strong">default</emphasis> defines the ssm range access list to 232/8</simpara>
</section>
</chapter>
<chapter id="_cgmp">
<title>CGMP</title>
<section id="_understanding_2">
<title>Understanding</title>
<simpara>CGMP is a protocol used on Cisco routers and multilayer switches connected to
Layer 2 Catalyst switches to perform tasks similar to those performed by IGMP.
CGMP permits Layer 2 group membership information to be communicated from the
CGMP server to the switch, which can learn on which ports multicast members
reside instead of flooding multicast traffic to all switch ports.</simpara>
<simpara>IGMP snooping is another method to constrain the flooding of multicast packets.</simpara>
<section id="_joining_a_group_with_cgmp">
<title>Joining a group with CGMP</title>
<simpara>Hosts connected to a Layer 2 Catalyst switch can join a multicast group by
sending an unsolicited IGMP membership report message to the target group
(224.1.2.3) as shown in Figure 33-7. Because LAN switches operate at Layer 2
and understand only MAC addresses, the source and destination fields of the
frame contain 48-bit MAC addresses for Host 3 (0080.c7a2.1093) and MAC-address
equivalent of the multicast group address (0100.5e01.0203).</simpara>
<simpara>The IGMP membership report is received by the Layer 2 switch and forwarded to
the CGMP server for normal IGMP processing. The CGMP server, which must have
CGMP enabled on the interface connected to the Layer 2 switch, receives the
membership report and translates the report into a CGMP join message. It sends
the CGMP join message to the switch through the well-known CGMP multicast MAC
address (0x0100.0cdd.dddd). When the Layer 2 switch receives the join message,
it updates its forwarding table to include the MAC-equivalent of the group
destination address and the applicable input and output switch ports.</simpara>
<figure><title>Host Joining a Group Using CGMP</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/cgmp-host-joining-a-group.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/cgmp-host-joining-a-group.png</phrase></textobject>
</mediaobject>
</figure>
</section>
<section id="_leaving_a_group_with_cgmp">
<title>Leaving a Group with CGMP</title>
<simpara>When an IGMPv2 host leaves a group, it can send an IGMP leave group message to
the all-multicast-routers group (224.0.0.2). The CGMP server translates this
leave group message into a CGMP leave message and sends it to the switch.</simpara>
<simpara>To expedite a host on a LAN leaving a multicast group, some Layer 2 Catalyst
switch software offers the CGMP Fast-Leave feature, which allows the switch to
perform IGMPv2 leave processing locally without involving the CGMP server and
accelerates the removal of unused CGMP groups. The host sends the leave group
message to the all-multicast-routers group (224.0.0.2). The Layer 2 switch
processes it and does not forward it to the CGMP server. The Layer 2 switch
sends an IGMP general query message on the port where the leave message was
received to determine if there are remaining members for the group on the port.
If no response is received, the Layer 2 switch sends an IGMP leave message to
the CGMP server, which sends a group-specific query to the multicast group to
see if there are any remaining members in the group. If there is no response,
the CGMP server updates its multicast routing table and sends a CGMP delete
group message to the Layer 2 switch, which updates its routing table.</simpara>
</section>
</section>
<section id="_configuring">
<title>Configuring</title>
<simpara>xxx</simpara>
</section>
</chapter>
<chapter id="_ip_multicast_routing_2">
<title>IP multicast routing</title>
</chapter>
</part>
<part id="_implement_network_security">
<title>Implement Network Security</title>
<chapter id="_access_control_list">
<title>Access control list</title>
<bibliography id="_references">
<title>References</title>
<simpara>sec-data-acl
= Zone Based Firewall</simpara>
</bibliography>
<section id="_concepts_21">
<title>Concepts</title>
</section>
<section id="_configurations_2">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_urpf">
<title>uRPF</title>
<section id="_concepts_22">
<title>Concepts</title>
</section>
<section id="_configurations_3">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_ip_source_guard">
<title>IP source guard</title>
<section id="_concepts_23">
<title>Concepts</title>
</section>
<section id="_configurations_4">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_aaa">
<title>AAA</title>
<section id="_ppp_security">
<title>PPP security</title>
</section>
</chapter>
<chapter id="_copp">
<title>CoPP</title>
<section id="_concepts_24">
<title>Concepts</title>
</section>
<section id="_configurations_5">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_ios_firewall">
<title>IOS Firewall</title>
<section id="_concepts_25">
<title>Concepts</title>
</section>
<section id="_configurations_6">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_ios_ips">
<title>IOS IPS</title>
<section id="_concepts_26">
<title>Concepts</title>
</section>
<section id="_configurations_7">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_ssh">
<title>SSH</title>
<section id="_concepts_27">
<title>Concepts</title>
</section>
<section id="_configurations_8">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_ieee_802_1x">
<title>IEEE 802.1X</title>
<section id="_definition_3">
<title>Definition</title>
</section>
<section id="_port_security">
<title>Port security</title>
</section>
</chapter>
<chapter id="_nat">
<title>NAT</title>
<section id="_concepts_28">
<title>Concepts</title>
<section id="_purpose">
<title>Purpose</title>
<itemizedlist>
<listitem>
<simpara>
NAT allows the IP network of an organization to appear from
the outside to use a different IP address space than what it is actually using.
</simpara>
</listitem>
<listitem>
<simpara>
Thus, NAT allows an organization with nonglobally routable addresses to connect
to the Internet by translating those addresses into a globally routable address
space.
</simpara>
</listitem>
<listitem>
<simpara>
NAT also allows a graceful renumbering strategy for organizations that are changing service providers or voluntarily renumbering into classless
interdomain routing (CIDR) blocks.
</simpara>
</listitem>
<listitem>
<simpara>
RFC 1631.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_inside_and_outside_address">
<title>Inside and outside address</title>
<simpara>The term <emphasis>inside</emphasis> in a NAT context refers to networks owned by an organization
that must be translated. When NAT is configured, hosts within this network will
have addresses in the local address space that will appear
to those outside the network as being in the global address space.</simpara>
<simpara>Similarly, the term <emphasis>outside</emphasis> refers to those networks to which the stub
network connects, and which are generally not under the control of the
organization. Hosts in outside networks can also be subject to translation, and
thus have local and global addresses.</simpara>
<simpara>NAT uses the following definitions:</simpara>
<informaltable tabstyle="horizontal" frame="none" colsep="0" rowsep="0"><tgroup cols="2"><colspec colwidth="15*"/><colspec colwidth="85*"/><tbody valign="top">
<row>
<entry>
<simpara>
Inside local address
</simpara>
</entry>
<entry>
<simpara>
The (private) IP address that is assigned to a host on the inside network.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
Inside global address
</simpara>
</entry>
<entry>
<simpara>
A (public) IP address that represents one or more inside local IP addresses to the outside world.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
Outside local address
</simpara>
</entry>
<entry>
<simpara>
The (private) IP address of an outside host as it appears to the inside network.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
Outside global address
</simpara>
</entry>
<entry>
<simpara>
The (public) IP address assigned to a host on the outside network by the owner of the host.
</simpara>
</entry>
</row>
</tbody></tgroup></informaltable>
</section>
<section id="_types_of_nat">
<title>Types of NAT</title>
<variablelist>
<varlistentry>
<term>
Static NAT
</term>
<listitem>
<simpara>
Statically correlates the same local host to the same public IP address.
Does not conserve IP addresses.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Dynamic NAT
</term>
<listitem>
<simpara>
One local host uses an available public IP address in a pool.
Does not conserve IP addresses.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
PAT
</term>
<listitem>
<simpara>
Like dynamic NAT but multiple local hosts share a single public address by multiplexing TCP/UDP ports.
Conserves IP addresses.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
NAT for overlapping address
</term>
<listitem>
<simpara>
Can be done with any of the first three types.
Translates both source and destination addresses, instead of just the source (for packets going from
enterprise to the Internet).
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_tcp_load_distribution_for_nat">
<title>TCP load distribution for NAT</title>
<itemizedlist>
<listitem>
<simpara>
Round-robin allocation of a virtual host that coordinates load sharing among real hosts.
</simpara>
</listitem>
</itemizedlist>
<figure><title>NAT TCP load distribution</title>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/nat-tcp-load-distribution.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/nat-tcp-load-distribution.png</phrase></textobject>
</mediaobject>
</figure>
</section>
<section id="_nat_order_of_operations">
<title>NAT order of operations</title>
<section id="_inside_to_outside">
<title>Inside-to-Outside</title>
<simpara>Inside-to-Outside       Outside-to-Inside</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
If IPSec then check input access list
</simpara>
</listitem>
<listitem>
<simpara>
decryption - for CET (Cisco Encryption Technology) or IPSec
</simpara>
</listitem>
<listitem>
<simpara>
check input access list
</simpara>
</listitem>
<listitem>
<simpara>
check input rate limits
</simpara>
</listitem>
<listitem>
<simpara>
input accounting
</simpara>
</listitem>
<listitem>
<simpara>
redirect to web cache
</simpara>
</listitem>
<listitem>
<simpara>
policy routing
</simpara>
</listitem>
<listitem>
<simpara>
routing
</simpara>
</listitem>
<listitem>
<simpara>
NAT inside to outside (local to global translation)
</simpara>
</listitem>
<listitem>
<simpara>
crypto (check map and mark for encryption)
</simpara>
</listitem>
<listitem>
<simpara>
check output access list
</simpara>
</listitem>
<listitem>
<simpara>
inspect (Context-based Access Control (CBAC))
</simpara>
</listitem>
<listitem>
<simpara>
TCP intercept
</simpara>
</listitem>
<listitem>
<simpara>
encryption
</simpara>
</listitem>
<listitem>
<simpara>
Queueing
</simpara>
</listitem>
</orderedlist>
</section>
<section id="_outside_to_inside">
<title>Outside-to-Inside</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>
If IPSec then check input access list
</simpara>
</listitem>
<listitem>
<simpara>
decryption - for CET or IPSec
</simpara>
</listitem>
<listitem>
<simpara>
check input access list
</simpara>
</listitem>
<listitem>
<simpara>
check input rate limits
</simpara>
</listitem>
<listitem>
<simpara>
input accounting
</simpara>
</listitem>
<listitem>
<simpara>
redirect to web cache
</simpara>
</listitem>
<listitem>
<simpara>
NAT outside to inside (global to local translation)
</simpara>
</listitem>
<listitem>
<simpara>
policy routing
</simpara>
</listitem>
<listitem>
<simpara>
routing
</simpara>
</listitem>
<listitem>
<simpara>
crypto (check map and mark for encryption)
</simpara>
</listitem>
<listitem>
<simpara>
check output access list
</simpara>
</listitem>
<listitem>
<simpara>
inspect CBAC
</simpara>
</listitem>
<listitem>
<simpara>
TCP intercept
</simpara>
</listitem>
<listitem>
<simpara>
encryption
</simpara>
</listitem>
<listitem>
<simpara>
Queueing
</simpara>
</listitem>
</orderedlist>
<simpara>Read more: <ulink url="http://www.cisco.com/c/en/us/support/docs/ip/network-address-translation-nat/6209-5.html#topic1NAT">order of operations</ulink></simpara>
</section>
</section>
</section>
<section id="_configuration_tasks_16">
<title>Configuration tasks</title>
<section id="_configure_static_translation_of_inside_source_address">
<title>Configure static translation of inside source address</title>
<screen>ip nat inside source static local-ip global-ip

interface type number
  ip address ip-address mask [secondary]
  ip nat inside

interface type number
  ip address ip-address mask
  ip nat outside</screen>
</section>
<section id="_configure_dynamic_translation_of_inside_source_address">
<title>Configure dynamic translation of inside source address</title>
<screen>ip nat pool name start-ip end-ip {netmask netmask | prefix-length prefix-length}
access-list access-list-number permit source [source-wildcard]
ip nat inside source list access-list -number pool name

interface type number
  ip address ip-address mask
  ip nat inside

interface type number
  ip address ip-address mask
  ip nat outside</screen>
</section>
<section id="_allow_internal_users_access_to_the_internet">
<title>Allow internal users access to the internet</title>
<screen>ip nat pool name start-ip end-ip {netmask netmask | prefix-length prefix-length}
access-list number permit a.b.c.d [e.f.g.h]
ip nat inside source list number pool name overload

interface type number
  ip address ip-address mask
  ip nat inside

interface type number
  ip address ip-address mask
  ip nat outside
end</screen>
</section>
<section id="_change_timeouts_value">
<title>Change timeouts value</title>
<screen>ip nat translation seconds
ip nat translation udp-timeout seconds
ip nat translation dns-timeout seconds
ip nat translation tcp-timeout seconds
ip nat translation finrst-timeout seconds
ip nat translation icmp-timeout seconds
ip nat translation syn-timeout seconds</screen>
</section>
<section id="_configure_dynamic_translation_of_overlapping_networks">
<title>Configure dynamic translation of overlapping networks</title>
<simpara>Configure dynamic translation of overlapping networks if your IP addresses in the stub network are
legitimate IP addresses belonging to another network and you want to communicate with those hosts or
routers using dynamic translation.</simpara>
<screen>ip nat pool name start-ip end-ip {netmask netmask | prefix-length prefix-length}
access-list access-list-number permit source [source-wildcard]
ip nat outside source list access-list-number pool name

interface type number
  ip address ip-address mask
  ip nat inside

interface type number
  ip address ip-address mask
  ip nat outside</screen>
</section>
<section id="_server_tcp_load_balancing">
<title>Server TCP load balancing</title>
<screen>ip nat pool name start-ip end-ip {netmask netmask | prefix-length prefix-length} type rotary
access-list access-list-number permit source [source-wildcard]
ip nat inside destination-list access-list-number pool name

interface type number
  ip address ip-address mask
  ip nat inside

interface type number
  ip address ip-address mask
  ip nat outside</screen>
</section>
<section id="_display_nat_translation_information">
<title>Display NAT translation information</title>
<screen>show ip nat translations [verbose]
show ip nat statistics</screen>
</section>
<section id="_clear_nat_entries_before_the_timeout">
<title>Clear NAT entries before the timeout</title>
<screen>clear ip nat translation inside global-ip local-ip outside local-ip global-ip
clear ip nat translation outside global-ip local-i p
clear ip nat translation protocol inside global-ip global-port local-ip local-port outside local-ip local-port-global-ip global-port
clear ip nat translation {* | [forced] | [inside global-ip local-ip] [outside local-ip global-ip]}</screen>
</section>
<section id="_enable_syslog_for_logging_nat_translations">
<title>Enable Syslog for logging NAT translations</title>
<screen>ip nat log translations syslog
no logging console</screen>
</section>
</section>
</chapter>
<chapter id="_routing_protocol_authentication">
<title>Routing Protocol Authentication</title>
</chapter>
<chapter id="_device_access_control">
<title>Device Access control</title>
<section id="_concepts_29">
<title>Concepts</title>
</section>
<section id="_commands_3">
<title>Commands</title>
</section>
</chapter>
<chapter id="_device_security">
<title>Device security</title>
<section id="_passwords_protection_for_the_cli">
<title>Passwords protection for the CLI</title>
<simpara>--todo: replaces images by graphviz</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/user-and-enable-modes.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>Router user and enable mode</phrase></textobject>
</mediaobject>
</informalfigure>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">login</emphasis> line subcommand prompts the user for a password from console, telnet, aux (only routers)
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">enable</emphasis> access user mode
</simpara>
</listitem>
</itemizedlist>
<screen>line con 0
  login
  password fred</screen>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">service passwordr-encryption</emphasis> encrypt all existing clear-text password in the running-config.
</simpara>
</listitem>
<listitem>
<simpara>
weak encryption, can be broken easily
</simpara>
</listitem>
<listitem>
<simpara>
enable secret
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_using_ssh">
<title>using SSH</title>
<itemizedlist>
<listitem>
<simpara>
by default , routers and switches can act as SSH clients
</simpara>
</listitem>
<listitem>
<simpara>
to configure SSH server
</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
Use K9 image for SSH support
</simpara>
</listitem>
<listitem>
<simpara>
configure host name
</simpara>
</listitem>
<listitem>
<simpara>
configure domain name
</simpara>
</listitem>
<listitem>
<simpara>
configure a client authentication method
</simpara>
</listitem>
<listitem>
<simpara>
generate RSA keys
</simpara>
</listitem>
<listitem>
<simpara>
specify the SSH version
</simpara>
</listitem>
<listitem>
<simpara>
disable telnet on the vty lines
</simpara>
</listitem>
<listitem>
<simpara>
enable SSH on the vty lines
</simpara>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
</section>
<section id="_use_aaa_for_user_mode_and_privileged_mode">
<title>Use AAA for user mode and privileged mode</title>
<formalpara><title>Radius vs TACACS+</title><para>Criteria            , RADIUS        , TACACS+
scope of encryption , password only , entire payload
Layer 4 protocol    , UDP           , TCP
Well-knon port      , 1812          , 49
IOS default port    , 1645          , 49
Standard            , RFC 2865      , Cisco</para></formalpara>
</section>
<section id="_readings_3">
<title>readings</title>
<simpara><ulink url="http://www.cisco.com/en/US/docs/ios-xml/ios/iproute_ospf/command/ospf-a1.html#wp258289">Guide to harden Cisco IOS devices</ulink></simpara>
</section>
</chapter>
</part>
<part id="_implement_network_services">
<title>Implement Network Services</title>
<chapter id="_hsrp">
<title>HSRP</title>
<section id="_understand">
<title>Understand</title>
<simpara>other dynamic discovery mechanism</simpara>
<itemizedlist>
<listitem>
<simpara>
proxy ARP
</simpara>
</listitem>
<listitem>
<simpara>
dynamic routing protocol
</simpara>
</listitem>
<listitem>
<simpara>
ICMP router discovery protocol
</simpara>
</listitem>
<listitem>
<simpara>
DHCP
</simpara>
</listitem>
</itemizedlist>
<simpara>HSRP operations</simpara>
<itemizedlist>
<listitem>
<simpara>
set of routers sharing one virtual IP address and one MAC address
</simpara>
</listitem>
<listitem>
<simpara>
elect one active router with the highest (priority, IP address)
</simpara>
</listitem>
<listitem>
<simpara>
standy router takes over if Active router fails-
</simpara>
</listitem>
<listitem>
<simpara>
elect new standby router if standby router fails or becomes the active router.
</simpara>
</listitem>
<listitem>
<simpara>
to minimize network traffic, only the active and standby router send periodic HSRP messages.
</simpara>
</listitem>
<listitem>
<simpara>
a router may participate in multiple groups with seperate state and timers for each group
</simpara>
</listitem>
<listitem>
<simpara>
unique group id per vlan
</simpara>
</listitem>
<listitem>
<simpara>
hsrp address = 0000.0c07.AC<emphasis role="strong"> (where </emphasis> is the HSRP group id)
</simpara>
</listitem>
</itemizedlist>
<simpara>HSRP features</simpara>
<itemizedlist>
<listitem>
<simpara>
preemption: the router with the highest priority becomes immediately the active router by sending a <emphasis role="strong">coup</emphasis> message,
  The previous active router changes to the <emphasis role="strong">speak</emphasis> state and sends a <emphasis role="strong">resign</emphasis> message.
</simpara>
</listitem>
<listitem>
<simpara>
Preempt delay:
</simpara>
<itemizedlist>
<listitem>
<simpara>
delay preemption for a configurate time period allowing the router to populate its routing table
</simpara>
</listitem>
<listitem>
<simpara>
delays starts when preemption starts in IOS &gt; 12.0(9) otherwise when the router is reloaded.
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Interface tracking
</simpara>
<itemizedlist>
<listitem>
<simpara>
reduce HSRP priority if the monitored interface goes down, allowing another HSRP router to bacome active if it has preemption enabled.
</simpara>
</listitem>
<listitem>
<simpara>
cumulative reduction if multiple tracked interfaces are down
</simpara>
</listitem>
<listitem>
<simpara>
configurable decrement value (default = 10)
</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>
Syslog support
</simpara>
</listitem>
<listitem>
<simpara>
HSRP debugging
</simpara>
</listitem>
<listitem>
<simpara>
SNMP MIB
</simpara>
</listitem>
<listitem>
<simpara>
MPLS support
  *
</simpara>
</listitem>
<listitem>
<simpara>
ICMP redirects supports
</simpara>
<itemizedlist>
<listitem>
<simpara>
disable ICMP redirects on HSRP interfaces in IOS &lt; 12.1(3)T
</simpara>
</listitem>
<listitem>
<simpara>
HSRP router redirects the endstation to the virtual IP address instead of a particular IP address
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section id="_configure">
<title>Configure</title>
</section>
<section id="_verify_3">
<title>Verify</title>
</section>
<section id="_debug">
<title>Debug</title>
</section>
<bibliography id="_references_2">
<title>References</title>
<simpara><ulink url="http://www.cisco.com/en/US/tech/tk648/tk362/technologies_tech_note09186a0080094a91.shtml#intro">http://www.cisco.com/en/US/tech/tk648/tk362/technologies_tech_note09186a0080094a91.shtml#intro</ulink></simpara>
</bibliography>
</chapter>
<chapter id="_glbp">
<title>GLBP</title>
<section id="_concepts_30">
<title>Concepts</title>
</section>
<section id="_configurations_9">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_vrrp">
<title>VRRP</title>
<section id="_concepts_31">
<title>Concepts</title>
</section>
<section id="_configurations_10">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_ntp">
<title>NTP</title>
<section id="_concepts_32">
<title>Concepts</title>
</section>
<section id="_configurations_11">
<title>Configurations</title>
</section>
</chapter>
<chapter id="_dhcp_2">
<title>DHCP</title>
<section id="_concepts_33">
<title>Concepts</title>
</section>
<section id="_configurations_12">
<title>Configurations</title>
</section>
</chapter>
</part>
<part id="_implement_qos">
<title>Implement QoS</title>
<screen>Weight: 6%

8.0 Implement QoS
8.1 Implement MQC
8.1.a NBAR
8.1.b CBWFQ, MDRR, and LLQ
8.1.c Classification
8.1.d Policing
8.1.e Shaping
8.1.f Marking
8.1.g WRED and RED
8.2 Implement Layer 2 QoS: WRR, SRR, and policies
8.3 Implement LFI for Frame Relay
8.4 Implement generic traffic shaping
8.5 Implement RSVP</screen>
<chapter id="_mqc">
<title>MQC</title>
<section id="_mqc_structure">
<title>MQC structure</title>
<itemizedlist>
<listitem>
<simpara>
define a traffic class with <emphasis role="strong">class map</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
create a traffic policy with <emphasis role="strong">policy map</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
attach the traffic policy to an interface with <emphasis role="strong">service-policy</emphasis>
</simpara>
</listitem>
<listitem>
<simpara>
restrictions: maximum of 256 classes in a single policy map
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_fields_that_can_be_marked_for_qos_purposes">
<title>Fields that can be marked for QoS purposes</title>
<itemizedlist>
<listitem>
<simpara>
IPP, IP DSCP, DS field, ToS byte, CoS,Frame Relay  DE, ATM CLP, MPLS EXP
</simpara>
</listitem>
</itemizedlist>
<section id="_ipp">
<title>IPP</title>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="images/ipp-vs-dscp.png" contentdepth="200"/>
  </imageobject>
  <textobject><phrase>images/ipp-vs-dscp.png</phrase></textobject>
</mediaobject>
</informalfigure>
<table
frame="none"
rowsep="1" colsep="0"
>
<title>IPP and Class Selector DSCP values</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>DSCP CS name</simpara></entry>
<entry align="left" valign="top"><simpara>IPP names</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>CS0/Default</simpara></entry>
<entry align="left" valign="top"><simpara>routine</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>CS1</simpara></entry>
<entry align="left" valign="top"><simpara>priority</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>CS2</simpara></entry>
<entry align="left" valign="top"><simpara>immediate</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>CS3</simpara></entry>
<entry align="left" valign="top"><simpara>flash</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>CS4</simpara></entry>
<entry align="left" valign="top"><simpara>flash override</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>CS5</simpara></entry>
<entry align="left" valign="top"><simpara>critical</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>CS6</simpara></entry>
<entry align="left" valign="top"><simpara>internetwork control</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>CS7</simpara></entry>
<entry align="left" valign="top"><simpara>network control</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="_dscp">
<title>DSCP</title>
<itemizedlist>
<listitem>
<simpara>
PHB: Per-hop Behavior
</simpara>
</listitem>
<listitem>
<simpara>
Expedited Forwarding:
</simpara>
</listitem>
<listitem>
<simpara>
packets given queunino
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_elements_of_a_traffic_class">
<title>Elements of a traffic class</title>
<simpara>A traffic class contains 3 major elts: a name, a series of <emphasis role="strong">match</emphasis> commands followed by <emphasis role="strong">match-all</emphasis> (default) or <emphasis role="strong">match-any</emphasis></simpara>
<itemizedlist><title>match commands that can be used with MQC</title>
<listitem>
<simpara>
match access-group
</simpara>
</listitem>
<listitem>
<simpara>
match any
</simpara>
</listitem>
<listitem>
<simpara>
match class-map
</simpara>
</listitem>
<listitem>
<simpara>
match cos
</simpara>
</listitem>
<listitem>
<simpara>
match destination-address mac
</simpara>
</listitem>
<listitem>
<simpara>
match discard-class
</simpara>
</listitem>
<listitem>
<simpara>
match [ip] dscp
</simpara>
</listitem>
<listitem>
<simpara>
match field
</simpara>
</listitem>
<listitem>
<simpara>
match fr-dlci
</simpara>
</listitem>
<listitem>
<simpara>
match input-interface
</simpara>
</listitem>
<listitem>
<simpara>
match ip rtp
</simpara>
</listitem>
<listitem>
<simpara>
match mpls experimental
</simpara>
</listitem>
<listitem>
<simpara>
match mpls experimental topmost
</simpara>
</listitem>
<listitem>
<simpara>
match not  // add a note here
</simpara>
</listitem>
<listitem>
<simpara>
match packet length
-
</simpara>
</listitem>
<listitem>
<simpara>
etc
</simpara>
</listitem>
</itemizedlist>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="75*"/>
<thead>
<row>
<entry align="left" valign="top">Command                  </entry>
<entry align="left" valign="top"> Purpose</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>match protocol</simpara></entry>
<entry align="left" valign="top"><simpara>Configures the match criteria for a class map on the basis of the specified protocol.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match protocol citrix</simpara></entry>
<entry align="left" valign="top"><simpara>Configures NBAR to match Citrix traffic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match protocol fasttrack</simpara></entry>
<entry align="left" valign="top"><simpara>Configures NBAR to match FastTrack peer-to-peer traffic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match protocol gnutella</simpara></entry>
<entry align="left" valign="top"><simpara>Configures NBAR to match Gnutella peer-to-peer traffic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match protocol http</simpara></entry>
<entry align="left" valign="top"><simpara>Configures NBAR to match HTTP traffic by URL, host,MIME type, or fields in HTTP packet headers.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match protocol rtp</simpara></entry>
<entry align="left" valign="top"><simpara>Configures NBAR to match Real-Time Transport Protocol (RTP) traffic.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match qos-group</simpara></entry>
<entry align="left" valign="top"><simpara>Identifies a specific QoS group value as a match criterion.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match source-address mac</simpara></entry>
<entry align="left" valign="top"><simpara>Uses the source MAC address as a match criterion.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match start</simpara></entry>
<entry align="left" valign="top"><simpara>Configures the match criteria for a class map on the basis of the datagram header (Layer 2) or the network header (Layer 3).</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>match tag</simpara></entry>
<entry align="left" valign="top"><simpara>Specifies tag type as a match criterion.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<note><simpara>nbar cannot classify ipx
nbar cannot classify multicast traffic</simpara></note>
</section>
<section id="_elements_of_a_traffic_policy">
<title>Elements of a traffic policy</title>
<itemizedlist>
<listitem>
<simpara>
contains 3 elts: name, traffic class, command to enable the QoS feature
</simpara>
</listitem>
</itemizedlist>
<informaltable
frame="none"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="75*"/>
<thead>
<row>
<entry align="left" valign="top">Command                                      </entry>
<entry align="left" valign="top"> Purpose</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>random-detect discard-class</simpara></entry>
<entry align="left" valign="top"><simpara>Configures the WRED parameters for a discard- class value for a class in a policy map.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>random-detect discard-class-based</simpara></entry>
<entry align="left" valign="top"><simpara>Configures  WRED on the basis of the discard class value of a packet.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>random-detect ecn</simpara></entry>
<entry align="left" valign="top"><simpara>Enables explicit congestion notification (ECN).</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>random-detect exponential-weighting-constant</simpara></entry>
<entry align="left" valign="top"><simpara>Configures the exponential weight factor for the average queue size calculation for the queue reserved for a class.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>random-detect precedence</simpara></entry>
<entry align="left" valign="top"><simpara>Configure the WRED parameters for a particular IP Precedence for a class policy in a policy map.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>set atm-clp</simpara></entry>
<entry align="left" valign="top"><simpara>Sets the cell loss priority (CLP) bit when a policy map is configured.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>set cos</simpara></entry>
<entry align="left" valign="top"><simpara>Sets the  Layer 2 class of service (CoS) value of an outgoing packet.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>set discard-class</simpara></entry>
<entry align="left" valign="top"><simpara>Marks a packet with a discard-class value.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>set [ip] dscp</simpara></entry>
<entry align="left" valign="top"><simpara>Marks a packet by setting the differentiated services code point (DSCP) value in the type of service (ToS) byte.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>set fr-de</simpara></entry>
<entry align="left" valign="top"><simpara>Changes the discard eligible (DE) bit setting in the address field of a Frame Relay frame to 1 for all traffic leaving an interface.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>set mpls experimental</simpara></entry>
<entry align="left" valign="top"><simpara>Designates the value to which the  MPLS bits are set if the packets match the specified policy map.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>set precedence</simpara></entry>
<entry align="left" valign="top"><simpara>Sets the precedence value in the packet header.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>set qos-group</simpara></entry>
<entry align="left" valign="top"><simpara>Sets a  QoS group identifier (ID) that can be used later to classify packets.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>shape</simpara></entry>
<entry align="left" valign="top"><simpara>Shapes traffic to the indicated bit rate according to the algorithm specified.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>shape adaptive</simpara></entry>
<entry align="left" valign="top"><simpara>Configures a Frame  Relay interface or a point-to- point subinterface to estimate the available bandwidth by backward explicit congestion notification (BECN) integration while trafficommand</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>shape fecn-adaptative</simpara></entry>
<entry align="left" valign="top"><simpara>configures a Frame Relay interface to reflect FECN bits as BECN bits in Q.922 test response messages.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<section id="_service_policy">
<title>Service policy</title>
<screen>(config-if)# service-policy {input | output } policy-map-name</screen>
</section>
</section>
<section id="_verification">
<title>Verification</title>
<simpara>Display all class maps and their matching criteria</simpara>
<screen>&gt; show class-map</screen>
<simpara>Display the configuration for the specified class of the specified policy map</simpara>
<screen>&gt; show policy-map policy-name class class-name</screen>
<simpara>Display the configuration of all classes for all existing policy maps</simpara>
<screen>&gt; show policy-map interface interface-name interface-number</screen>
</section>
</chapter>
<chapter id="_rsvp">
<title>RSVP</title>
<section id="_concepts_34">
<title>Concepts</title>
</section>
<section id="_configuration_tasks_17">
<title>Configuration tasks</title>
<screen>ip rsvp bandwidth [interface-kbps [single-flow-kbps] ]</screen>
<itemizedlist>
<listitem>
<simpara>
default 75 % can be allocated by to RSVP and up to 75% of the total bandwidth is available for a single flow
</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
</part>
</book>
